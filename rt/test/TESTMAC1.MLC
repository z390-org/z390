*********************************************************************
* Copyright 2005 Automated Software Tools Corporation               *
* Copyright 2013 Cat Herder Software, LLC                           *
* Copyright 2018 Joachim Bartz, Germany                             *
*                                                                   *
* This source code is part of z390 assembler/emulator package.      *
*                                                                   *
* The z390 package is distributed under GNU general public license  *
*                                                                   *
* Author - Don Higgins                                              *
*********************************************************************
* TESTMAC1.MLC                                                      *
* mz390 substring operations and DOUBLE                             *
*********************************************************************
* 2005-09-30  DSH          Initial version                          *
* 2006-03-21  DSH RPI-253  Add test for macro labels starting       *
*                          with ._                                  *
* 2006-03-21  DSH RPI-257  Add test for * as second operand         *
* 2006-04-07  DSH RPI-274  Add test for 'c''...''' sdt within       *
*                          strings                                  *
* 2006-07-03  DSH RPI-336  Add test for D' operator                 *
* 2006-07-03  DSH RPI-338  Add test for 'c''...''' sdt within       *
*                          strings                                  *
* 2006-07-03  DSH RPI-340  Test T' for EQU with 3rd operand plus    *
*                          mult. types                              *
* 2006-07-03  DSH RPI-353  Test prefix operator followed by (...)   *
* 2006-07-08  DSH RPI-359  Test keyword parm with mixed case        *
* 2006-08-30  DSH RPI-422  Test padded setc compare with high low   *
*                          chars                                    *
* 2006-09-21  DSH RPI-447  Test N'&PARM(&VAR)                       *
* 2007-06-10  DSH RPI-633  Test macro label parameters              *
* 2007-08-22  DSH RPI-673  Test &var in macro inline prototype name *
*                          field                                    *
* 2008-11-07  DSH RPI-938  Double quotes in MNOTE text to avoid     *
*                          syntax errors                            *
* 2001-01-25  DSH RPI-1139 Add quotes for DOUBLE for NOALLOW        *
*********************************************************************

TESTMAC1 SUBENTRY
         WTO   'TESTMAC1 TEST SUBSTRINGS, '''' (DOUBLE QUOTES), AND &&'
         SUBEXIT
&N       SETA  &N+1
&TEXT    SETC  'ABC'
         DC    C'ABC=&TEXT'
&A       SETC  '&TEXT'(1,1)
         DC    C'A=&A'
&BC      SETC  '&TEXT'(2,2)
         DC    C'BC=&BC'
&TWOAMP  SETC  '&&&&'
         MNOTE '&&TWOAMP=&TWOAMP'
         DC    C'TWOAMP=&TWOAMP'
&DQ      SETC  ''''''
         MNOTE '&&DQ=&DQ'
         DC    C'DQ=&DQ'
         DC     C'A',C'B',CL2'ABC',(2)C'1' TEST COMMENT, MULT FLD,
         dc     c'A',c'B',cl2'ABC',(2)c'1' EXPLICIT LEN, DUP FIELD, LC
         MACRO 
         TESTF  &A,&B
&I       SETA  ('&A' FIND '&B')   RPI-1139
&DA      SETC  (DOUBLE '&A')      RPI-1139
&DB      SETC  (DOUBLE '&B')      RPI-1139
         MNOTE '&A FIND &B = &I'
         MEND
         TESTF ABC,A
         TESTF ABC,B
         TESTF ABC,C
         TESTF ABC,DCB
         TESTF ABC,X
         TESTF X,
         TESTF ,X
         MACRO 
         TESTI  &A,&B
&I       SETA  ('&A' INDEX '&B') RPI-1139
&DA      SETC  (DOUBLE '&A')     RPI-1139
&DB      SETC  (DOUBLE '&B')     RPI-1139
         MNOTE '&A INDEX &B = &I'
         MEND
         TESTI ABC,ABC
         TESTI ABC,AB
         TESTI ABC,BC
         TESTI ABC,ABCD
         TESTI ABC,
         TESTI ,ABC
* TEST MACRO LABELS STARTING WITH ._
         AIF   (1 EQ 1)._OK
         MNOTE 12,'AIF BRANCH TO ._OK FAILED'
         MEXIT
._OK     ANOP
         MNOTE 'BRANCH TO ._OK IS OK'
* TEST * AS SECOND OPERAND
&BC      SETC   'ABC'(2,*)
         MNOTE 'BC=&BC'
* TEST SDT WITHIN STRING
&SDT     SETC   (DOUBLE 'C''X''')  RPI 938
         MNOTE  'SDT=&SDT'
* TEST DUPLICATION OF STRING OPERATOR (...)'...'
&LBL     SETC  (4)'X'
.* &LBL     SETC  '&LBL'.(8-K'&LBL)' '    * Fill up to 8 chars
         MNOTE 'LBL=&LBL'
* TEST D' OPERATOR
&V       SETC  'X'
         AIF   (NOT D'&V).OK1
         MNOTE 'X DEFINED ERROR'
.OK1     MNOTE 'X NOT DEFINED OK'
X        EQU   1
         AIF   (D'&V).OK2
         MNOTE 'X NOT DEFINED ERROR'
.OK2     MNOTE 'X DEFINED OK'
* TEST T' FOR EQU WITH THIRD OPERAND
X2       EQU   X'80',X'80',C'b'
&TX2     SETC T'X2
         MNOTE 'TX2=&TX2'
         MACRO 
         TESTTM
         MEND
TM       TESTTM
&TTM     SETC   T'TM
         MNOTE  'TTM=&TTM'
X3       EQU    1,2,C'X'
Y3       EQU    X3
&TY3     SETC   T'Y3
         MNOTE  'T''Y3=&TY3'
* TEST PREFIX OPERATOR FOLLOWED BY (..)
&X4      SETC  UPPER('abc')
         DC    C'&X4'
* TEST MACRO WITH MIXED CASE KEYWORD
         MACRO
         TESTMC &ARmode=X
         MNOTE 'TESTMC ARmode=&ARMODE'
         MEND
         TESTMC
         TESTMC ARMODE=Y
* TEST PADDED SETC COMPARE WITH HIGH LOC CHARS
         AIF ('A ' GE 'A1').AIFERR
         AIF ('A1' LE 'A ').AIFERR
         MNOTE 'A LT A1 AND A1 GT A OK'
         AGO   .ENDAIF
.AIFERR  MNOTE 'A GE A1 OR A1 LT A ERROR'
.ENDAIF  ANOP
* TEST N'&PARM(&VAR)
         MACRO
         TESTNPV &P1,&P2,&P3
&NPV     SETA    N'&P2(&P3)
         AIF     (&P1 NE &NPV).NPVERR
         MNOTE   'NPV &P1 EQ &NPV OK'
         MEXIT
.NPVERR  MNOTE   'NPV ERROR &P1 VS &NPV'
         MEND
         TESTNPV 1,A,1
         TESTNPV 3,(A,(B,C,D)),2
* TEST MACRO LABEL PARAMETERS FOR RPI-633
         MACRO
&N       TESTL
&DN      SETC  (DOUBLE '&N')    RPI-938 RPI-1139
&TN      SETC  T'&N
         MNOTE 'N=&DN TN=&TN'
         MEND
A+B      TESTL
A        TESTL
1        TESTL
1(2)     TESTL
'A'      TESTL
TESTPC1  TESTL
* TEST VAR NAME FIELD IN INLINE MACRO PROTOTYPE
&NAME SETC  'TESTN'
      MACRO
&N    &NAME &TEXT
&DQTEXT SETC '&TEXT'(2,K'&TEXT-2)
&N    MNOTE '&DQTEXT'
      MEND
A     TESTN 'TEST NAME SUBSTITUTION'
      END