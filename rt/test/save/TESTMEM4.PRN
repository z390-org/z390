TESTMEM4  MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I Copyright 2013 Cat Herder Software, LLC
AZ390I Copyright 2018 Joachim Bartz, Germany
AZ390I z390 is licensed under GNU General Public License
AZ390I program = rt\test\TESTMEM4
AZ390I options = sysmac(C:\Users\Achim\GitHub\z390\mac+.) 
  syscpy(C:\Users\Achim\GitHub\z390\mac+.) @rt\Options.opt=(bal notiming stats) 
  mem(2) systerm(rt\test\RTTEST)
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=000001E8 TYPE=CST NAME=TESTMEM4
Assembler Listing
000000                                        (1/1)1 *********************************************************************
000000                                        (1/2)2 * Copyright 2005 Automated Software Tools Corporation               *
000000                                        (1/3)3 * Copyright 2013 Cat Herder Software, LLC                           *
000000                                        (1/4)4 * Copyright 2018 Joachim Bartz, Germany                             *
000000                                        (1/5)5 *                                                                   *
000000                                        (1/6)6 * This source code is part of z390 assembler/emulator package.      *
000000                                        (1/7)7 *                                                                   *
000000                                        (1/8)8 * The z390 package is distributed under GNU general public license  *
000000                                        (1/9)9 *                                                                   *
000000                                      (1/10)10 * Author - Don Higgins                                              *
000000                                      (1/11)11 *********************************************************************
000000                                      (1/12)12 * 2005-09-30 DSH         Initial version                            *
000000                                      (1/13)13 * 2006-11-12 DSH RPI-491 Test by Melvyn Maltz for corruption on FQE *
000000                                      (1/14)14 *                        merge                                      *
000000                                      (1/15)15 * 2007-01-22 DSH RPI-542 Correct output R1=ADDR for GETMAIN         *
000000                                      (1/16)16 *********************************************************************
000000                                      (1/18)17 TESTMEM4 SUBENTRY 
000000                                      (2/78)18+TESTMEM4 CSECT 
000000 90ECD00C                            (2/168)19+         STM   14,12,12(13)
000004 45FF0068                            (2/169)20+         BAL   15,104(15)
000008 0000000000000000                    (2/170)21+         DC    18F'0'
000050 E3C5E2E3D4C5D4F4                    (2/171)22+         DC    CL8'TESTMEM4'
000058 F0F161F0F261F0F5                    (2/172)23+         DC    CL8'01/02/05'
000060 F2F24BF3F3404040                    (2/173)24+         DC    CL8'22.33'
000068 50FD0008                            (2/174)25+         ST    15,8(13)
00006C 50DF0004                            (2/175)26+         ST    13,4(15)
000070 18DF                                (2/176)27+         LR    13,15
000072                                     (2/189)28+         USING TESTMEM4+8,13
LISTUSE TESTMEM4 ESD=0001 LOC=00000008 LEN=01000 REG=D OFF=00000 LAB=
000072                                      (1/19)30          WTO   'TESTMEM4 - TEST FIX FOR RPI-491 FQE MERGE ERROR'
000072 A715001C                0000AA       (3/49)32+         BRAS  1,*+(WTO#0002_EOT-*+1)/2*2
000076 00330000E3C5E2E3                     (3/50)33+         DC    AL2(WTO#0002_EOT-*,0),C'TESTMEM4 - TEST FIX FOR RPI-491 FQE MERGE ERROR'
0000A9                  000000A9            (3/51)35+WTO#0002_EOT     EQU *
0000AA 0A23                                 (3/52)36+         SVC   35
0000AC                                      (1/20)38 *
0000AC                                      (1/21)39 * TS INST FOR INTERCEPT PURPOSES ONLY
0000AC                                      (1/22)40 *
0000AC                  000000AC            (1/23)41 CYCLE1   EQU   *
0000AC 9300D1D0                0001D8       (1/24)42          TS    BYTE
0000B0 41B00032                             (1/25)43          LA    R11,50
0000B4                                      (1/26)44          GETMAIN R,LV=(R11)       OP2
0000B4 181B                                 (5/28)46+         LR    1,R11
0000B6 41000000                            (4/130)48+         LA    0,B'00'
0000BA 0A04                                (4/131)49+         SVC   4 GMAIN R0=(X'02'=31B,X'01'=COND),R1=LEN OUT(R0=L,R1=A)
0000BC 5010D1C4                0001CC       (1/27)51          ST    R1,SAVE1           STORE IT              RPI-542
0000C0 1831                                 (1/28)52          LR    R3,R1              SAVE ADDRESS          RPI-542
0000C2 92FF3000                             (1/29)53          MVI   0(R3),X'FF'        MARK 1ST BYTE
0000C6                                      (1/30)54 *
0000C6 41B00064                             (1/31)55          LA    R11,100            GETMAIN LENGTH
0000CA                                      (1/32)56          GETMAIN R,LV=(R11)       OP1
0000CA 181B                                 (5/28)58+         LR    1,R11
0000CC 41000000                            (4/130)60+         LA    0,B'00'
0000D0 0A04                                (4/131)61+         SVC   4 GMAIN R0=(X'02'=31B,X'01'=COND),R1=LEN OUT(R0=L,R1=A)
0000D2 5010D1C8                0001D0       (1/33)63          ST    R1,SAVE2           STORE IT              RPI-542
0000D6 1831                                 (1/34)64          LR    R3,R1              SAVE ADDRESS          RPI-542
0000D8 92FF3000                             (1/35)65          MVI   0(R3),X'FF'        MARK 1ST BYTE
0000DC                                      (1/36)66 *
0000DC                                      (1/37)67          GETMAIN R,LV=128K        MAXIMUM TRANSLATE TABLE
0000DC 5810D1D8                0001E0      (4/110)69+         L    1,=A(131072)  RPI 117
0000E0 41000000                            (4/130)70+         LA    0,B'00'
0000E4 0A04                                (4/131)71+         SVC   4 GMAIN R0=(X'02'=31B,X'01'=COND),R1=LEN OUT(R0=L,R1=A)
0000E6 5010D1CC                0001D4       (1/38)73          ST    R1,SAVE3           STORE IT              RPI-542
0000EA 1831                                 (1/39)74          LR    R3,R1              SAVE ADDRESS          RPI-542
0000EC 92FF3000                             (1/40)75          MVI   0(R3),X'FF'        MARK 1ST BYTE
0000F0                                      (1/41)76 *
0000F0 9300D1D0                0001D8       (1/42)77          TS    BYTE
0000F4                                      (1/43)78 *
0000F4 41B00032                             (1/44)79          LA    R11,50             LENGTH TO FREEMAIN
0000F8                                      (1/45)80          FREEMAIN LV=(R11),A=SAVE1 FREE OP2
0000F8 180B                                 (5/28)82+         LR    0,R11
0000FA 5810D1C4                0001CC       (6/87)84+         L    1,SAVE1
0000FE 0A05                                 (6/93)85+         SVC   5 FREEMAIN R0=LEN, R1=ADDR
000100 41B00064                             (1/46)87          LA    R11,100            LENGTH TO FREEMAIN
000104                                      (1/47)88          FREEMAIN LV=(R11),A=SAVE2 FREE OP1
000104 180B                                 (5/28)90+         LR    0,R11
000106 5810D1C8                0001D0       (6/87)92+         L    1,SAVE2
00010A 0A05                                 (6/93)93+         SVC   5 FREEMAIN R0=LEN, R1=ADDR
00010C                                      (1/48)95          FREEMAIN LV=128K,A=SAVE3 FREE TRANSLATE TABLE
00010C 5800D1D8                0001E0       (6/80)97+         L    0,=A(131072)  RPI 117
000110 5810D1CC                0001D4       (6/87)98+         L    1,SAVE3
000114 0A05                                 (6/93)99+         SVC   5 FREEMAIN R0=LEN, R1=ADDR
000116 9300D1D0                0001D8      (1/49)101          TS    BYTE
00011A                  0000011A           (1/50)102 CYCLE2   EQU   *
00011A 9300D1D0                0001D8      (1/51)103          TS    BYTE
00011E 41B00032                            (1/52)104          LA    R11,50
000122                                     (1/53)105          GETMAIN R,LV=(R11)       OP2
000122 181B                                (5/28)107+         LR    1,R11
000124 41000000                           (4/130)109+         LA    0,B'00'
000128 0A04                               (4/131)110+         SVC   4 GMAIN R0=(X'02'=31B,X'01'=COND),R1=LEN OUT(R0=L,R1=A)
00012A 5510D1C4                0001CC      (1/54)112          CL    R1,SAVE1           STORE IT                RPI-542
00012E 4770D1BA                0001C2      (1/55)113          BNE   ERROR
000132 1831                                (1/56)114          LR    R3,R1              SAVE ADDRESS            RPI-542
000134 92FF3000                            (1/57)115          MVI   0(R3),X'FF'        MARK 1ST BYTE
000138                                     (1/58)116 *
000138 41B00064                            (1/59)117          LA    R11,100            GETMAIN LENGTH
00013C                                     (1/60)118          GETMAIN R,LV=(R11)       OP1
00013C 181B                                (5/28)120+         LR    1,R11
00013E 41000000                           (4/130)122+         LA    0,B'00'
000142 0A04                               (4/131)123+         SVC   4 GMAIN R0=(X'02'=31B,X'01'=COND),R1=LEN OUT(R0=L,R1=A)
000144 5510D1C8                0001D0      (1/61)125          CL    R1,SAVE2           STORE IT                RPI-542
000148 4770D1BA                0001C2      (1/62)126          BNE   ERROR
00014C 1831                                (1/63)127          LR    R3,R1              SAVE ADDRESS            RPI-542
00014E 92FF3000                            (1/64)128          MVI   0(R3),X'FF'        MARK 1ST BYTE
000152                                     (1/65)129 *
000152                                     (1/66)130          GETMAIN R,LV=128K        MAXIMUM TRANSLATE TABLE
000152 5810D1D8                0001E0     (4/110)132+         L    1,=A(131072)  RPI 117
000156 41000000                           (4/130)133+         LA    0,B'00'
00015A 0A04                               (4/131)134+         SVC   4 GMAIN R0=(X'02'=31B,X'01'=COND),R1=LEN OUT(R0=L,R1=A)
00015C 5510D1CC                0001D4      (1/67)136          CL    R1,SAVE3           STORE IT                RPI-542
000160 4770D1BA                0001C2      (1/68)137          BNE   ERROR
000164 1831                                (1/69)138          LR    R3,R1              SAVE ADDRESS            RPI-542
000166 92FF3000                            (1/70)139          MVI   0(R3),X'FF'        MARK 1ST BYTE
00016A                                     (1/71)140 *
00016A 9300D1D0                0001D8      (1/72)141          TS    BYTE
00016E                                     (1/73)142 *
00016E 41B00032                            (1/74)143          LA    R11,50             LENGTH TO FREEMAIN
000172                                     (1/75)144          FREEMAIN LV=(R11),A=SAVE1 FREE OP2
000172 180B                                (5/28)146+         LR    0,R11
000174 5810D1C4                0001CC      (6/87)148+         L    1,SAVE1
000178 0A05                                (6/93)149+         SVC   5 FREEMAIN R0=LEN, R1=ADDR
00017A 41B00064                            (1/76)151          LA    R11,100            LENGTH TO FREEMAIN
00017E                                     (1/77)152          FREEMAIN LV=(R11),A=SAVE2 FREE OP1
00017E 180B                                (5/28)154+         LR    0,R11
000180 5810D1C8                0001D0      (6/87)156+         L    1,SAVE2
000184 0A05                                (6/93)157+         SVC   5 FREEMAIN R0=LEN, R1=ADDR
000186                                     (1/78)159          FREEMAIN LV=128K,A=SAVE3 FREE TRANSLATE TABLE
000186 5800D1D8                0001E0      (6/80)161+         L    0,=A(131072)  RPI 117
00018A 5810D1CC                0001D4      (6/87)162+         L    1,SAVE3
00018E 0A05                                (6/93)163+         SVC   5 FREEMAIN R0=LEN, R1=ADDR
000190 9300D1D0                0001D8      (1/79)165          TS    BYTE
000194                                     (1/80)166 *
000194                                     (1/81)167          WTO   'TESTMEM4 ENDED OK'
000194 A715000D                0001AE      (3/49)168+         BRAS  1,*+(WTO#0023_EOT-*+1)/2*2
000198 00150000E3C5E2E3                    (3/50)169+         DC    AL2(WTO#0023_EOT-*,0),C'TESTMEM4 ENDED OK'
0001AD                  000001AD           (3/51)170+WTO#0023_EOT     EQU *
0001AE 0A23                                (3/52)171+         SVC   35
0001B0                                     (1/82)173          SUBEXIT 
0001B0 41F00000                            (7/33)174+         LA    15,0
0001B4 58D0D004                            (7/50)175+         L     13,4(,13)
0001B8 58E0D00C                            (7/51)176+         L     14,12(,13)
0001BC 982CD01C                            (7/52)177+         LM    2,12,28(13)
0001C0 07FE                                (7/53)178+         BR    14
0001C2                                     (1/83)180 ERROR    ABEND  111,DUMP
0001C2                                     (8/25)181+ERROR    DS    0H
0001C2 4110006F                            (8/39)182+         LA   1,111
0001C6 A51A8000                            (8/45)183+         OILH 1,X'8000'
0001CA 0A0D                                (8/47)184+         SVC  13 ABEND R1=COMP CODE AND HIGH BIT = DUMP PGM STORAGE
0001CC                                     (1/84)186 *
0001CC                                     (1/85)187 SAVE1    DS    A
0001D0                                     (1/86)188 SAVE2    DS    A
0001D4                                     (1/87)189 SAVE3    DS    A
0001D8                                     (1/88)190 BYTE     DS    C
0001D9                                     (1/89)191          LTORG 
0001E0 00020000         =A(131072)
0001E4                                     (1/90)192 *
0001E4                                     (1/91)193          EQUREGS REGS=GPR
0001E4                  00000000           (9/41)194+R0     EQU 0
0001E4                  00000001           (9/41)195+R1     EQU 1
0001E4                  00000002           (9/41)196+R2     EQU 2
0001E4                  00000003           (9/41)197+R3     EQU 3
0001E4                  00000004           (9/41)198+R4     EQU 4
0001E4                  00000005           (9/41)199+R5     EQU 5
0001E4                  00000006           (9/41)200+R6     EQU 6
0001E4                  00000007           (9/41)201+R7     EQU 7
0001E4                  00000008           (9/41)202+R8     EQU 8
0001E4                  00000009           (9/41)203+R9     EQU 9
0001E4                  0000000A           (9/41)204+R10    EQU 10
0001E4                  0000000B           (9/41)205+R11    EQU 11
0001E4                  0000000C           (9/41)206+R12    EQU 12
0001E4                  0000000D           (9/41)207+R13    EQU 13
0001E4                  0000000E           (9/41)208+R14    EQU 14
0001E4                  0000000F           (9/41)209+R15    EQU 15
0001E4                                     (1/92)211          END 

Symbol Table Listing

 SYM=BYTE     LOC=000001D8 LEN=00000001 ESD=0001 TYPE=REL  XREF=190 42 77 101 103 
  141 165 
 SYM=CYCLE1   LOC=000000AC LEN=00000001 ESD=0001 TYPE=REL  XREF=41 
 SYM=CYCLE2   LOC=0000011A LEN=00000001 ESD=0001 TYPE=REL  XREF=102 
 SYM=ERROR    LOC=000001C2 LEN=00000002 ESD=0001 TYPE=REL  XREF=181 113 126 137 
 SYM=R0       LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=194 
 SYM=R10      LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=204 
 SYM=R1       LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=195 51 52 63 64 73 
  74 112 114 125 127 136 138 
 SYM=R11      LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=205 43 46 55 58 79 
  82 87 90 104 107 117 120 143 146 151 154 
 SYM=R12      LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=206 
 SYM=R13      LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=207 
 SYM=R14      LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=208 
 SYM=R15      LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=209 
 SYM=R2       LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=196 
 SYM=R3       LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=197 52 53 64 65 74 
  75 114 115 127 128 138 139 
 SYM=R4       LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=198 
 SYM=R5       LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=199 
 SYM=R6       LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=200 
 SYM=R7       LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=201 
 SYM=R8       LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=202 
 SYM=R9       LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=203 
 SYM=SAVE1    LOC=000001CC LEN=00000004 ESD=0001 TYPE=REL  XREF=187 51 84 112 148 
 SYM=SAVE2    LOC=000001D0 LEN=00000004 ESD=0001 TYPE=REL  XREF=188 63 92 125 156 
 SYM=SAVE3    LOC=000001D4 LEN=00000004 ESD=0001 TYPE=REL  XREF=189 73 98 136 162 
 SYM=TESTMEM4 LOC=00000000 LEN=000001E8 ESD=0001 TYPE=CST  XREF=18 28 
 SYM=WTO#0002_EOT LOC=000000A9 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 32 33 
 SYM=WTO#0023_EOT LOC=000001AD LEN=00000001 ESD=0001 TYPE=REL  XREF=170 168 169 

Literal Table Listing

 LIT=A(131072) LOC=000001E0 LEN=00000004 ESD=0001 POOL=0001 XREF=69 97 132 161 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTMEM4  MZ390 ENDED RC= 0 IO=1296
