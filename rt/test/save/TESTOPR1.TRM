TESTOPR1  MZ390 START
MZ390I Copyright 2011 Automated Software Tools Corporation
MZ390I Copyright 2013 Cat Herder Software, LLC
MZ390I Copyright 2018 Joachim Bartz, Germany
MZ390I z390 is licensed under GNU General Public License
MZ390I program = rt\test\TESTOPR1.MLC
MZ390I options = sysmac(C:\Users\Achim\GitHub\z390\mac+.) 
  syscpy(C:\Users\Achim\GitHub\z390\mac+.) @rt\Options.opt=(bal notiming stats) 
  tracep systerm(rt\test\RTTEST)
LOADING FILE rt\test\TESTOPR1.MLC
OPEN CODE     1     (1/1) *********************************************************************
OPEN CODE     2     (1/2) * Copyright 2006 Automated Software Tools Corporation               *
OPEN CODE     3     (1/3) * Copyright 2013 Cat Herder Software, LLC                           *
OPEN CODE     4     (1/4) * Copyright 2018 Joachim Bartz, Germany                             *
OPEN CODE     5     (1/5) *                                                                   *
OPEN CODE     6     (1/6) * This source code is part of z390 assembler/emulator package.      *
OPEN CODE     7     (1/7) *                                                                   *
OPEN CODE     8     (1/8) * The z390 package is distributed under GNU general public license  *
OPEN CODE     9     (1/9) *                                                                   *
OPEN CODE    10    (1/10) * Author - Don Higgins                                              *
OPEN CODE    11    (1/11) *********************************************************************
OPEN CODE    12    (1/12) * 2006-08-08  DSH          Initial version                          *
OPEN CODE    13    (1/13) * 2006-08-09  DSH RPI-404  Test B2A C2A D2A DCLEN SLA SLL SRA SRL   *
OPEN CODE    14    (1/14) *                          X2A
OPEN CODE    15    (1/15) * 2006-08-09  DSH RPI-405  Test O'OPCODE                            *
OPEN CODE    16    (1/16) * 2006-08-27  DSH RPI-415  Correct ATTRA to valid code GR32         *
OPEN CODE    17    (1/17) * 2006-08-29  DSH RPI-421  Test duplication operator after .        *
OPEN CODE    18    (1/18) * 2006-10-22  DSH RPI-467  Test duplication operator after .        *
OPEN CODE    19    (1/19) * 2007-07-05  DSH RPI-646  Add test for index and find old/new      *
OPEN CODE    20    (1/20) *                          formats                                  *
OPEN CODE    21    (1/21) * 2008-04-19  DSH RPI-833  Add string quotes for HLASM compatibility*
OPEN CODE    22    (1/22) * 2008-07-30  DSH RPI-886  Correct function name DCEQUO to DEQUOTE  *
OPEN CODE    23    (1/23) * 2008-11-07  DSH RPI-938  Correct missing ending quote on MNOTE    *
OPEN CODE    24    (1/24) * 2008-11-09  DSH RPI-943  Use signed function to display negative  *
OPEN CODE    25    (1/25) *                          values                                   *
OPEN CODE    26    (1/26) * 2009-09-21  DSH RPI-1080 Correct test for DCLEN and DCVAL         *
OPEN CODE    27    (1/27) * 2010-01-10  DSH RPI-1101 Correct C2X length = 2 * CHAR            *
OPEN CODE    28    (1/28) * 2010-01-14  DSH RPI-1105 A2B > 32 CHAR 0/1'S                      *
OPEN CODE    29    (1/29) * 2011-01-25  DSH RPI-1139 Add quotes for UPPER/LOWER for NOALLOW   *
OPEN CODE    30    (1/30) *********************************************************************
OPEN CODE    32    (1/32) *MCALL #=     1 LV= 1 TESTOPR1 SUBENTRY 
LOADING FILE C:\Users\Achim\GitHub\z390\mac\SUBENTRY.MAC
 
SUBENTRY     66                  GBLC  &PSTKREG,&PBASREG,&PBASLAB
SUBENTRY     67                  GBLB  &PSTKSW,&PBASESW,&PSAVESW,&PCHKSW
SUBENTRY     68                  GBLA  &STKSIZE,&STKENT
SUBENTRY     69                  GBLB  &STKOPT,&RENTOPT
SUBENTRY     70                  LCLA  &NBASE,&S,&OFFSET
SUBENTRY     71         &PSTKSW  SETB  0
  GEN  PC LOC=    1 OP= PUSHA()=0
  GEN  PC LOC=    2 OP= STORV(&PSTKSW)=0
SUBENTRY     72         &PBASESW SETB  0
  GEN  PC LOC=    3 OP= PUSHA()=0
  GEN  PC LOC=    4 OP= STORV(&PBASESW)=0
SUBENTRY     73         &PSAVESW SETB  0
  GEN  PC LOC=    5 OP= PUSHA()=0
  GEN  PC LOC=    6 OP= STORV(&PSAVESW)=0
SUBENTRY     74         &PCHKSW  SETB  0
  GEN  PC LOC=    7 OP= PUSHA()=0
  GEN  PC LOC=    8 OP= STORV(&PCHKSW)=0
SUBENTRY     75         &STKOPT  SETB  0
  GEN  PC LOC=    9 OP= PUSHA()=0
  GEN  PC LOC=   10 OP= STORV(&STKOPT)=0
SUBENTRY     76         &RENTOPT SETB  0
  GEN  PC LOC=   11 OP= PUSHA()=0
  GEN  PC LOC=   12 OP= STORV(&RENTOPT)=0
SUBENTRY     77                  AIF   ('&CSECT'(1,1) EQ 'N').NOCSECT
  GEN  PC LOC=   13 OP= PUSHV(&CSECT)='YES'
  GEN  PC LOC=   14 OP= PUSHA()=1
  GEN  PC LOC=   15 OP= PUSHA()=1
  GEN  PC LOC=   16 OP= SUBSTR('YES',1,1)='Y'
  GEN  PC LOC=   17 OP= COMPEQ('Y','N')=0
  GEN  PC LOC=   18 OP= AIF(0)=.NOCSECT NO BRANCH
SUBENTRY     78    (2/78)+TESTOPR1 CSECT 
SUBENTRY     79                  AGO   .STM
 
SUBENTRY     83                  AIF   ('&RENT'(1,1) EQ 'N').NORENT
  GEN  PC LOC=   19 OP= PUSHV(&RENT)='NO'
  GEN  PC LOC=   20 OP= PUSHA()=1
  GEN  PC LOC=   21 OP= PUSHA()=1
  GEN  PC LOC=   22 OP= SUBSTR('NO',1,1)='N'
  GEN  PC LOC=   23 OP= COMPEQ('N','N')=1
  GEN  PC LOC=   24 OP= AIF(1)=.NORENT BRANCH
 
SUBENTRY    168   (2/168)+         STM   14,12,12(13)
SUBENTRY    169   (2/169)+         BAL   15,104(15)
SUBENTRY    170   (2/170)+         DC    18F'0'
SUBENTRY    171                  DC    CL8'&NAME'
SUBENTRY    171   (2/171)+         DC    CL8'TESTOPR1'
SUBENTRY    172                  DC    CL8'&SYSDATE'
SUBENTRY    172   (2/172)+         DC    CL8'01/02/05'
SUBENTRY    173                  DC    CL8'&SYSTIME'
SUBENTRY    173   (2/173)+         DC    CL8'22.33'
SUBENTRY    174   (2/174)+         ST    15,8(13)
SUBENTRY    175   (2/175)+         ST    13,4(15)
SUBENTRY    176   (2/176)+         LR    13,15
SUBENTRY    177                  AIF   (T'&BASES(1) NE 'N').CHKR13
  GEN  PC LOC=   25 OP= PUSHV(&BASES)='(13)'
  GEN  PC LOC=   26 OP= PUSHA()=1
  GEN  PC LOC=   27 OP= SUBLST('(13)',1)='13'
T' N = T'13
  GEN  PC LOC=   28 OP= T'('13')='N'
  GEN  PC LOC=   29 OP= COMPNE('N','N')=0
  GEN  PC LOC=   30 OP= AIF(0)=.CHKR13 NO BRANCH
SUBENTRY    178                  AIF   (&BASES(1) EQ 13).GENB13
  GEN  PC LOC=   31 OP= PUSHV(&BASES)='(13)'
  GEN  PC LOC=   32 OP= PUSHA()=1
  GEN  PC LOC=   33 OP= SUBLST('(13)',1)='13'
  GEN  PC LOC=   34 OP= COMPEQ(13,13)=1
  GEN  PC LOC=   35 OP= AIF(1)=.GENB13 BRANCH
 
SUBENTRY    189                  USING &NAME+8,13
SUBENTRY    189   (2/189)+         USING TESTOPR1+8,13
SUBENTRY    191         &NBASE   SETA  N'&BASES
  GEN  PC LOC=   36 OP= PUSHV(&BASES)='(13)'
  GEN  PC LOC=   37 OP= N'('(13)')=1
  GEN  PC LOC=   38 OP= STORV(&NBASE)=1
SUBENTRY    192         &S       SETA  1
  GEN  PC LOC=   39 OP= PUSHA()=1
  GEN  PC LOC=   40 OP= STORV(&S)=1
SUBENTRY    194         &S       SETA  &S+1
  GEN  PC LOC=   41 OP= PUSHV(&S)=1
ADD 2 = 1 + 1
  GEN  PC LOC=   42 OP= ADD(1,1)=2
  GEN  PC LOC=   43 OP= STORV(&S)=2
SUBENTRY    195                  AIF   (&S GT &NBASE).EXIT
  GEN  PC LOC=   44 OP= PUSHV(&S)=2
  GEN  PC LOC=   45 OP= PUSHV(&NBASE)=1
  GEN  PC LOC=   46 OP= COMPGT(2,1)=1
  GEN  PC LOC=   47 OP= AIF(1)=.EXIT BRANCH
 
SUBENTRY    201                  MEXIT
 
SUBENTRY    201   (2/201)+*MEXIT #=     1 LV= 1 SUBENTRY
OPEN CODE    33    (1/33) *MCALL #=     2 LV= 1          WTO   'TESTOPR1 TEST OPERATORS UPPER, LOWER, ETC.'
LOADING FILE C:\Users\Achim\GitHub\z390\mac\WTO.MAC
 
WTO          34                  AIF   ('&N' EQ '').SKIPDS
  GEN  PC LOC=   48 OP= PUSHV(&N)=''
  GEN  PC LOC=   49 OP= COMPEQ('','')=1
  GEN  PC LOC=   50 OP= AIF(1)=.SKIPDS BRANCH
 
WTO          37                  AIF   (N'&SYSLIST LE 1).NPOK
  GEN  PC LOC=   51 OP= PUSHV(&SYSLIST)=''
  GEN  PC LOC=   52 OP= N'('&SYSLIST')=1
  GEN  PC LOC=   53 OP= COMPLE(1,1)=1
  GEN  PC LOC=   54 OP= AIF(1)=.NPOK BRANCH
 
WTO          41                  AIF   ('&MF' NE 'I').MF
  GEN  PC LOC=   55 OP= PUSHV(&MF)='I'
  GEN  PC LOC=   56 OP= COMPNE('I','I')=0
  GEN  PC LOC=   57 OP= AIF(0)=.MF NO BRANCH
WTO          42                  AIF   ('&TEXT' NE '').ERR2
  GEN  PC LOC=   58 OP= PUSHV(&TEXT)=''
  GEN  PC LOC=   59 OP= COMPNE('','')=0
  GEN  PC LOC=   60 OP= AIF(0)=.ERR2 NO BRANCH
WTO          43                  AIF   ('&MSG' EQ '').ERR3
  GEN  PC LOC=   61 OP= PUSHV(&MSG)=''TESTOPR1 TEST OPERATORS UPPER, LOWER, ETC.''
  GEN  PC LOC=   62 OP= COMPEQ(''TESTOPR1 TEST OPERATORS UPPER, LOWER, ETC.'','')=0
  GEN  PC LOC=   63 OP= AIF(0)=.ERR3 NO BRANCH
WTO          44         &MSGTEXT SETC  '&MSG'
  GEN  PC LOC=   64 OP= PUSHV(&MSG)=''TESTOPR1 TEST OPERATORS UPPER, LOWER, ETC.''
  GEN  PC LOC=   65 OP= STORV(&MSGTEXT)=''TESTOPR1 TEST OPERATORS UPPER, LOWER, ETC.''
WTO          45                  AIF   ('&MSG'(1,1) EQ '''').WTOMSG
  GEN  PC LOC=   66 OP= PUSHV(&MSG)=''TESTOPR1 TEST OPERATORS UPPER, LOWER, ETC.''
  GEN  PC LOC=   67 OP= PUSHA()=1
  GEN  PC LOC=   68 OP= PUSHA()=1
  GEN  PC LOC=   69 OP= SUBSTR(''TESTOPR1 TEST OPERATORS UPPER, LOWER, ETC.'',1,1)='''
  GEN  PC LOC=   70 OP= COMPEQ(''',''')=1
  GEN  PC LOC=   71 OP= AIF(1)=.WTOMSG BRANCH
 
WTO          49                  BRAS  1,*+(WTO#&SYSNDX._EOT-*+1)/2*2
WTO          49    (3/49)+         BRAS  1,*+(WTO#0002_EOT-*+1)/2*2
WTO          50                  DC    AL2(WTO#&SYSNDX._EOT-*,0),C&MSGTEXT
WTO          50    (3/50)+         DC    AL2(WTO#0002_EOT-*,0),C'TESTOPR1 TEST OPERATORS UPPER, LOWER, ETC.'
WTO          51    (3/51)+WTO#0002_EOT     EQU *
WTO          52    (3/52)+         SVC   35
WTO          53                  MEXIT
 
WTO          53    (3/53)+*MEXIT #=     2 LV= 1 WTO
OPEN CODE    34    (1/34) *MCALL #=     3 LV= 1          SUBEXIT 
LOADING FILE C:\Users\Achim\GitHub\z390\mac\SUBEXIT.MAC
 
SUBEXIT      28                  AIF   ('&NAME' EQ '').SKIPDS
  GEN  PC LOC=   72 OP= PUSHV(&NAME)=''
  GEN  PC LOC=   73 OP= COMPEQ('','')=1
  GEN  PC LOC=   74 OP= AIF(1)=.SKIPDS BRANCH
 
SUBEXIT      31                  GBLB  &RENTOPT
SUBEXIT      32                  AIF   ('&RC'(1,1) EQ '(').RCREG
  GEN  PC LOC=   75 OP= PUSHV(&RC)='0'
  GEN  PC LOC=   76 OP= PUSHA()=1
  GEN  PC LOC=   77 OP= PUSHA()=1
  GEN  PC LOC=   78 OP= SUBSTR('0',1,1)='0'
  GEN  PC LOC=   79 OP= COMPEQ('0','(')=0
  GEN  PC LOC=   80 OP= AIF(0)=.RCREG NO BRANCH
SUBEXIT      33                  LA    15,&RC
SUBEXIT      33    (4/33)+         LA    15,0
SUBEXIT      34                  AGO   .CHKRENT
 
SUBEXIT      38                  AIF   (&RENTOPT EQ 0).NORENT
  GEN  PC LOC=   81 OP= PUSHV(&RENTOPT)=0
  GEN  PC LOC=   82 OP= COMPEQ(0,0)=1
  GEN  PC LOC=   83 OP= AIF(1)=.NORENT BRANCH
 
SUBEXIT      50    (4/50)+         L     13,4(,13)
SUBEXIT      51    (4/51)+         L     14,12(,13)
SUBEXIT      52    (4/52)+         LM    2,12,28(13)
SUBEXIT      53    (4/53)+         BR    14
SUBEXIT      53    (4/53)+*MEXIT #=     3 LV= 1 SUBEXIT
OPEN CODE    35    (1/35) SYM      EQU   1,2,C'3',C'PGMA',gr32
OPEN CODE    37         &PASS    SETA  &PASS+1
  GEN  PC LOC=   84 OP= PUSHV(&PASS)=0
ADD 1 = 0 + 1
  GEN  PC LOC=   85 OP= ADD(0,1)=1
  GEN  PC LOC=   86 OP= STORV(&PASS)=1
OPEN CODE    38                  AIF   (&PASS GE 3).ENDLOOP
  GEN  PC LOC=   87 OP= PUSHV(&PASS)=1
  GEN  PC LOC=   88 OP= COMPGE(1,3)=0
  GEN  PC LOC=   89 OP= AIF(0)=.ENDLOOP NO BRANCH
OPEN CODE    39                  MNOTE 'TESTOPR1 PASS &PASS'
OPEN CODE    39    (1/39)          MNOTE 'TESTOPR1 PASS 1'
OPEN CODE    40                  MNOTE 'TESTING UPPER AND LOWER'
OPEN CODE    40    (1/40)          MNOTE 'TESTING UPPER AND LOWER'
OPEN CODE    41         &LC      SETC  'abc'
  GEN  PC LOC=   90 OP= PUSHC()='abc'
  GEN  PC LOC=   91 OP= STORV(&LC)='abc'
OPEN CODE    42                  AIF   ('&LC' NE 'abc').LCERR
  GEN  PC LOC=   92 OP= PUSHV(&LC)='abc'
  GEN  PC LOC=   93 OP= COMPNE('abc','abc')=0
  GEN  PC LOC=   94 OP= AIF(0)=.LCERR NO BRANCH
OPEN CODE    43         &UC      SETC  (UPPER '&LC')
  GEN  PC LOC=   95 OP= PUSHV(&LC)='abc'
UPPER ABC = UPPER abc
  GEN  PC LOC=   96 OP= UPPER('abc')='ABC'
  GEN  PC LOC=   97 OP= STORV(&UC)='ABC'
OPEN CODE    44                  AIF   ('&UC' NE 'ABC').UCERR
  GEN  PC LOC=   98 OP= PUSHV(&UC)='ABC'
  GEN  PC LOC=   99 OP= COMPNE('ABC','ABC')=0
  GEN  PC LOC=  100 OP= AIF(0)=.UCERR NO BRANCH
OPEN CODE    45         &UC      SETC  'ABC'
  GEN  PC LOC=  101 OP= PUSHC()='ABC'
  GEN  PC LOC=  102 OP= STORV(&UC)='ABC'
OPEN CODE    46                  AIF   ('&UC' NE 'ABC').UCERR
  GEN  PC LOC=  103 OP= PUSHV(&UC)='ABC'
  GEN  PC LOC=  104 OP= COMPNE('ABC','ABC')=0
  GEN  PC LOC=  105 OP= AIF(0)=.UCERR NO BRANCH
OPEN CODE    47         &LC      SETC  (LOWER '&UC')
  GEN  PC LOC=  106 OP= PUSHV(&UC)='ABC'
LOWER abc = LOWER ABC
  GEN  PC LOC=  107 OP= LOWER('ABC')='abc'
  GEN  PC LOC=  108 OP= STORV(&LC)='abc'
OPEN CODE    48                  AIF   ('&LC' NE 'abc').LCERR
  GEN  PC LOC=  109 OP= PUSHV(&LC)='abc'
  GEN  PC LOC=  110 OP= COMPNE('abc','abc')=0
  GEN  PC LOC=  111 OP= AIF(0)=.LCERR NO BRANCH
OPEN CODE    49                  MNOTE 'TESTING ?2? PREFIX OPERATORS'
OPEN CODE    49    (1/49)          MNOTE 'TESTING ?2? PREFIX OPERATORS'
OPEN CODE    50         &A2B     SETC  (A2B(4))
  GEN  PC LOC=  112 OP= PUSHA()=4
  GEN  PC LOC=  113 OP= A2B(4)='00000000000000000000000000000100'
  GEN  PC LOC=  114 OP= STORV(&A2B)='00000000000000000000000000000100'
OPEN CODE    51                  MNOTE 'A2B(4)=&A2B'                           RPI-1105
OPEN CODE    51    (1/51)          MNOTE 'A2B(4)=00000000000000000000000000000100'                           RPI-1105
OPEN CODE    52                  AIF   ('&A2B' NE '00000000000000000000000000000100').A2ERR
  GEN  PC LOC=  115 OP= PUSHV(&A2B)='00000000000000000000000000000100'
  GEN  PC LOC=  116 OP= COMPNE('00000000000000000000000000000100','00000000000000000000000000000100')=0
  GEN  PC LOC=  117 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    53         &A2C     SETC  (A2C(241))
  GEN  PC LOC=  118 OP= PUSHA()=241
  GEN  PC LOC=  119 OP= A2C(241)='...1'
  GEN  PC LOC=  120 OP= STORV(&A2C)='...1'
OPEN CODE    54                  MNOTE 'A2C(241)=&A2C'
OPEN CODE    54    (1/54)          MNOTE 'A2C(241)=...1'
OPEN CODE    55                  AIF   ('&A2C'(4,1) NE '1').A2ERR
  GEN  PC LOC=  121 OP= PUSHV(&A2C)='...1'
  GEN  PC LOC=  122 OP= PUSHA()=4
  GEN  PC LOC=  123 OP= PUSHA()=1
  GEN  PC LOC=  124 OP= SUBSTR('...1',4,1)='1'
  GEN  PC LOC=  125 OP= COMPNE('1','1')=0
  GEN  PC LOC=  126 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    56         &A2D     SETC  (A2D(241))
  GEN  PC LOC=  127 OP= PUSHA()=241
  GEN  PC LOC=  128 OP= A2D(241)='+241'
  GEN  PC LOC=  129 OP= STORV(&A2D)='+241'
OPEN CODE    57                  MNOTE 'A2D(241)=&A2D'
OPEN CODE    57    (1/57)          MNOTE 'A2D(241)=+241'
OPEN CODE    58                  AIF   ('&A2D' NE '+241').A2ERR
  GEN  PC LOC=  130 OP= PUSHV(&A2D)='+241'
  GEN  PC LOC=  131 OP= COMPNE('+241','+241')=0
  GEN  PC LOC=  132 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    59         &A2D     SETC  (A2D(-241))
  GEN  PC LOC=  133 OP= PUSHA()=-241
  GEN  PC LOC=  134 OP= A2D(-241)='-241'
  GEN  PC LOC=  135 OP= STORV(&A2D)='-241'
OPEN CODE    60                  MNOTE 'A2D(-241)=&A2D'
OPEN CODE    60    (1/60)          MNOTE 'A2D(-241)=-241'
OPEN CODE    61                  AIF   ('&A2D' NE '-241').A2ERR
  GEN  PC LOC=  136 OP= PUSHV(&A2D)='-241'
  GEN  PC LOC=  137 OP= COMPNE('-241','-241')=0
  GEN  PC LOC=  138 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    62         &A2X     SETC  (A2X(241))
  GEN  PC LOC=  139 OP= PUSHA()=241
  GEN  PC LOC=  140 OP= A2X(241)='000000F1'
  GEN  PC LOC=  141 OP= STORV(&A2X)='000000F1'
OPEN CODE    63                  MNOTE 'A2X(241)=&A2X'
OPEN CODE    63    (1/63)          MNOTE 'A2X(241)=000000F1'
OPEN CODE    64                  AIF   ('&A2X' NE '000000F1').A2ERR
  GEN  PC LOC=  142 OP= PUSHV(&A2X)='000000F1'
  GEN  PC LOC=  143 OP= COMPNE('000000F1','000000F1')=0
  GEN  PC LOC=  144 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    65         &B2A     SETA  (B2A('100'))
  GEN  PC LOC=  145 OP= PUSHC()='100'
  GEN  PC LOC=  146 OP= B2A(B'100')=4
  GEN  PC LOC=  147 OP= STORV(&B2A)=4
OPEN CODE    66                  MNOTE 'B2A(''100'')=&B2A'
OPEN CODE    66    (1/66)          MNOTE 'B2A('100')=4'
OPEN CODE    67                  AIF   ('&B2A' NE 4).B2ERR
  GEN  PC LOC=  148 OP= PUSHV(&B2A)='4'
  GEN  PC LOC=  149 OP= COMPNE(4,4)=0
  GEN  PC LOC=  150 OP= AIF(0)=.B2ERR NO BRANCH
OPEN CODE    68         &B2C     SETC  (B2C('11110001'))
  GEN  PC LOC=  151 OP= PUSHC()='11110001'
  GEN  PC LOC=  152 OP= B2C('')='...1'
  GEN  PC LOC=  153 OP= STORV(&B2C)='...1'
OPEN CODE    69                  MNOTE 'B2C(''11110001'')=&B2C'
OPEN CODE    69    (1/69)          MNOTE 'B2C('11110001')=...1'
OPEN CODE    70                  AIF   ('&B2C'(4,1) NE '1').B2ERR
  GEN  PC LOC=  154 OP= PUSHV(&B2C)='...1'
  GEN  PC LOC=  155 OP= PUSHA()=4
  GEN  PC LOC=  156 OP= PUSHA()=1
  GEN  PC LOC=  157 OP= SUBSTR('...1',4,1)='1'
  GEN  PC LOC=  158 OP= COMPNE('1','1')=0
  GEN  PC LOC=  159 OP= AIF(0)=.B2ERR NO BRANCH
OPEN CODE    71         &B2D     SETC  (B2D('100'))
  GEN  PC LOC=  160 OP= PUSHC()='100'
  GEN  PC LOC=  161 OP= B2D('100')='4'
  GEN  PC LOC=  162 OP= STORV(&B2D)='4'
OPEN CODE    72                  MNOTE 'B2D(''100'')=&B2D'
OPEN CODE    72    (1/72)          MNOTE 'B2D('100')=4'
OPEN CODE    73                  AIF   ('&B2D' NE 4).B2ERR
  GEN  PC LOC=  163 OP= PUSHV(&B2D)='4'
  GEN  PC LOC=  164 OP= COMPNE(4,4)=0
  GEN  PC LOC=  165 OP= AIF(0)=.B2ERR NO BRANCH
OPEN CODE    74         &B2X     SETC  (B2X('11110001'))
  GEN  PC LOC=  166 OP= PUSHC()='11110001'
  GEN  PC LOC=  167 OP= B2X('11110001')='000000F1'
  GEN  PC LOC=  168 OP= STORV(&B2X)='000000F1'
OPEN CODE    75                  MNOTE 'B2X(''11110001'')=&B2X'
OPEN CODE    75    (1/75)          MNOTE 'B2X('11110001')=000000F1'
OPEN CODE    76                  AIF   ('&B2X' NE '000000F1').B2ERR
  GEN  PC LOC=  169 OP= PUSHV(&B2X)='000000F1'
  GEN  PC LOC=  170 OP= COMPNE('000000F1','000000F1')=0
  GEN  PC LOC=  171 OP= AIF(0)=.B2ERR NO BRANCH
OPEN CODE    77         &C2A     SETA  (C2A('1'))
  GEN  PC LOC=  172 OP= PUSHC()='1'
  GEN  PC LOC=  173 OP= C2A('C'1'')=241
  GEN  PC LOC=  174 OP= STORV(&C2A)=241
OPEN CODE    78                  MNOTE 'C2A(''1'')=&C2A'
OPEN CODE    78    (1/78)          MNOTE 'C2A('1')=241'
OPEN CODE    79                  AIF   ('&C2A' NE 241).C2ERR
  GEN  PC LOC=  175 OP= PUSHV(&C2A)='241'
  GEN  PC LOC=  176 OP= COMPNE(241,241)=0
  GEN  PC LOC=  177 OP= AIF(0)=.C2ERR NO BRANCH
OPEN CODE    80         &C2B     SETC  (C2B('1'))
  GEN  PC LOC=  178 OP= PUSHC()='1'
  GEN  PC LOC=  179 OP= C2B('C'1'')='11110001'
  GEN  PC LOC=  180 OP= STORV(&C2B)='11110001'
OPEN CODE    81                  MNOTE 'C2B(''1'')=&C2B'
OPEN CODE    81    (1/81)          MNOTE 'C2B('1')=11110001'
OPEN CODE    82                  AIF   ('&C2B' NE '11110001').C2ERR
  GEN  PC LOC=  181 OP= PUSHV(&C2B)='11110001'
  GEN  PC LOC=  182 OP= COMPNE('11110001','11110001')=0
  GEN  PC LOC=  183 OP= AIF(0)=.C2ERR NO BRANCH
OPEN CODE    83         &C2D     SETC  (C2D('1'))
  GEN  PC LOC=  184 OP= PUSHC()='1'
  GEN  PC LOC=  185 OP= C2D('C'1'')='241'
  GEN  PC LOC=  186 OP= STORV(&C2D)='241'
OPEN CODE    84                  MNOTE 'C2D(''1'')=&C2D'
OPEN CODE    84    (1/84)          MNOTE 'C2D('1')=241'
OPEN CODE    85                  AIF   ('&C2D' NE '241').C2ERR
  GEN  PC LOC=  187 OP= PUSHV(&C2D)='241'
  GEN  PC LOC=  188 OP= COMPNE('241','241')=0
  GEN  PC LOC=  189 OP= AIF(0)=.C2ERR NO BRANCH
OPEN CODE    86         &C2X     SETC  (C2X('1'))
  GEN  PC LOC=  190 OP= PUSHC()='1'
  GEN  PC LOC=  191 OP= C2X('C'1'')='F1'
  GEN  PC LOC=  192 OP= STORV(&C2X)='F1'
OPEN CODE    87                  MNOTE 'C2X(''1'')=&C2X'
OPEN CODE    87    (1/87)          MNOTE 'C2X('1')=F1'
OPEN CODE    88                  AIF   ('&C2X' NE 'F1').C2ERR         RPI-1101 FIX LEN = 2 * N
  GEN  PC LOC=  193 OP= PUSHV(&C2X)='F1'
  GEN  PC LOC=  194 OP= COMPNE('F1','F1')=0
  GEN  PC LOC=  195 OP= AIF(0)=.C2ERR NO BRANCH
OPEN CODE    89         &SIGNED  SETC  (SIGNED (D2A('-1')))
  GEN  PC LOC=  196 OP= PUSHC()='-1'
  GEN  PC LOC=  197 OP= D2A('-1')=-1
  GEN  PC LOC=  198 OP= SIGNED(241)='-1'
  GEN  PC LOC=  199 OP= STORV(&SIGNED)='-1'
OPEN CODE    90                  MNOTE 'D2A(''-1'')=&SIGNED'
OPEN CODE    90    (1/90)          MNOTE 'D2A('-1')=-1'
OPEN CODE    91                  AIF   ('&SIGNED' NE '-1').D2ERR
  GEN  PC LOC=  200 OP= PUSHV(&SIGNED)='-1'
  GEN  PC LOC=  201 OP= COMPNE('-1','-1')=0
  GEN  PC LOC=  202 OP= AIF(0)=.D2ERR NO BRANCH
OPEN CODE    92         &D2B     SETC  (D2B('241'))
  GEN  PC LOC=  203 OP= PUSHC()='241'
  GEN  PC LOC=  204 OP= D2B('241')='11110001'
  GEN  PC LOC=  205 OP= STORV(&D2B)='11110001'
OPEN CODE    93                  MNOTE 'D2B(''1'')=&D2B'
OPEN CODE    93    (1/93)          MNOTE 'D2B('1')=11110001'
OPEN CODE    94                  AIF   ('&D2B' NE '11110001').D2ERR
  GEN  PC LOC=  206 OP= PUSHV(&D2B)='11110001'
  GEN  PC LOC=  207 OP= COMPNE('11110001','11110001')=0
  GEN  PC LOC=  208 OP= AIF(0)=.D2ERR NO BRANCH
OPEN CODE    95         &D2C     SETC  (D2C('241'))
  GEN  PC LOC=  209 OP= PUSHC()='241'
  GEN  PC LOC=  210 OP= D2C('241')='...1'
  GEN  PC LOC=  211 OP= STORV(&D2C)='...1'
OPEN CODE    96                  MNOTE 'D2C(''1'')=&D2C'
OPEN CODE    96    (1/96)          MNOTE 'D2C('1')=...1'
OPEN CODE    97                  AIF   ('&D2C'(4,1) NE '1').D2ERR
  GEN  PC LOC=  212 OP= PUSHV(&D2C)='...1'
  GEN  PC LOC=  213 OP= PUSHA()=4
  GEN  PC LOC=  214 OP= PUSHA()=1
  GEN  PC LOC=  215 OP= SUBSTR('...1',4,1)='1'
  GEN  PC LOC=  216 OP= COMPNE('1','1')=0
  GEN  PC LOC=  217 OP= AIF(0)=.D2ERR NO BRANCH
OPEN CODE    98         &D2X     SETC  (D2X('241'))
  GEN  PC LOC=  218 OP= PUSHC()='241'
  GEN  PC LOC=  219 OP= D2X('241')='000000F1'
  GEN  PC LOC=  220 OP= STORV(&D2X)='000000F1'
OPEN CODE    99                  MNOTE 'D2X(''241'')=&D2X'
OPEN CODE    99    (1/99)          MNOTE 'D2X('241')=000000F1'
OPEN CODE   100                  AIF   ('&D2X' NE '000000F1').D2ERR
  GEN  PC LOC=  221 OP= PUSHV(&D2X)='000000F1'
  GEN  PC LOC=  222 OP= COMPNE('000000F1','000000F1')=0
  GEN  PC LOC=  223 OP= AIF(0)=.D2ERR NO BRANCH
OPEN CODE   101         &X2A     SETA  (X2A('F1'))
  GEN  PC LOC=  224 OP= PUSHC()='F1'
  GEN  PC LOC=  225 OP= X2A()=241
  GEN  PC LOC=  226 OP= STORV(&X2A)=241
OPEN CODE   102                  MNOTE 'X2A(''F1'')=&X2A'
OPEN CODE   102   (1/102)          MNOTE 'X2A('F1')=241'
OPEN CODE   103                  AIF   (&X2A NE 241).X2ERR
  GEN  PC LOC=  227 OP= PUSHV(&X2A)=241
  GEN  PC LOC=  228 OP= COMPNE(241,241)=0
  GEN  PC LOC=  229 OP= AIF(0)=.X2ERR NO BRANCH
OPEN CODE   104         &X2B     SETC  (X2B('1F'))
  GEN  PC LOC=  230 OP= PUSHC()='1F'
  GEN  PC LOC=  231 OP= X2B('1F')='00011111'
  GEN  PC LOC=  232 OP= STORV(&X2B)='00011111'
OPEN CODE   105                  MNOTE 'X2B(''1F'')=&X2B'
OPEN CODE   105   (1/105)          MNOTE 'X2B('1F')=00011111'
OPEN CODE   106                  AIF   ('&X2B' NE '00011111').X2ERR
  GEN  PC LOC=  233 OP= PUSHV(&X2B)='00011111'
  GEN  PC LOC=  234 OP= COMPNE('00011111','00011111')=0
  GEN  PC LOC=  235 OP= AIF(0)=.X2ERR NO BRANCH
OPEN CODE   107         &X2C     SETC  (X2C('F1'))
  GEN  PC LOC=  236 OP= PUSHC()='F1'
  GEN  PC LOC=  237 OP= X2C('F1')='...1'
  GEN  PC LOC=  238 OP= STORV(&X2C)='...1'
OPEN CODE   108                  MNOTE 'X2C(''F1'')=&X2C'
OPEN CODE   108   (1/108)          MNOTE 'X2C('F1')=...1'
OPEN CODE   109                  AIF   ('&X2C'(4,1) NE '1').X2ERR
  GEN  PC LOC=  239 OP= PUSHV(&X2C)='...1'
  GEN  PC LOC=  240 OP= PUSHA()=4
  GEN  PC LOC=  241 OP= PUSHA()=1
  GEN  PC LOC=  242 OP= SUBSTR('...1',4,1)='1'
  GEN  PC LOC=  243 OP= COMPNE('1','1')=0
  GEN  PC LOC=  244 OP= AIF(0)=.X2ERR NO BRANCH
OPEN CODE   110         &X2D     SETC  (X2D('F1'))
  GEN  PC LOC=  245 OP= PUSHC()='F1'
  GEN  PC LOC=  246 OP= X2D('F1')='241'
  GEN  PC LOC=  247 OP= STORV(&X2D)='241'
OPEN CODE   111                  MNOTE 'X2D(''F1'')=&X2D'
OPEN CODE   111   (1/111)          MNOTE 'X2D('F1')=241'
OPEN CODE   112                  AIF   ('&X2D' NE '241').X2ERR
  GEN  PC LOC=  248 OP= PUSHV(&X2D)='241'
  GEN  PC LOC=  249 OP= COMPNE('241','241')=0
  GEN  PC LOC=  250 OP= AIF(0)=.X2ERR NO BRANCH
OPEN CODE   113                  MNOTE 'TESTING DCLEN, DCVAL, DEQUOTE'
OPEN CODE   113   (1/113)          MNOTE 'TESTING DCLEN, DCVAL, DEQUOTE'
OPEN CODE   114         &DCLSTR  SETC  '''''''''&&&&&&&&1'''''''''  ''&&1'' = 7  RPI-1080
  GEN  PC LOC=  251 OP= PUSHC()='''''&&&&1'''''
  GEN  PC LOC=  252 OP= STORV(&DCLSTR)='''''&&&&1'''''
OPEN CODE   115         &DCLEN   SETA  (DCLEN('&DCLSTR'))
  GEN  PC LOC=  253 OP= PUSHV(&DCLSTR)='''''&&&&1'''''
  GEN  PC LOC=  254 OP= DCLEN('''''&&&&1''''')=7
  GEN  PC LOC=  255 OP= STORV(&DCLEN)=7
OPEN CODE   116                  MNOTE 'DCLEN(&DCLSTR)=&DCLEN'
OPEN CODE   116   (1/116)          MNOTE 'DCLEN(''''&&&&1'''')=7'
OPEN CODE   117                  AIF   (&DCLEN NE 7).DCLERR                      RPI-1080
  GEN  PC LOC=  256 OP= PUSHV(&DCLEN)=7
  GEN  PC LOC=  257 OP= COMPNE(7,7)=0
  GEN  PC LOC=  258 OP= AIF(0)=.DCLERR NO BRANCH
OPEN CODE   118         &DCVSTR  SETC  '''''&&&&1'''''
  GEN  PC LOC=  259 OP= PUSHC()='''&&1'''
  GEN  PC LOC=  260 OP= STORV(&DCVSTR)='''&&1'''
OPEN CODE   119         &DCVAL   SETC  (DCVAL('&DCVSTR'))
  GEN  PC LOC=  261 OP= PUSHV(&DCVSTR)='''&&1'''
  GEN  PC LOC=  262 OP= DCVAL('''&&1''')=''&1''
  GEN  PC LOC=  263 OP= STORV(&DCVAL)=''&1''
OPEN CODE   120                  MNOTE 'DCVAL(&DCVSTR)=&DCVAL'
OPEN CODE   120   (1/120)          MNOTE 'DCVAL(''&&1'')='&1''
OPEN CODE   121                  AIF   ('&DCVAL' NE '''&&1''').DCVERR  RPI 1080
  GEN  PC LOC=  264 OP= PUSHV(&DCVAL)=''&1''
  GEN  PC LOC=  265 OP= COMPNE(''&1'',''&1'')=0
  GEN  PC LOC=  266 OP= AIF(0)=.DCVERR NO BRANCH
OPEN CODE   122         &DCESTR  SETC  '''ABC'''
  GEN  PC LOC=  267 OP= PUSHC()=''ABC''
  GEN  PC LOC=  268 OP= STORV(&DCESTR)=''ABC''
OPEN CODE   123         &DEQUOTE SETC  (DEQUOTE('&DCESTR'))
  GEN  PC LOC=  269 OP= PUSHV(&DCESTR)=''ABC''
  GEN  PC LOC=  270 OP= DEQUOTE(''ABC'')='ABC'
  GEN  PC LOC=  271 OP= STORV(&DEQUOTE)='ABC'
OPEN CODE   124                  MNOTE 'DEQUOTE(&DCESTR)=&DEQUOTE'
OPEN CODE   124   (1/124)          MNOTE 'DEQUOTE('ABC')=ABC'
OPEN CODE   125                  AIF   ('&DEQUOTE' NE 'ABC').DCEERR
  GEN  PC LOC=  272 OP= PUSHV(&DEQUOTE)='ABC'
  GEN  PC LOC=  273 OP= COMPNE('ABC','ABC')=0
  GEN  PC LOC=  274 OP= AIF(0)=.DCEERR NO BRANCH
OPEN CODE   126                  MNOTE 'TESTING ISBIN, ISDEC, ISHEX, ISSYM'
OPEN CODE   126   (1/126)          MNOTE 'TESTING ISBIN, ISDEC, ISHEX, ISSYM'
OPEN CODE   127         &ISBIN   SETC  (ISBIN('100'))
  GEN  PC LOC=  275 OP= PUSHC()='100'
  GEN  PC LOC=  276 OP= ISBIN('100')=1
  GEN  PC LOC=  277 OP= STORV(&ISBIN)='1'
OPEN CODE   128                  MNOTE 'ISBIN(''100'')=&ISBIN'
OPEN CODE   128   (1/128)          MNOTE 'ISBIN('100')=1'
OPEN CODE   129                  AIF   ('&ISBIN' NE 1).ISERR
  GEN  PC LOC=  278 OP= PUSHV(&ISBIN)='1'
  GEN  PC LOC=  279 OP= COMPNE(1,1)=0
  GEN  PC LOC=  280 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   130         &ISBIN   SETC  (ISBIN('123'))
  GEN  PC LOC=  281 OP= PUSHC()='123'
  GEN  PC LOC=  282 OP= ISBIN('123')=0
  GEN  PC LOC=  283 OP= STORV(&ISBIN)='0'
OPEN CODE   131                  MNOTE 'ISBIN(''123'')=&ISBIN'
OPEN CODE   131   (1/131)          MNOTE 'ISBIN('123')=0'
OPEN CODE   132                  AIF   ('&ISBIN' NE 0).ISERR
  GEN  PC LOC=  284 OP= PUSHV(&ISBIN)='0'
  GEN  PC LOC=  285 OP= COMPNE(0,0)=0
  GEN  PC LOC=  286 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   133         &ISDEC   SETC  (ISDEC('123'))
  GEN  PC LOC=  287 OP= PUSHC()='123'
  GEN  PC LOC=  288 OP= ISDEC('123')=1
  GEN  PC LOC=  289 OP= STORV(&ISDEC)='1'
OPEN CODE   134                  MNOTE 'ISDEC(''123'')=&ISDEC'
OPEN CODE   134   (1/134)          MNOTE 'ISDEC('123')=1'
OPEN CODE   135                  AIF   ('&ISDEC' NE 1).ISERR
  GEN  PC LOC=  290 OP= PUSHV(&ISDEC)='1'
  GEN  PC LOC=  291 OP= COMPNE(1,1)=0
  GEN  PC LOC=  292 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   136         &ISDEC   SETC  (ISDEC('F1'))
  GEN  PC LOC=  293 OP= PUSHC()='F1'
  GEN  PC LOC=  294 OP= ISDEC('F1')=0
  GEN  PC LOC=  295 OP= STORV(&ISDEC)='0'
OPEN CODE   137                  MNOTE 'ISDEC(''F1'')=&ISDEC'
OPEN CODE   137   (1/137)          MNOTE 'ISDEC('F1')=0'
OPEN CODE   138                  AIF   ('&ISDEC' NE 0).ISERR
  GEN  PC LOC=  296 OP= PUSHV(&ISDEC)='0'
  GEN  PC LOC=  297 OP= COMPNE(0,0)=0
  GEN  PC LOC=  298 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   139         &ISHEX   SETC  (ISHEX('F1'))
  GEN  PC LOC=  299 OP= PUSHC()='F1'
  GEN  PC LOC=  300 OP= ISHEX('F1')=1
  GEN  PC LOC=  301 OP= STORV(&ISHEX)='1'
OPEN CODE   140                  MNOTE 'ISHEX(''F1'')=&ISHEX'
OPEN CODE   140   (1/140)          MNOTE 'ISHEX('F1')=1'
OPEN CODE   141                  AIF   ('&ISHEX' NE 1).ISERR
  GEN  PC LOC=  302 OP= PUSHV(&ISHEX)='1'
  GEN  PC LOC=  303 OP= COMPNE(1,1)=0
  GEN  PC LOC=  304 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   142         &ISHEX   SETC  (ISHEX('FG'))
  GEN  PC LOC=  305 OP= PUSHC()='FG'
  GEN  PC LOC=  306 OP= ISHEX('FG')=0
  GEN  PC LOC=  307 OP= STORV(&ISHEX)='0'
OPEN CODE   143                  MNOTE 'ISHEX(''FG'')=&ISHEX'
OPEN CODE   143   (1/143)          MNOTE 'ISHEX('FG')=0'
OPEN CODE   144                  AIF   ('&ISHEX' NE 0).ISERR
  GEN  PC LOC=  308 OP= PUSHV(&ISHEX)='0'
  GEN  PC LOC=  309 OP= COMPNE(0,0)=0
  GEN  PC LOC=  310 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   145         &ISSYM   SETC  (ISSYM('AZ09@#$_'))
  GEN  PC LOC=  311 OP= PUSHC()='AZ09@#$_'
  GEN  PC LOC=  312 OP= ISSYM('AZ09@#$_')=1
  GEN  PC LOC=  313 OP= STORV(&ISSYM)='1'
OPEN CODE   146                  MNOTE 'ISSYM(''AZ09@#$_'')=&ISSYM'
OPEN CODE   146   (1/146)          MNOTE 'ISSYM('AZ09@#$_')=1'
OPEN CODE   147                  AIF   ('&ISSYM' NE 1).ISERR
  GEN  PC LOC=  314 OP= PUSHV(&ISSYM)='1'
  GEN  PC LOC=  315 OP= COMPNE(1,1)=0
  GEN  PC LOC=  316 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   148         &ISSYM   SETC  (ISSYM('AZ09@#$_**'))
  GEN  PC LOC=  317 OP= PUSHC()='AZ09@#$_**'
  GEN  PC LOC=  318 OP= ISSYM('AZ09@#$_**')=0
  GEN  PC LOC=  319 OP= STORV(&ISSYM)='0'
OPEN CODE   149                  MNOTE 'ISSYM(''AZ09@#$_**'')=&ISSYM'
OPEN CODE   149   (1/149)          MNOTE 'ISSYM('AZ09@#$_**')=0'
OPEN CODE   150                  AIF   ('&ISSYM' NE 0).ISERR
  GEN  PC LOC=  320 OP= PUSHV(&ISSYM)='0'
  GEN  PC LOC=  321 OP= COMPNE(0,0)=0
  GEN  PC LOC=  322 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   151                  MNOTE 'TESTING SIGNED, SYSATTRA, SYSATTRP'
OPEN CODE   151   (1/151)          MNOTE 'TESTING SIGNED, SYSATTRA, SYSATTRP'
OPEN CODE   152         &SIGNED  SETC  (SIGNED(-241))
  GEN  PC LOC=  323 OP= PUSHA()=-241
  GEN  PC LOC=  324 OP= SIGNED(0)='-241'
  GEN  PC LOC=  325 OP= STORV(&SIGNED)='-241'
OPEN CODE   153                  MNOTE 'SIGNED(-241)=&SIGNED'
OPEN CODE   153   (1/153)          MNOTE 'SIGNED(-241)=-241'
OPEN CODE   154                  AIF   ('&SIGNED' NE '-241').SIGNERR
  GEN  PC LOC=  326 OP= PUSHV(&SIGNED)='-241'
  GEN  PC LOC=  327 OP= COMPNE('-241','-241')=0
  GEN  PC LOC=  328 OP= AIF(0)=.SIGNERR NO BRANCH
OPEN CODE   155         &SYSATTRP SETC  (SYSATTRP('SYM'))
SATTRP PGMA = SATTRP SYM
  GEN  PC LOC=  329 OP= PUSHC()='SYM'
  GEN  PC LOC=  330 OP= SATTRP('SYM')='PGMA'
  GEN  PC LOC=  331 OP= STORV(&SYSATTRP)='PGMA'
OPEN CODE   156                  MNOTE 'SYSATTRP(SYM)=&SYSATTRP'
OPEN CODE   156   (1/156)          MNOTE 'SYSATTRP(SYM)=PGMA'
OPEN CODE   157                  AIF   ('&SYSATTRP' NE 'PGMA').SYERR
  GEN  PC LOC=  332 OP= PUSHV(&SYSATTRP)='PGMA'
  GEN  PC LOC=  333 OP= COMPNE('PGMA','PGMA')=0
  GEN  PC LOC=  334 OP= AIF(0)=.SYERR NO BRANCH
OPEN CODE   158         &SYSATTRA SETC  (SYSATTRA('SYM'))
SATTRA GR32 = SATTRA SYM
  GEN  PC LOC=  335 OP= PUSHC()='SYM'
  GEN  PC LOC=  336 OP= SATTRA('SYM')='GR32'
  GEN  PC LOC=  337 OP= STORV(&SYSATTRA)='GR32'
OPEN CODE   159                  MNOTE 'SYSATTRA(SYM)=&SYSATTRA'
OPEN CODE   159   (1/159)          MNOTE 'SYSATTRA(SYM)=GR32'
OPEN CODE   160                  AIF   ('&SYSATTRA' NE 'GR32').SYERR
  GEN  PC LOC=  338 OP= PUSHV(&SYSATTRA)='GR32'
  GEN  PC LOC=  339 OP= COMPNE('GR32','GR32')=0
  GEN  PC LOC=  340 OP= AIF(0)=.SYERR NO BRANCH
OPEN CODE   161                  MNOTE 'TESTING SLA, SLL, SRA, SRL'
OPEN CODE   161   (1/161)          MNOTE 'TESTING SLA, SLL, SRA, SRL'
OPEN CODE   162         &SLA     SETA  (1 SLA 2)
  GEN  PC LOC=  341 OP= PUSHA()=1
SLA 4 = 1 SLA 2
  GEN  PC LOC=  342 OP= PUSHA()=2
  GEN  PC LOC=  343 OP= SLA(1,2)=4
  GEN  PC LOC=  344 OP= STORV(&SLA)=4
OPEN CODE   163                  MNOTE '1 SLA 2 = &SLA'
OPEN CODE   163   (1/163)          MNOTE '1 SLA 2 = 4'
OPEN CODE   164                  AIF   (&SLA NE 4).SLAERR
  GEN  PC LOC=  345 OP= PUSHV(&SLA)=4
  GEN  PC LOC=  346 OP= COMPNE(4,4)=0
  GEN  PC LOC=  347 OP= AIF(0)=.SLAERR NO BRANCH
OPEN CODE   165         &SLA     SETA  (X'7FFFFFFF' SLA 1)
  GEN  PC LOC=  348 OP= PUSHA()=X'7FFFFFFF'
SLA 2147483646 = 2147483647 SLA 1
  GEN  PC LOC=  349 OP= PUSHA()=1
  GEN  PC LOC=  350 OP= SLA(2147483647,1)=2147483646
  GEN  PC LOC=  351 OP= STORV(&SLA)=2147483646
OPEN CODE   166         &SIGNED  SETC  (SIGNED &SLA)                   RPI-943
  GEN  PC LOC=  352 OP= PUSHV(&SLA)=2147483646
  GEN  PC LOC=  353 OP= SIGNED(2147483647)='2147483646'
  GEN  PC LOC=  354 OP= STORV(&SIGNED)='2147483646'
OPEN CODE   167                  MNOTE 'X''7FFFFFFF'' SLA 1 = &SIGNED'
OPEN CODE   167   (1/167)          MNOTE 'X'7FFFFFFF' SLA 1 = 2147483646'
OPEN CODE   168                  AIF   (&SLA NE X'7FFFFFFE').SLAERR
  GEN  PC LOC=  355 OP= PUSHV(&SLA)=2147483646
  GEN  PC LOC=  356 OP= COMPNE(2147483646,2147483646)=0
  GEN  PC LOC=  357 OP= AIF(0)=.SLAERR NO BRANCH
OPEN CODE   169         &SLL     SETA  (1 SLL 2)
  GEN  PC LOC=  358 OP= PUSHA()=1
SLL 4 = 1 SLL 2
  GEN  PC LOC=  359 OP= PUSHA()=2
  GEN  PC LOC=  360 OP= SLL(1,2)=4
  GEN  PC LOC=  361 OP= STORV(&SLL)=4
OPEN CODE   170                  MNOTE '1 SLL 2 = &SLL'
OPEN CODE   170   (1/170)          MNOTE '1 SLL 2 = 4'
OPEN CODE   171                  AIF   (&SLL NE 4).SLLERR
  GEN  PC LOC=  362 OP= PUSHV(&SLL)=4
  GEN  PC LOC=  363 OP= COMPNE(4,4)=0
  GEN  PC LOC=  364 OP= AIF(0)=.SLLERR NO BRANCH
OPEN CODE   172         &SLL     SETA  (X'7FFFFFFF' SLL 1)
  GEN  PC LOC=  365 OP= PUSHA()=X'7FFFFFFF'
SLL -2 = 2147483647 SLL 1
  GEN  PC LOC=  366 OP= PUSHA()=1
  GEN  PC LOC=  367 OP= SLL(2147483647,1)=-2
  GEN  PC LOC=  368 OP= STORV(&SLL)=-2
OPEN CODE   173         &SIGNED  SETC  (SIGNED &SLL)                   RPI-943
  GEN  PC LOC=  369 OP= PUSHV(&SLL)=-2
  GEN  PC LOC=  370 OP= SIGNED(2147483647)='-2'
  GEN  PC LOC=  371 OP= STORV(&SIGNED)='-2'
OPEN CODE   174                  MNOTE 'X''7FFFFFFF'' SLL 1 = &SIGNED'
OPEN CODE   174   (1/174)          MNOTE 'X'7FFFFFFF' SLL 1 = -2'
OPEN CODE   175                  AIF   (&SLL NE X'FFFFFFFE').SLLERR
  GEN  PC LOC=  372 OP= PUSHV(&SLL)=-2
  GEN  PC LOC=  373 OP= COMPNE(-2,-2)=0
  GEN  PC LOC=  374 OP= AIF(0)=.SLLERR NO BRANCH
OPEN CODE   176         &SRA     SETA  (4 SRA 2)
  GEN  PC LOC=  375 OP= PUSHA()=4
SRA 1 = 4 SRA 2
  GEN  PC LOC=  376 OP= PUSHA()=2
  GEN  PC LOC=  377 OP= SRA(4,2)=1
  GEN  PC LOC=  378 OP= STORV(&SRA)=1
OPEN CODE   177                  MNOTE '4 SLA 2 = &SRA'
OPEN CODE   177   (1/177)          MNOTE '4 SLA 2 = 1'
OPEN CODE   178                  AIF   (&SRA NE 1).SRAERR
  GEN  PC LOC=  379 OP= PUSHV(&SRA)=1
  GEN  PC LOC=  380 OP= COMPNE(1,1)=0
  GEN  PC LOC=  381 OP= AIF(0)=.SRAERR NO BRANCH
OPEN CODE   179         &SRA     SETA  (X'FFFFFFFE' SRA 1)
  GEN  PC LOC=  382 OP= PUSHA()=X'FFFFFFFE'
SRA -1 = -2 SRA 1
  GEN  PC LOC=  383 OP= PUSHA()=1
  GEN  PC LOC=  384 OP= SRA(-2,1)=-1
  GEN  PC LOC=  385 OP= STORV(&SRA)=-1
OPEN CODE   180         &SIGNED  SETC  (SIGNED &SRA)                   RPI-943
  GEN  PC LOC=  386 OP= PUSHV(&SRA)=-1
  GEN  PC LOC=  387 OP= SIGNED(-2)='-1'
  GEN  PC LOC=  388 OP= STORV(&SIGNED)='-1'
OPEN CODE   181                  MNOTE 'X''FFFFFFFF'' SRA 1 = &SIGNED'
OPEN CODE   181   (1/181)          MNOTE 'X'FFFFFFFF' SRA 1 = -1'
OPEN CODE   182                  AIF   (&SRA NE X'FFFFFFFF').SRAERR
  GEN  PC LOC=  389 OP= PUSHV(&SRA)=-1
  GEN  PC LOC=  390 OP= COMPNE(-1,-1)=0
  GEN  PC LOC=  391 OP= AIF(0)=.SRAERR NO BRANCH
OPEN CODE   183         &SRL     SETA  (4 SRL 2)
  GEN  PC LOC=  392 OP= PUSHA()=4
SRL 1 = 4 SRL 2
  GEN  PC LOC=  393 OP= PUSHA()=2
  GEN  PC LOC=  394 OP= SRL(4,2)=1
  GEN  PC LOC=  395 OP= STORV(&SRL)=1
OPEN CODE   184                  MNOTE '4 SRL 2 = &SRL'
OPEN CODE   184   (1/184)          MNOTE '4 SRL 2 = 1'
OPEN CODE   185                  AIF   (&SRL NE 1).SRLERR
  GEN  PC LOC=  396 OP= PUSHV(&SRL)=1
  GEN  PC LOC=  397 OP= COMPNE(1,1)=0
  GEN  PC LOC=  398 OP= AIF(0)=.SRLERR NO BRANCH
OPEN CODE   186         &SRL     SETA  (X'FFFFFFFE' SRL 1)
  GEN  PC LOC=  399 OP= PUSHA()=X'FFFFFFFE'
SRL 2147483647 = -2 SRL 1
  GEN  PC LOC=  400 OP= PUSHA()=1
  GEN  PC LOC=  401 OP= SRL(-2,1)=2147483647
  GEN  PC LOC=  402 OP= STORV(&SRL)=2147483647
OPEN CODE   187         &SIGNED  SETC  (SIGNED &SRL)                   RPI-943
  GEN  PC LOC=  403 OP= PUSHV(&SRL)=2147483647
  GEN  PC LOC=  404 OP= SIGNED(-2)='2147483647'
  GEN  PC LOC=  405 OP= STORV(&SIGNED)='2147483647'
OPEN CODE   188                  MNOTE 'X''7FFFFFFF'' SRL 1 = &SIGNED'
OPEN CODE   188   (1/188)          MNOTE 'X'7FFFFFFF' SRL 1 = 2147483647'
OPEN CODE   189                  AIF   (&SRL NE X'7FFFFFFF').SRLERR
  GEN  PC LOC=  406 OP= PUSHV(&SRL)=2147483647
  GEN  PC LOC=  407 OP= COMPNE(2147483647,2147483647)=0
  GEN  PC LOC=  408 OP= AIF(0)=.SRLERR NO BRANCH
OPEN CODE   190                  MNOTE 'TESTING OPERATOR TYPES A,E,M,O,S,U'
OPEN CODE   190   (1/190)          MNOTE 'TESTING OPERATOR TYPES A,E,M,O,S,U'
OPEN CODE   191                  AIF   (O'PUSH      NE 'A').OTERR  ASSEMBLER  CODE
O' A = O'PUSH
  GEN  PC LOC=  409 OP= PUSHC()='PUSH'
  GEN  PC LOC=  410 OP= O'('PUSH')='A'
  GEN  PC LOC=  411 OP= COMPNE('A','A')=0
  GEN  PC LOC=  412 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   192                  AIF   (O'BER       NE 'E').OTERR  EXTENDED MNEMONIC CODE
O' E = O'BER
  GEN  PC LOC=  413 OP= PUSHC()='BER'
  GEN  PC LOC=  414 OP= O'('BER')='E'
  GEN  PC LOC=  415 OP= COMPNE('E','E')=0
  GEN  PC LOC=  416 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   193                  AIF   (O'BE        NE 'E').OTERR  EXTENDED MNEMONIC CODE
O' E = O'BE
  GEN  PC LOC=  417 OP= PUSHC()='BE'
  GEN  PC LOC=  418 OP= O'('BE')='E'
  GEN  PC LOC=  419 OP= COMPNE('E','E')=0
  GEN  PC LOC=  420 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   194                  AIF   (O'BER       NE 'E').OTERR  EXTENDED MNEMONIC CODE
O' E = O'BER
  GEN  PC LOC=  421 OP= PUSHC()='BER'
  GEN  PC LOC=  422 OP= O'('BER')='E'
  GEN  PC LOC=  423 OP= COMPNE('E','E')=0
  GEN  PC LOC=  424 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   195                  AIF   (O'JE        NE 'E').OTERR  EXTENDED MNEMONIC CODE
O' E = O'JE
  GEN  PC LOC=  425 OP= PUSHC()='JE'
  GEN  PC LOC=  426 OP= O'('JE')='E'
  GEN  PC LOC=  427 OP= COMPNE('E','E')=0
  GEN  PC LOC=  428 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   196                  AIF   (O'SUBENTRY  NE 'M').OTERR  LOADED MACRO
O' M = O'SUBENTRY
  GEN  PC LOC=  429 OP= PUSHC()='SUBENTRY'
  GEN  PC LOC=  430 OP= O'('SUBENTRY')='M'
  GEN  PC LOC=  431 OP= COMPNE('M','M')=0
  GEN  PC LOC=  432 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   197                  AIF   (O'SRNM      NE 'O').OTERR  MACHIVE CODE
O' O = O'SRNM
  GEN  PC LOC=  433 OP= PUSHC()='SRNM'
  GEN  PC LOC=  434 OP= O'('SRNM')='O'
  GEN  PC LOC=  435 OP= COMPNE('O','O')=0
  GEN  PC LOC=  436 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   198                  AIF   (O'BCR       NE 'O').OTERR  MACHIVE CODE
O' O = O'BCR
  GEN  PC LOC=  437 OP= PUSHC()='BCR'
  GEN  PC LOC=  438 OP= O'('BCR')='O'
  GEN  PC LOC=  439 OP= COMPNE('O','O')=0
  GEN  PC LOC=  440 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   199                  AIF   (O'BC        NE 'O').OTERR  MACHIVE CODE
O' O = O'BC
  GEN  PC LOC=  441 OP= PUSHC()='BC'
  GEN  PC LOC=  442 OP= O'('BC')='O'
  GEN  PC LOC=  443 OP= COMPNE('O','O')=0
  GEN  PC LOC=  444 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   200                  AIF   (O'BRC       NE 'O').OTERR  MACHIVE CODE
O' O = O'BRC
  GEN  PC LOC=  445 OP= PUSHC()='BRC'
  GEN  PC LOC=  446 OP= O'('BRC')='O'
  GEN  PC LOC=  447 OP= COMPNE('O','O')=0
  GEN  PC LOC=  448 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   201                  AIF   (O'SAVE      NE 'S').OTERR  LIBRARY MACRO FOUND
O' S = O'SAVE
  GEN  PC LOC=  449 OP= PUSHC()='SAVE'
  GEN  PC LOC=  450 OP= O'('SAVE')='S'
  GEN  PC LOC=  451 OP= COMPNE('S','S')=0
  GEN  PC LOC=  452 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   202                  AIF   (O'XXXXX     NE 'U').OTERR  UNDEFINED RPI 406 WAS SRNMT
O' U = O'XXXXX
  GEN  PC LOC=  453 OP= PUSHC()='XXXXX'
  GEN  PC LOC=  454 OP= O'('XXXXX')='U'
  GEN  PC LOC=  455 OP= COMPNE('U','U')=0
  GEN  PC LOC=  456 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   203                  MNOTE 'TESTING STRING DUPLICATION IN EXPRESSION'
OPEN CODE   203   (1/203)          MNOTE 'TESTING STRING DUPLICATION IN EXPRESSION'
OPEN CODE   204                  AIF   ('A'.(2)'B' NE 'ABB').DUPERR
  GEN  PC LOC=  457 OP= PUSHC()='A'
  GEN  PC LOC=  458 OP= PUSHA()=2
DUP BB = (2)'B'
  GEN  PC LOC=  459 OP= PUSHC()='B'
  GEN  PC LOC=  460 OP= DUP(2,'B')='BB'
CONCAT ABB = A . BB
  GEN  PC LOC=  461 OP= CONCAT('A','BB')='ABB'
  GEN  PC LOC=  462 OP= COMPNE('ABB','ABB')=0
  GEN  PC LOC=  463 OP= AIF(0)=.DUPERR NO BRANCH
OPEN CODE   205         &A       SETC  'A'
  GEN  PC LOC=  464 OP= PUSHC()='A'
  GEN  PC LOC=  465 OP= STORV(&A)='A'
OPEN CODE   206                  AIF   ('&A'.(2)'B' NE 'ABB').DUPERR
  GEN  PC LOC=  466 OP= PUSHV(&A)='A'
  GEN  PC LOC=  467 OP= PUSHA()=2
DUP BB = (2)'B'
  GEN  PC LOC=  468 OP= PUSHC()='B'
  GEN  PC LOC=  469 OP= DUP(2,'B')='BB'
CONCAT ABB = A . BB
  GEN  PC LOC=  470 OP= CONCAT('A','BB')='ABB'
  GEN  PC LOC=  471 OP= COMPNE('ABB','ABB')=0
  GEN  PC LOC=  472 OP= AIF(0)=.DUPERR NO BRANCH
OPEN CODE   207                  AIF   ('A'.(2)'B' NE 'ABB').DUPERR
  GEN  PC LOC=  473 OP= PUSHC()='A'
  GEN  PC LOC=  474 OP= PUSHA()=2
DUP BB = (2)'B'
  GEN  PC LOC=  475 OP= PUSHC()='B'
  GEN  PC LOC=  476 OP= DUP(2,'B')='BB'
CONCAT ABB = A . BB
  GEN  PC LOC=  477 OP= CONCAT('A','BB')='ABB'
  GEN  PC LOC=  478 OP= COMPNE('ABB','ABB')=0
  GEN  PC LOC=  479 OP= AIF(0)=.DUPERR NO BRANCH
OPEN CODE   208                  MNOTE 'TEST FIND'
OPEN CODE   208   (1/208)          MNOTE 'TEST FIND'
OPEN CODE   209         &IB      SETC  FIND('ABC','B')
  GEN  PC LOC=  480 OP= PUSHC()='ABC'
FIND 2 = B IN ABC
  GEN  PC LOC=  481 OP= PUSHC()='B'
  GEN  PC LOC=  482 OP= FIND('ABC','B')=2
  GEN  PC LOC=  483 OP= STORV(&IB)='2'
OPEN CODE   210                  AIF   ('&IB' NE 2).FINDERR
  GEN  PC LOC=  484 OP= PUSHV(&IB)='2'
  GEN  PC LOC=  485 OP= COMPNE(2,2)=0
  GEN  PC LOC=  486 OP= AIF(0)=.FINDERR NO BRANCH
OPEN CODE   211         &IB      SETC  ('ABC' FIND 'XB')
  GEN  PC LOC=  487 OP= PUSHC()='ABC'
FIND 2 = XB IN ABC
  GEN  PC LOC=  488 OP= PUSHC()='XB'
  GEN  PC LOC=  489 OP= FIND('ABC','XB')=2
  GEN  PC LOC=  490 OP= STORV(&IB)='2'
OPEN CODE   212                  AIF   ('&IB' NE 2).FINDERR
  GEN  PC LOC=  491 OP= PUSHV(&IB)='2'
  GEN  PC LOC=  492 OP= COMPNE(2,2)=0
  GEN  PC LOC=  493 OP= AIF(0)=.FINDERR NO BRANCH
OPEN CODE   213         &IB      SETC  FIND('ABC' 'CB')
  GEN  PC LOC=  494 OP= PUSHC()='ABC'
FIND 2 = CB IN ABC
  GEN  PC LOC=  495 OP= PUSHC()='CB'
  GEN  PC LOC=  496 OP= FIND('ABC','CB')=2
  GEN  PC LOC=  497 OP= STORV(&IB)='2'
OPEN CODE   214                  AIF   ('&IB' NE 2).FINDERR
  GEN  PC LOC=  498 OP= PUSHV(&IB)='2'
  GEN  PC LOC=  499 OP= COMPNE(2,2)=0
  GEN  PC LOC=  500 OP= AIF(0)=.FINDERR NO BRANCH
OPEN CODE   215                  MNOTE 'TEST INDEX'
OPEN CODE   215   (1/215)          MNOTE 'TEST INDEX'
OPEN CODE   216         &IB      SETC  INDEX('ABXBC','BC')
  GEN  PC LOC=  501 OP= PUSHC()='ABXBC'
INDEX 4 = BC IN ABXBC
  GEN  PC LOC=  502 OP= PUSHC()='BC'
  GEN  PC LOC=  503 OP= INDEX('ABXBC','BC')=4
  GEN  PC LOC=  504 OP= STORV(&IB)='4'
OPEN CODE   217                  AIF   ('&IB' NE 4).INDEXERR
  GEN  PC LOC=  505 OP= PUSHV(&IB)='4'
  GEN  PC LOC=  506 OP= COMPNE(4,4)=0
  GEN  PC LOC=  507 OP= AIF(0)=.INDEXERR NO BRANCH
OPEN CODE   218         &IB      SETC  ('ABXBC' INDEX 'BC')
  GEN  PC LOC=  508 OP= PUSHC()='ABXBC'
INDEX 4 = BC IN ABXBC
  GEN  PC LOC=  509 OP= PUSHC()='BC'
  GEN  PC LOC=  510 OP= INDEX('ABXBC','BC')=4
  GEN  PC LOC=  511 OP= STORV(&IB)='4'
OPEN CODE   219                  AIF   ('&IB' NE 4).INDEXERR
  GEN  PC LOC=  512 OP= PUSHV(&IB)='4'
  GEN  PC LOC=  513 OP= COMPNE(4,4)=0
  GEN  PC LOC=  514 OP= AIF(0)=.INDEXERR NO BRANCH
OPEN CODE   220         &IB      SETC  INDEX('ABXBC' 'BC')
  GEN  PC LOC=  515 OP= PUSHC()='ABXBC'
INDEX 4 = BC IN ABXBC
  GEN  PC LOC=  516 OP= PUSHC()='BC'
  GEN  PC LOC=  517 OP= INDEX('ABXBC','BC')=4
  GEN  PC LOC=  518 OP= STORV(&IB)='4'
OPEN CODE   221                  AIF   ('&IB' NE 4).INDEXERR
  GEN  PC LOC=  519 OP= PUSHV(&IB)='4'
  GEN  PC LOC=  520 OP= COMPNE(4,4)=0
  GEN  PC LOC=  521 OP= AIF(0)=.INDEXERR NO BRANCH
OPEN CODE   222                  AGO   .LOOP
 
OPEN CODE    37         &PASS    SETA  &PASS+1
  EXEC PC LOC=   84 OP= INC(&PASS)=2
OPEN CODE    38                  AIF   (&PASS GE 3).ENDLOOP
  EXEC PC LOC=   87 OP= PUSHV(&PASS)=2
  EXEC PC LOC=   88 OP= COMPGE(2,3)=0
  EXEC PC LOC=   89 OP= AIF(0)=.ENDLOOP NO BRANCH
OPEN CODE    39                  MNOTE 'TESTOPR1 PASS &PASS'
OPEN CODE    39    (1/39)          MNOTE 'TESTOPR1 PASS 2'
OPEN CODE    40                  MNOTE 'TESTING UPPER AND LOWER'
OPEN CODE    40    (1/40)          MNOTE 'TESTING UPPER AND LOWER'
OPEN CODE    41         &LC      SETC  'abc'
  EXEC PC LOC=   90 OP= PUSHC()='abc'
  EXEC PC LOC=   91 OP= STORV(&LC)='abc'
OPEN CODE    42                  AIF   ('&LC' NE 'abc').LCERR
  EXEC PC LOC=   92 OP= PUSHV(&LC)='abc'
  EXEC PC LOC=   93 OP= COMPNE('abc','abc')=0
  EXEC PC LOC=   94 OP= AIF(0)=.LCERR NO BRANCH
OPEN CODE    43         &UC      SETC  (UPPER '&LC')
  EXEC PC LOC=   95 OP= PUSHV(&LC)='abc'
UPPER ABC = UPPER abc
  EXEC PC LOC=   96 OP= UPPER('abc')='ABC'
  EXEC PC LOC=   97 OP= STORV(&UC)='ABC'
OPEN CODE    44                  AIF   ('&UC' NE 'ABC').UCERR
  EXEC PC LOC=   98 OP= PUSHV(&UC)='ABC'
  EXEC PC LOC=   99 OP= COMPNE('ABC','ABC')=0
  EXEC PC LOC=  100 OP= AIF(0)=.UCERR NO BRANCH
OPEN CODE    45         &UC      SETC  'ABC'
  EXEC PC LOC=  101 OP= PUSHC()='ABC'
  EXEC PC LOC=  102 OP= STORV(&UC)='ABC'
OPEN CODE    46                  AIF   ('&UC' NE 'ABC').UCERR
  EXEC PC LOC=  103 OP= PUSHV(&UC)='ABC'
  EXEC PC LOC=  104 OP= COMPNE('ABC','ABC')=0
  EXEC PC LOC=  105 OP= AIF(0)=.UCERR NO BRANCH
OPEN CODE    47         &LC      SETC  (LOWER '&UC')
  EXEC PC LOC=  106 OP= PUSHV(&UC)='ABC'
LOWER abc = LOWER ABC
  EXEC PC LOC=  107 OP= LOWER('ABC')='abc'
  EXEC PC LOC=  108 OP= STORV(&LC)='abc'
OPEN CODE    48                  AIF   ('&LC' NE 'abc').LCERR
  EXEC PC LOC=  109 OP= PUSHV(&LC)='abc'
  EXEC PC LOC=  110 OP= COMPNE('abc','abc')=0
  EXEC PC LOC=  111 OP= AIF(0)=.LCERR NO BRANCH
OPEN CODE    49                  MNOTE 'TESTING ?2? PREFIX OPERATORS'
OPEN CODE    49    (1/49)          MNOTE 'TESTING ?2? PREFIX OPERATORS'
OPEN CODE    50         &A2B     SETC  (A2B(4))
  EXEC PC LOC=  112 OP= PUSHA()=4
  EXEC PC LOC=  113 OP= A2B(4)='00000000000000000000000000000100'
  EXEC PC LOC=  114 OP= STORV(&A2B)='00000000000000000000000000000100'
OPEN CODE    51                  MNOTE 'A2B(4)=&A2B'                           RPI-1105
OPEN CODE    51    (1/51)          MNOTE 'A2B(4)=00000000000000000000000000000100'                           RPI-1105
OPEN CODE    52                  AIF   ('&A2B' NE '00000000000000000000000000000100').A2ERR
  EXEC PC LOC=  115 OP= PUSHV(&A2B)='00000000000000000000000000000100'
  EXEC PC LOC=  116 OP= COMPNE('00000000000000000000000000000100','00000000000000000000000000000100')=0
  EXEC PC LOC=  117 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    53         &A2C     SETC  (A2C(241))
  EXEC PC LOC=  118 OP= PUSHA()=241
  EXEC PC LOC=  119 OP= A2C(241)='...1'
  EXEC PC LOC=  120 OP= STORV(&A2C)='...1'
OPEN CODE    54                  MNOTE 'A2C(241)=&A2C'
OPEN CODE    54    (1/54)          MNOTE 'A2C(241)=...1'
OPEN CODE    55                  AIF   ('&A2C'(4,1) NE '1').A2ERR
  EXEC PC LOC=  121 OP= PUSHV(&A2C)='...1'
  EXEC PC LOC=  122 OP= PUSHA()=4
  EXEC PC LOC=  123 OP= PUSHA()=1
  EXEC PC LOC=  124 OP= SUBSTR('...1',4,1)='1'
  EXEC PC LOC=  125 OP= COMPNE('1','1')=0
  EXEC PC LOC=  126 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    56         &A2D     SETC  (A2D(241))
  EXEC PC LOC=  127 OP= PUSHA()=241
  EXEC PC LOC=  128 OP= A2D(241)='+241'
  EXEC PC LOC=  129 OP= STORV(&A2D)='+241'
OPEN CODE    57                  MNOTE 'A2D(241)=&A2D'
OPEN CODE    57    (1/57)          MNOTE 'A2D(241)=+241'
OPEN CODE    58                  AIF   ('&A2D' NE '+241').A2ERR
  EXEC PC LOC=  130 OP= PUSHV(&A2D)='+241'
  EXEC PC LOC=  131 OP= COMPNE('+241','+241')=0
  EXEC PC LOC=  132 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    59         &A2D     SETC  (A2D(-241))
  EXEC PC LOC=  133 OP= PUSHA()=-241
  EXEC PC LOC=  134 OP= A2D(-241)='-241'
  EXEC PC LOC=  135 OP= STORV(&A2D)='-241'
OPEN CODE    60                  MNOTE 'A2D(-241)=&A2D'
OPEN CODE    60    (1/60)          MNOTE 'A2D(-241)=-241'
OPEN CODE    61                  AIF   ('&A2D' NE '-241').A2ERR
  EXEC PC LOC=  136 OP= PUSHV(&A2D)='-241'
  EXEC PC LOC=  137 OP= COMPNE('-241','-241')=0
  EXEC PC LOC=  138 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    62         &A2X     SETC  (A2X(241))
  EXEC PC LOC=  139 OP= PUSHA()=241
  EXEC PC LOC=  140 OP= A2X(241)='000000F1'
  EXEC PC LOC=  141 OP= STORV(&A2X)='000000F1'
OPEN CODE    63                  MNOTE 'A2X(241)=&A2X'
OPEN CODE    63    (1/63)          MNOTE 'A2X(241)=000000F1'
OPEN CODE    64                  AIF   ('&A2X' NE '000000F1').A2ERR
  EXEC PC LOC=  142 OP= PUSHV(&A2X)='000000F1'
  EXEC PC LOC=  143 OP= COMPNE('000000F1','000000F1')=0
  EXEC PC LOC=  144 OP= AIF(0)=.A2ERR NO BRANCH
OPEN CODE    65         &B2A     SETA  (B2A('100'))
  EXEC PC LOC=  145 OP= PUSHC()='100'
  EXEC PC LOC=  146 OP= B2A(B'100')=4
  EXEC PC LOC=  147 OP= STORV(&B2A)=4
OPEN CODE    66                  MNOTE 'B2A(''100'')=&B2A'
OPEN CODE    66    (1/66)          MNOTE 'B2A('100')=4'
OPEN CODE    67                  AIF   ('&B2A' NE 4).B2ERR
  EXEC PC LOC=  148 OP= PUSHV(&B2A)=4
  EXEC PC LOC=  149 OP= COMPNE(4,4)=0
  EXEC PC LOC=  150 OP= AIF(0)=.B2ERR NO BRANCH
OPEN CODE    68         &B2C     SETC  (B2C('11110001'))
  EXEC PC LOC=  151 OP= PUSHC()='11110001'
  EXEC PC LOC=  152 OP= B2C('100')='...1'
  EXEC PC LOC=  153 OP= STORV(&B2C)='...1'
OPEN CODE    69                  MNOTE 'B2C(''11110001'')=&B2C'
OPEN CODE    69    (1/69)          MNOTE 'B2C('11110001')=...1'
OPEN CODE    70                  AIF   ('&B2C'(4,1) NE '1').B2ERR
  EXEC PC LOC=  154 OP= PUSHV(&B2C)='...1'
  EXEC PC LOC=  155 OP= PUSHA()=4
  EXEC PC LOC=  156 OP= PUSHA()=1
  EXEC PC LOC=  157 OP= SUBSTR('...1',4,1)='1'
  EXEC PC LOC=  158 OP= COMPNE('1','1')=0
  EXEC PC LOC=  159 OP= AIF(0)=.B2ERR NO BRANCH
OPEN CODE    71         &B2D     SETC  (B2D('100'))
  EXEC PC LOC=  160 OP= PUSHC()='100'
  EXEC PC LOC=  161 OP= B2D('100')='4'
  EXEC PC LOC=  162 OP= STORV(&B2D)='4'
OPEN CODE    72                  MNOTE 'B2D(''100'')=&B2D'
OPEN CODE    72    (1/72)          MNOTE 'B2D('100')=4'
OPEN CODE    73                  AIF   ('&B2D' NE 4).B2ERR
  EXEC PC LOC=  163 OP= PUSHV(&B2D)='4'
  EXEC PC LOC=  164 OP= COMPNE(4,4)=0
  EXEC PC LOC=  165 OP= AIF(0)=.B2ERR NO BRANCH
OPEN CODE    74         &B2X     SETC  (B2X('11110001'))
  EXEC PC LOC=  166 OP= PUSHC()='11110001'
  EXEC PC LOC=  167 OP= B2X('11110001')='000000F1'
  EXEC PC LOC=  168 OP= STORV(&B2X)='000000F1'
OPEN CODE    75                  MNOTE 'B2X(''11110001'')=&B2X'
OPEN CODE    75    (1/75)          MNOTE 'B2X('11110001')=000000F1'
OPEN CODE    76                  AIF   ('&B2X' NE '000000F1').B2ERR
  EXEC PC LOC=  169 OP= PUSHV(&B2X)='000000F1'
  EXEC PC LOC=  170 OP= COMPNE('000000F1','000000F1')=0
  EXEC PC LOC=  171 OP= AIF(0)=.B2ERR NO BRANCH
OPEN CODE    77         &C2A     SETA  (C2A('1'))
  EXEC PC LOC=  172 OP= PUSHC()='1'
  EXEC PC LOC=  173 OP= C2A('C'1'')=241
  EXEC PC LOC=  174 OP= STORV(&C2A)=241
OPEN CODE    78                  MNOTE 'C2A(''1'')=&C2A'
OPEN CODE    78    (1/78)          MNOTE 'C2A('1')=241'
OPEN CODE    79                  AIF   ('&C2A' NE 241).C2ERR
  EXEC PC LOC=  175 OP= PUSHV(&C2A)=241
  EXEC PC LOC=  176 OP= COMPNE(241,241)=0
  EXEC PC LOC=  177 OP= AIF(0)=.C2ERR NO BRANCH
OPEN CODE    80         &C2B     SETC  (C2B('1'))
  EXEC PC LOC=  178 OP= PUSHC()='1'
  EXEC PC LOC=  179 OP= C2B('C'1'')='11110001'
  EXEC PC LOC=  180 OP= STORV(&C2B)='11110001'
OPEN CODE    81                  MNOTE 'C2B(''1'')=&C2B'
OPEN CODE    81    (1/81)          MNOTE 'C2B('1')=11110001'
OPEN CODE    82                  AIF   ('&C2B' NE '11110001').C2ERR
  EXEC PC LOC=  181 OP= PUSHV(&C2B)='11110001'
  EXEC PC LOC=  182 OP= COMPNE('11110001','11110001')=0
  EXEC PC LOC=  183 OP= AIF(0)=.C2ERR NO BRANCH
OPEN CODE    83         &C2D     SETC  (C2D('1'))
  EXEC PC LOC=  184 OP= PUSHC()='1'
  EXEC PC LOC=  185 OP= C2D('C'1'')='241'
  EXEC PC LOC=  186 OP= STORV(&C2D)='241'
OPEN CODE    84                  MNOTE 'C2D(''1'')=&C2D'
OPEN CODE    84    (1/84)          MNOTE 'C2D('1')=241'
OPEN CODE    85                  AIF   ('&C2D' NE '241').C2ERR
  EXEC PC LOC=  187 OP= PUSHV(&C2D)='241'
  EXEC PC LOC=  188 OP= COMPNE('241','241')=0
  EXEC PC LOC=  189 OP= AIF(0)=.C2ERR NO BRANCH
OPEN CODE    86         &C2X     SETC  (C2X('1'))
  EXEC PC LOC=  190 OP= PUSHC()='1'
  EXEC PC LOC=  191 OP= C2X('C'1'')='F1'
  EXEC PC LOC=  192 OP= STORV(&C2X)='F1'
OPEN CODE    87                  MNOTE 'C2X(''1'')=&C2X'
OPEN CODE    87    (1/87)          MNOTE 'C2X('1')=F1'
OPEN CODE    88                  AIF   ('&C2X' NE 'F1').C2ERR         RPI-1101 FIX LEN = 2 * N
  EXEC PC LOC=  193 OP= PUSHV(&C2X)='F1'
  EXEC PC LOC=  194 OP= COMPNE('F1','F1')=0
  EXEC PC LOC=  195 OP= AIF(0)=.C2ERR NO BRANCH
OPEN CODE    89         &SIGNED  SETC  (SIGNED (D2A('-1')))
  EXEC PC LOC=  196 OP= PUSHC()='-1'
  EXEC PC LOC=  197 OP= D2A('-1')=-1
  EXEC PC LOC=  198 OP= SIGNED(241)='-1'
  EXEC PC LOC=  199 OP= STORV(&SIGNED)='-1'
OPEN CODE    90                  MNOTE 'D2A(''-1'')=&SIGNED'
OPEN CODE    90    (1/90)          MNOTE 'D2A('-1')=-1'
OPEN CODE    91                  AIF   ('&SIGNED' NE '-1').D2ERR
  EXEC PC LOC=  200 OP= PUSHV(&SIGNED)='-1'
  EXEC PC LOC=  201 OP= COMPNE('-1','-1')=0
  EXEC PC LOC=  202 OP= AIF(0)=.D2ERR NO BRANCH
OPEN CODE    92         &D2B     SETC  (D2B('241'))
  EXEC PC LOC=  203 OP= PUSHC()='241'
  EXEC PC LOC=  204 OP= D2B('241')='11110001'
  EXEC PC LOC=  205 OP= STORV(&D2B)='11110001'
OPEN CODE    93                  MNOTE 'D2B(''1'')=&D2B'
OPEN CODE    93    (1/93)          MNOTE 'D2B('1')=11110001'
OPEN CODE    94                  AIF   ('&D2B' NE '11110001').D2ERR
  EXEC PC LOC=  206 OP= PUSHV(&D2B)='11110001'
  EXEC PC LOC=  207 OP= COMPNE('11110001','11110001')=0
  EXEC PC LOC=  208 OP= AIF(0)=.D2ERR NO BRANCH
OPEN CODE    95         &D2C     SETC  (D2C('241'))
  EXEC PC LOC=  209 OP= PUSHC()='241'
  EXEC PC LOC=  210 OP= D2C('241')='...1'
  EXEC PC LOC=  211 OP= STORV(&D2C)='...1'
OPEN CODE    96                  MNOTE 'D2C(''1'')=&D2C'
OPEN CODE    96    (1/96)          MNOTE 'D2C('1')=...1'
OPEN CODE    97                  AIF   ('&D2C'(4,1) NE '1').D2ERR
  EXEC PC LOC=  212 OP= PUSHV(&D2C)='...1'
  EXEC PC LOC=  213 OP= PUSHA()=4
  EXEC PC LOC=  214 OP= PUSHA()=1
  EXEC PC LOC=  215 OP= SUBSTR('...1',4,1)='1'
  EXEC PC LOC=  216 OP= COMPNE('1','1')=0
  EXEC PC LOC=  217 OP= AIF(0)=.D2ERR NO BRANCH
OPEN CODE    98         &D2X     SETC  (D2X('241'))
  EXEC PC LOC=  218 OP= PUSHC()='241'
  EXEC PC LOC=  219 OP= D2X('241')='000000F1'
  EXEC PC LOC=  220 OP= STORV(&D2X)='000000F1'
OPEN CODE    99                  MNOTE 'D2X(''241'')=&D2X'
OPEN CODE    99    (1/99)          MNOTE 'D2X('241')=000000F1'
OPEN CODE   100                  AIF   ('&D2X' NE '000000F1').D2ERR
  EXEC PC LOC=  221 OP= PUSHV(&D2X)='000000F1'
  EXEC PC LOC=  222 OP= COMPNE('000000F1','000000F1')=0
  EXEC PC LOC=  223 OP= AIF(0)=.D2ERR NO BRANCH
OPEN CODE   101         &X2A     SETA  (X2A('F1'))
  EXEC PC LOC=  224 OP= PUSHC()='F1'
  EXEC PC LOC=  225 OP= X2A()=241
  EXEC PC LOC=  226 OP= STORV(&X2A)=241
OPEN CODE   102                  MNOTE 'X2A(''F1'')=&X2A'
OPEN CODE   102   (1/102)          MNOTE 'X2A('F1')=241'
OPEN CODE   103                  AIF   (&X2A NE 241).X2ERR
  EXEC PC LOC=  227 OP= PUSHV(&X2A)=241
  EXEC PC LOC=  228 OP= COMPNE(241,241)=0
  EXEC PC LOC=  229 OP= AIF(0)=.X2ERR NO BRANCH
OPEN CODE   104         &X2B     SETC  (X2B('1F'))
  EXEC PC LOC=  230 OP= PUSHC()='1F'
  EXEC PC LOC=  231 OP= X2B('1F')='00011111'
  EXEC PC LOC=  232 OP= STORV(&X2B)='00011111'
OPEN CODE   105                  MNOTE 'X2B(''1F'')=&X2B'
OPEN CODE   105   (1/105)          MNOTE 'X2B('1F')=00011111'
OPEN CODE   106                  AIF   ('&X2B' NE '00011111').X2ERR
  EXEC PC LOC=  233 OP= PUSHV(&X2B)='00011111'
  EXEC PC LOC=  234 OP= COMPNE('00011111','00011111')=0
  EXEC PC LOC=  235 OP= AIF(0)=.X2ERR NO BRANCH
OPEN CODE   107         &X2C     SETC  (X2C('F1'))
  EXEC PC LOC=  236 OP= PUSHC()='F1'
  EXEC PC LOC=  237 OP= X2C('F1')='...1'
  EXEC PC LOC=  238 OP= STORV(&X2C)='...1'
OPEN CODE   108                  MNOTE 'X2C(''F1'')=&X2C'
OPEN CODE   108   (1/108)          MNOTE 'X2C('F1')=...1'
OPEN CODE   109                  AIF   ('&X2C'(4,1) NE '1').X2ERR
  EXEC PC LOC=  239 OP= PUSHV(&X2C)='...1'
  EXEC PC LOC=  240 OP= PUSHA()=4
  EXEC PC LOC=  241 OP= PUSHA()=1
  EXEC PC LOC=  242 OP= SUBSTR('...1',4,1)='1'
  EXEC PC LOC=  243 OP= COMPNE('1','1')=0
  EXEC PC LOC=  244 OP= AIF(0)=.X2ERR NO BRANCH
OPEN CODE   110         &X2D     SETC  (X2D('F1'))
  EXEC PC LOC=  245 OP= PUSHC()='F1'
  EXEC PC LOC=  246 OP= X2D('F1')='241'
  EXEC PC LOC=  247 OP= STORV(&X2D)='241'
OPEN CODE   111                  MNOTE 'X2D(''F1'')=&X2D'
OPEN CODE   111   (1/111)          MNOTE 'X2D('F1')=241'
OPEN CODE   112                  AIF   ('&X2D' NE '241').X2ERR
  EXEC PC LOC=  248 OP= PUSHV(&X2D)='241'
  EXEC PC LOC=  249 OP= COMPNE('241','241')=0
  EXEC PC LOC=  250 OP= AIF(0)=.X2ERR NO BRANCH
OPEN CODE   113                  MNOTE 'TESTING DCLEN, DCVAL, DEQUOTE'
OPEN CODE   113   (1/113)          MNOTE 'TESTING DCLEN, DCVAL, DEQUOTE'
OPEN CODE   114         &DCLSTR  SETC  '''''''''&&&&&&&&1'''''''''  ''&&1'' = 7  RPI-1080
  EXEC PC LOC=  251 OP= PUSHC()='''''&&&&1'''''
  EXEC PC LOC=  252 OP= STORV(&DCLSTR)='''''&&&&1'''''
OPEN CODE   115         &DCLEN   SETA  (DCLEN('&DCLSTR'))
  EXEC PC LOC=  253 OP= PUSHV(&DCLSTR)='''''&&&&1'''''
  EXEC PC LOC=  254 OP= DCLEN('''''&&&&1''''')=7
  EXEC PC LOC=  255 OP= STORV(&DCLEN)=7
OPEN CODE   116                  MNOTE 'DCLEN(&DCLSTR)=&DCLEN'
OPEN CODE   116   (1/116)          MNOTE 'DCLEN(''''&&&&1'''')=7'
OPEN CODE   117                  AIF   (&DCLEN NE 7).DCLERR                      RPI-1080
  EXEC PC LOC=  256 OP= PUSHV(&DCLEN)=7
  EXEC PC LOC=  257 OP= COMPNE(7,7)=0
  EXEC PC LOC=  258 OP= AIF(0)=.DCLERR NO BRANCH
OPEN CODE   118         &DCVSTR  SETC  '''''&&&&1'''''
  EXEC PC LOC=  259 OP= PUSHC()='''&&1'''
  EXEC PC LOC=  260 OP= STORV(&DCVSTR)='''&&1'''
OPEN CODE   119         &DCVAL   SETC  (DCVAL('&DCVSTR'))
  EXEC PC LOC=  261 OP= PUSHV(&DCVSTR)='''&&1'''
  EXEC PC LOC=  262 OP= DCVAL('''&&1''')=''&1''
  EXEC PC LOC=  263 OP= STORV(&DCVAL)=''&1''
OPEN CODE   120                  MNOTE 'DCVAL(&DCVSTR)=&DCVAL'
OPEN CODE   120   (1/120)          MNOTE 'DCVAL(''&&1'')='&1''
OPEN CODE   121                  AIF   ('&DCVAL' NE '''&&1''').DCVERR  RPI 1080
  EXEC PC LOC=  264 OP= PUSHV(&DCVAL)=''&1''
  EXEC PC LOC=  265 OP= COMPNE(''&1'',''&1'')=0
  EXEC PC LOC=  266 OP= AIF(0)=.DCVERR NO BRANCH
OPEN CODE   122         &DCESTR  SETC  '''ABC'''
  EXEC PC LOC=  267 OP= PUSHC()=''ABC''
  EXEC PC LOC=  268 OP= STORV(&DCESTR)=''ABC''
OPEN CODE   123         &DEQUOTE SETC  (DEQUOTE('&DCESTR'))
  EXEC PC LOC=  269 OP= PUSHV(&DCESTR)=''ABC''
  EXEC PC LOC=  270 OP= DEQUOTE(''ABC'')='ABC'
  EXEC PC LOC=  271 OP= STORV(&DEQUOTE)='ABC'
OPEN CODE   124                  MNOTE 'DEQUOTE(&DCESTR)=&DEQUOTE'
OPEN CODE   124   (1/124)          MNOTE 'DEQUOTE('ABC')=ABC'
OPEN CODE   125                  AIF   ('&DEQUOTE' NE 'ABC').DCEERR
  EXEC PC LOC=  272 OP= PUSHV(&DEQUOTE)='ABC'
  EXEC PC LOC=  273 OP= COMPNE('ABC','ABC')=0
  EXEC PC LOC=  274 OP= AIF(0)=.DCEERR NO BRANCH
OPEN CODE   126                  MNOTE 'TESTING ISBIN, ISDEC, ISHEX, ISSYM'
OPEN CODE   126   (1/126)          MNOTE 'TESTING ISBIN, ISDEC, ISHEX, ISSYM'
OPEN CODE   127         &ISBIN   SETC  (ISBIN('100'))
  EXEC PC LOC=  275 OP= PUSHC()='100'
  EXEC PC LOC=  276 OP= ISBIN('100')=1
  EXEC PC LOC=  277 OP= STORV(&ISBIN)='1'
OPEN CODE   128                  MNOTE 'ISBIN(''100'')=&ISBIN'
OPEN CODE   128   (1/128)          MNOTE 'ISBIN('100')=1'
OPEN CODE   129                  AIF   ('&ISBIN' NE 1).ISERR
  EXEC PC LOC=  278 OP= PUSHV(&ISBIN)='1'
  EXEC PC LOC=  279 OP= COMPNE(1,1)=0
  EXEC PC LOC=  280 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   130         &ISBIN   SETC  (ISBIN('123'))
  EXEC PC LOC=  281 OP= PUSHC()='123'
  EXEC PC LOC=  282 OP= ISBIN('123')=0
  EXEC PC LOC=  283 OP= STORV(&ISBIN)='0'
OPEN CODE   131                  MNOTE 'ISBIN(''123'')=&ISBIN'
OPEN CODE   131   (1/131)          MNOTE 'ISBIN('123')=0'
OPEN CODE   132                  AIF   ('&ISBIN' NE 0).ISERR
  EXEC PC LOC=  284 OP= PUSHV(&ISBIN)='0'
  EXEC PC LOC=  285 OP= COMPNE(0,0)=0
  EXEC PC LOC=  286 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   133         &ISDEC   SETC  (ISDEC('123'))
  EXEC PC LOC=  287 OP= PUSHC()='123'
  EXEC PC LOC=  288 OP= ISDEC('123')=1
  EXEC PC LOC=  289 OP= STORV(&ISDEC)='1'
OPEN CODE   134                  MNOTE 'ISDEC(''123'')=&ISDEC'
OPEN CODE   134   (1/134)          MNOTE 'ISDEC('123')=1'
OPEN CODE   135                  AIF   ('&ISDEC' NE 1).ISERR
  EXEC PC LOC=  290 OP= PUSHV(&ISDEC)='1'
  EXEC PC LOC=  291 OP= COMPNE(1,1)=0
  EXEC PC LOC=  292 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   136         &ISDEC   SETC  (ISDEC('F1'))
  EXEC PC LOC=  293 OP= PUSHC()='F1'
  EXEC PC LOC=  294 OP= ISDEC('F1')=0
  EXEC PC LOC=  295 OP= STORV(&ISDEC)='0'
OPEN CODE   137                  MNOTE 'ISDEC(''F1'')=&ISDEC'
OPEN CODE   137   (1/137)          MNOTE 'ISDEC('F1')=0'
OPEN CODE   138                  AIF   ('&ISDEC' NE 0).ISERR
  EXEC PC LOC=  296 OP= PUSHV(&ISDEC)='0'
  EXEC PC LOC=  297 OP= COMPNE(0,0)=0
  EXEC PC LOC=  298 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   139         &ISHEX   SETC  (ISHEX('F1'))
  EXEC PC LOC=  299 OP= PUSHC()='F1'
  EXEC PC LOC=  300 OP= ISHEX('F1')=1
  EXEC PC LOC=  301 OP= STORV(&ISHEX)='1'
OPEN CODE   140                  MNOTE 'ISHEX(''F1'')=&ISHEX'
OPEN CODE   140   (1/140)          MNOTE 'ISHEX('F1')=1'
OPEN CODE   141                  AIF   ('&ISHEX' NE 1).ISERR
  EXEC PC LOC=  302 OP= PUSHV(&ISHEX)='1'
  EXEC PC LOC=  303 OP= COMPNE(1,1)=0
  EXEC PC LOC=  304 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   142         &ISHEX   SETC  (ISHEX('FG'))
  EXEC PC LOC=  305 OP= PUSHC()='FG'
  EXEC PC LOC=  306 OP= ISHEX('FG')=0
  EXEC PC LOC=  307 OP= STORV(&ISHEX)='0'
OPEN CODE   143                  MNOTE 'ISHEX(''FG'')=&ISHEX'
OPEN CODE   143   (1/143)          MNOTE 'ISHEX('FG')=0'
OPEN CODE   144                  AIF   ('&ISHEX' NE 0).ISERR
  EXEC PC LOC=  308 OP= PUSHV(&ISHEX)='0'
  EXEC PC LOC=  309 OP= COMPNE(0,0)=0
  EXEC PC LOC=  310 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   145         &ISSYM   SETC  (ISSYM('AZ09@#$_'))
  EXEC PC LOC=  311 OP= PUSHC()='AZ09@#$_'
  EXEC PC LOC=  312 OP= ISSYM('AZ09@#$_')=1
  EXEC PC LOC=  313 OP= STORV(&ISSYM)='1'
OPEN CODE   146                  MNOTE 'ISSYM(''AZ09@#$_'')=&ISSYM'
OPEN CODE   146   (1/146)          MNOTE 'ISSYM('AZ09@#$_')=1'
OPEN CODE   147                  AIF   ('&ISSYM' NE 1).ISERR
  EXEC PC LOC=  314 OP= PUSHV(&ISSYM)='1'
  EXEC PC LOC=  315 OP= COMPNE(1,1)=0
  EXEC PC LOC=  316 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   148         &ISSYM   SETC  (ISSYM('AZ09@#$_**'))
  EXEC PC LOC=  317 OP= PUSHC()='AZ09@#$_**'
  EXEC PC LOC=  318 OP= ISSYM('AZ09@#$_**')=0
  EXEC PC LOC=  319 OP= STORV(&ISSYM)='0'
OPEN CODE   149                  MNOTE 'ISSYM(''AZ09@#$_**'')=&ISSYM'
OPEN CODE   149   (1/149)          MNOTE 'ISSYM('AZ09@#$_**')=0'
OPEN CODE   150                  AIF   ('&ISSYM' NE 0).ISERR
  EXEC PC LOC=  320 OP= PUSHV(&ISSYM)='0'
  EXEC PC LOC=  321 OP= COMPNE(0,0)=0
  EXEC PC LOC=  322 OP= AIF(0)=.ISERR NO BRANCH
OPEN CODE   151                  MNOTE 'TESTING SIGNED, SYSATTRA, SYSATTRP'
OPEN CODE   151   (1/151)          MNOTE 'TESTING SIGNED, SYSATTRA, SYSATTRP'
OPEN CODE   152         &SIGNED  SETC  (SIGNED(-241))
  EXEC PC LOC=  323 OP= PUSHA()=-241
  EXEC PC LOC=  324 OP= SIGNED(0)='-241'
  EXEC PC LOC=  325 OP= STORV(&SIGNED)='-241'
OPEN CODE   153                  MNOTE 'SIGNED(-241)=&SIGNED'
OPEN CODE   153   (1/153)          MNOTE 'SIGNED(-241)=-241'
OPEN CODE   154                  AIF   ('&SIGNED' NE '-241').SIGNERR
  EXEC PC LOC=  326 OP= PUSHV(&SIGNED)='-241'
  EXEC PC LOC=  327 OP= COMPNE('-241','-241')=0
  EXEC PC LOC=  328 OP= AIF(0)=.SIGNERR NO BRANCH
OPEN CODE   155         &SYSATTRP SETC  (SYSATTRP('SYM'))
  EXEC PC LOC=  329 OP= PUSHC()='SYM'
SATTRP PGMA = SATTRP SYM
  EXEC PC LOC=  330 OP= SATTRP('SYM')='PGMA'
  EXEC PC LOC=  331 OP= STORV(&SYSATTRP)='PGMA'
OPEN CODE   156                  MNOTE 'SYSATTRP(SYM)=&SYSATTRP'
OPEN CODE   156   (1/156)          MNOTE 'SYSATTRP(SYM)=PGMA'
OPEN CODE   157                  AIF   ('&SYSATTRP' NE 'PGMA').SYERR
  EXEC PC LOC=  332 OP= PUSHV(&SYSATTRP)='PGMA'
  EXEC PC LOC=  333 OP= COMPNE('PGMA','PGMA')=0
  EXEC PC LOC=  334 OP= AIF(0)=.SYERR NO BRANCH
OPEN CODE   158         &SYSATTRA SETC  (SYSATTRA('SYM'))
  EXEC PC LOC=  335 OP= PUSHC()='SYM'
SATTRA GR32 = SATTRA SYM
  EXEC PC LOC=  336 OP= SATTRA('SYM')='GR32'
  EXEC PC LOC=  337 OP= STORV(&SYSATTRA)='GR32'
OPEN CODE   159                  MNOTE 'SYSATTRA(SYM)=&SYSATTRA'
OPEN CODE   159   (1/159)          MNOTE 'SYSATTRA(SYM)=GR32'
OPEN CODE   160                  AIF   ('&SYSATTRA' NE 'GR32').SYERR
  EXEC PC LOC=  338 OP= PUSHV(&SYSATTRA)='GR32'
  EXEC PC LOC=  339 OP= COMPNE('GR32','GR32')=0
  EXEC PC LOC=  340 OP= AIF(0)=.SYERR NO BRANCH
OPEN CODE   161                  MNOTE 'TESTING SLA, SLL, SRA, SRL'
OPEN CODE   161   (1/161)          MNOTE 'TESTING SLA, SLL, SRA, SRL'
OPEN CODE   162         &SLA     SETA  (1 SLA 2)
  EXEC PC LOC=  341 OP= PUSHA()=1
  EXEC PC LOC=  342 OP= PUSHA()=2
SLA 4 = 1 SLA 2
  EXEC PC LOC=  343 OP= SLA(1,2)=4
  EXEC PC LOC=  344 OP= STORV(&SLA)=4
OPEN CODE   163                  MNOTE '1 SLA 2 = &SLA'
OPEN CODE   163   (1/163)          MNOTE '1 SLA 2 = 4'
OPEN CODE   164                  AIF   (&SLA NE 4).SLAERR
  EXEC PC LOC=  345 OP= PUSHV(&SLA)=4
  EXEC PC LOC=  346 OP= COMPNE(4,4)=0
  EXEC PC LOC=  347 OP= AIF(0)=.SLAERR NO BRANCH
OPEN CODE   165         &SLA     SETA  (X'7FFFFFFF' SLA 1)
  EXEC PC LOC=  348 OP= PUSHA()=X'7FFFFFFF'
  EXEC PC LOC=  349 OP= PUSHA()=1
SLA 2147483646 = 2147483647 SLA 1
  EXEC PC LOC=  350 OP= SLA(2147483647,1)=2147483646
  EXEC PC LOC=  351 OP= STORV(&SLA)=2147483646
OPEN CODE   166         &SIGNED  SETC  (SIGNED &SLA)                   RPI-943
  EXEC PC LOC=  352 OP= PUSHV(&SLA)=2147483646
  EXEC PC LOC=  353 OP= SIGNED(2147483647)='2147483646'
  EXEC PC LOC=  354 OP= STORV(&SIGNED)='2147483646'
OPEN CODE   167                  MNOTE 'X''7FFFFFFF'' SLA 1 = &SIGNED'
OPEN CODE   167   (1/167)          MNOTE 'X'7FFFFFFF' SLA 1 = 2147483646'
OPEN CODE   168                  AIF   (&SLA NE X'7FFFFFFE').SLAERR
  EXEC PC LOC=  355 OP= PUSHV(&SLA)=2147483646
  EXEC PC LOC=  356 OP= COMPNE(2147483646,2147483646)=0
  EXEC PC LOC=  357 OP= AIF(0)=.SLAERR NO BRANCH
OPEN CODE   169         &SLL     SETA  (1 SLL 2)
  EXEC PC LOC=  358 OP= PUSHA()=1
  EXEC PC LOC=  359 OP= PUSHA()=2
SLL 4 = 1 SLL 2
  EXEC PC LOC=  360 OP= SLL(1,2)=4
  EXEC PC LOC=  361 OP= STORV(&SLL)=4
OPEN CODE   170                  MNOTE '1 SLL 2 = &SLL'
OPEN CODE   170   (1/170)          MNOTE '1 SLL 2 = 4'
OPEN CODE   171                  AIF   (&SLL NE 4).SLLERR
  EXEC PC LOC=  362 OP= PUSHV(&SLL)=4
  EXEC PC LOC=  363 OP= COMPNE(4,4)=0
  EXEC PC LOC=  364 OP= AIF(0)=.SLLERR NO BRANCH
OPEN CODE   172         &SLL     SETA  (X'7FFFFFFF' SLL 1)
  EXEC PC LOC=  365 OP= PUSHA()=X'7FFFFFFF'
  EXEC PC LOC=  366 OP= PUSHA()=1
SLL -2 = 2147483647 SLL 1
  EXEC PC LOC=  367 OP= SLL(2147483647,1)=-2
  EXEC PC LOC=  368 OP= STORV(&SLL)=-2
OPEN CODE   173         &SIGNED  SETC  (SIGNED &SLL)                   RPI-943
  EXEC PC LOC=  369 OP= PUSHV(&SLL)=-2
  EXEC PC LOC=  370 OP= SIGNED(2147483647)='-2'
  EXEC PC LOC=  371 OP= STORV(&SIGNED)='-2'
OPEN CODE   174                  MNOTE 'X''7FFFFFFF'' SLL 1 = &SIGNED'
OPEN CODE   174   (1/174)          MNOTE 'X'7FFFFFFF' SLL 1 = -2'
OPEN CODE   175                  AIF   (&SLL NE X'FFFFFFFE').SLLERR
  EXEC PC LOC=  372 OP= PUSHV(&SLL)=-2
  EXEC PC LOC=  373 OP= COMPNE(-2,-2)=0
  EXEC PC LOC=  374 OP= AIF(0)=.SLLERR NO BRANCH
OPEN CODE   176         &SRA     SETA  (4 SRA 2)
  EXEC PC LOC=  375 OP= PUSHA()=4
  EXEC PC LOC=  376 OP= PUSHA()=2
SRA 1 = 4 SRA 2
  EXEC PC LOC=  377 OP= SRA(4,2)=1
  EXEC PC LOC=  378 OP= STORV(&SRA)=1
OPEN CODE   177                  MNOTE '4 SLA 2 = &SRA'
OPEN CODE   177   (1/177)          MNOTE '4 SLA 2 = 1'
OPEN CODE   178                  AIF   (&SRA NE 1).SRAERR
  EXEC PC LOC=  379 OP= PUSHV(&SRA)=1
  EXEC PC LOC=  380 OP= COMPNE(1,1)=0
  EXEC PC LOC=  381 OP= AIF(0)=.SRAERR NO BRANCH
OPEN CODE   179         &SRA     SETA  (X'FFFFFFFE' SRA 1)
  EXEC PC LOC=  382 OP= PUSHA()=X'FFFFFFFE'
  EXEC PC LOC=  383 OP= PUSHA()=1
SRA -1 = -2 SRA 1
  EXEC PC LOC=  384 OP= SRA(-2,1)=-1
  EXEC PC LOC=  385 OP= STORV(&SRA)=-1
OPEN CODE   180         &SIGNED  SETC  (SIGNED &SRA)                   RPI-943
  EXEC PC LOC=  386 OP= PUSHV(&SRA)=-1
  EXEC PC LOC=  387 OP= SIGNED(-2)='-1'
  EXEC PC LOC=  388 OP= STORV(&SIGNED)='-1'
OPEN CODE   181                  MNOTE 'X''FFFFFFFF'' SRA 1 = &SIGNED'
OPEN CODE   181   (1/181)          MNOTE 'X'FFFFFFFF' SRA 1 = -1'
OPEN CODE   182                  AIF   (&SRA NE X'FFFFFFFF').SRAERR
  EXEC PC LOC=  389 OP= PUSHV(&SRA)=-1
  EXEC PC LOC=  390 OP= COMPNE(-1,-1)=0
  EXEC PC LOC=  391 OP= AIF(0)=.SRAERR NO BRANCH
OPEN CODE   183         &SRL     SETA  (4 SRL 2)
  EXEC PC LOC=  392 OP= PUSHA()=4
  EXEC PC LOC=  393 OP= PUSHA()=2
SRL 1 = 4 SRL 2
  EXEC PC LOC=  394 OP= SRL(4,2)=1
  EXEC PC LOC=  395 OP= STORV(&SRL)=1
OPEN CODE   184                  MNOTE '4 SRL 2 = &SRL'
OPEN CODE   184   (1/184)          MNOTE '4 SRL 2 = 1'
OPEN CODE   185                  AIF   (&SRL NE 1).SRLERR
  EXEC PC LOC=  396 OP= PUSHV(&SRL)=1
  EXEC PC LOC=  397 OP= COMPNE(1,1)=0
  EXEC PC LOC=  398 OP= AIF(0)=.SRLERR NO BRANCH
OPEN CODE   186         &SRL     SETA  (X'FFFFFFFE' SRL 1)
  EXEC PC LOC=  399 OP= PUSHA()=X'FFFFFFFE'
  EXEC PC LOC=  400 OP= PUSHA()=1
SRL 2147483647 = -2 SRL 1
  EXEC PC LOC=  401 OP= SRL(-2,1)=2147483647
  EXEC PC LOC=  402 OP= STORV(&SRL)=2147483647
OPEN CODE   187         &SIGNED  SETC  (SIGNED &SRL)                   RPI-943
  EXEC PC LOC=  403 OP= PUSHV(&SRL)=2147483647
  EXEC PC LOC=  404 OP= SIGNED(-2)='2147483647'
  EXEC PC LOC=  405 OP= STORV(&SIGNED)='2147483647'
OPEN CODE   188                  MNOTE 'X''7FFFFFFF'' SRL 1 = &SIGNED'
OPEN CODE   188   (1/188)          MNOTE 'X'7FFFFFFF' SRL 1 = 2147483647'
OPEN CODE   189                  AIF   (&SRL NE X'7FFFFFFF').SRLERR
  EXEC PC LOC=  406 OP= PUSHV(&SRL)=2147483647
  EXEC PC LOC=  407 OP= COMPNE(2147483647,2147483647)=0
  EXEC PC LOC=  408 OP= AIF(0)=.SRLERR NO BRANCH
OPEN CODE   190                  MNOTE 'TESTING OPERATOR TYPES A,E,M,O,S,U'
OPEN CODE   190   (1/190)          MNOTE 'TESTING OPERATOR TYPES A,E,M,O,S,U'
OPEN CODE   191                  AIF   (O'PUSH      NE 'A').OTERR  ASSEMBLER  CODE
  EXEC PC LOC=  409 OP= PUSHC()='PUSH'
O' A = O'PUSH
  EXEC PC LOC=  410 OP= O'('PUSH')='A'
  EXEC PC LOC=  411 OP= COMPNE('A','A')=0
  EXEC PC LOC=  412 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   192                  AIF   (O'BER       NE 'E').OTERR  EXTENDED MNEMONIC CODE
  EXEC PC LOC=  413 OP= PUSHC()='BER'
O' E = O'BER
  EXEC PC LOC=  414 OP= O'('BER')='E'
  EXEC PC LOC=  415 OP= COMPNE('E','E')=0
  EXEC PC LOC=  416 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   193                  AIF   (O'BE        NE 'E').OTERR  EXTENDED MNEMONIC CODE
  EXEC PC LOC=  417 OP= PUSHC()='BE'
O' E = O'BE
  EXEC PC LOC=  418 OP= O'('BE')='E'
  EXEC PC LOC=  419 OP= COMPNE('E','E')=0
  EXEC PC LOC=  420 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   194                  AIF   (O'BER       NE 'E').OTERR  EXTENDED MNEMONIC CODE
  EXEC PC LOC=  421 OP= PUSHC()='BER'
O' E = O'BER
  EXEC PC LOC=  422 OP= O'('BER')='E'
  EXEC PC LOC=  423 OP= COMPNE('E','E')=0
  EXEC PC LOC=  424 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   195                  AIF   (O'JE        NE 'E').OTERR  EXTENDED MNEMONIC CODE
  EXEC PC LOC=  425 OP= PUSHC()='JE'
O' E = O'JE
  EXEC PC LOC=  426 OP= O'('JE')='E'
  EXEC PC LOC=  427 OP= COMPNE('E','E')=0
  EXEC PC LOC=  428 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   196                  AIF   (O'SUBENTRY  NE 'M').OTERR  LOADED MACRO
  EXEC PC LOC=  429 OP= PUSHC()='SUBENTRY'
O' M = O'SUBENTRY
  EXEC PC LOC=  430 OP= O'('SUBENTRY')='M'
  EXEC PC LOC=  431 OP= COMPNE('M','M')=0
  EXEC PC LOC=  432 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   197                  AIF   (O'SRNM      NE 'O').OTERR  MACHIVE CODE
  EXEC PC LOC=  433 OP= PUSHC()='SRNM'
O' O = O'SRNM
  EXEC PC LOC=  434 OP= O'('SRNM')='O'
  EXEC PC LOC=  435 OP= COMPNE('O','O')=0
  EXEC PC LOC=  436 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   198                  AIF   (O'BCR       NE 'O').OTERR  MACHIVE CODE
  EXEC PC LOC=  437 OP= PUSHC()='BCR'
O' O = O'BCR
  EXEC PC LOC=  438 OP= O'('BCR')='O'
  EXEC PC LOC=  439 OP= COMPNE('O','O')=0
  EXEC PC LOC=  440 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   199                  AIF   (O'BC        NE 'O').OTERR  MACHIVE CODE
  EXEC PC LOC=  441 OP= PUSHC()='BC'
O' O = O'BC
  EXEC PC LOC=  442 OP= O'('BC')='O'
  EXEC PC LOC=  443 OP= COMPNE('O','O')=0
  EXEC PC LOC=  444 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   200                  AIF   (O'BRC       NE 'O').OTERR  MACHIVE CODE
  EXEC PC LOC=  445 OP= PUSHC()='BRC'
O' O = O'BRC
  EXEC PC LOC=  446 OP= O'('BRC')='O'
  EXEC PC LOC=  447 OP= COMPNE('O','O')=0
  EXEC PC LOC=  448 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   201                  AIF   (O'SAVE      NE 'S').OTERR  LIBRARY MACRO FOUND
  EXEC PC LOC=  449 OP= PUSHC()='SAVE'
O' S = O'SAVE
  EXEC PC LOC=  450 OP= O'('SAVE')='S'
  EXEC PC LOC=  451 OP= COMPNE('S','S')=0
  EXEC PC LOC=  452 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   202                  AIF   (O'XXXXX     NE 'U').OTERR  UNDEFINED RPI 406 WAS SRNMT
  EXEC PC LOC=  453 OP= PUSHC()='XXXXX'
O' U = O'XXXXX
  EXEC PC LOC=  454 OP= O'('XXXXX')='U'
  EXEC PC LOC=  455 OP= COMPNE('U','U')=0
  EXEC PC LOC=  456 OP= AIF(0)=.OTERR NO BRANCH
OPEN CODE   203                  MNOTE 'TESTING STRING DUPLICATION IN EXPRESSION'
OPEN CODE   203   (1/203)          MNOTE 'TESTING STRING DUPLICATION IN EXPRESSION'
OPEN CODE   204                  AIF   ('A'.(2)'B' NE 'ABB').DUPERR
  EXEC PC LOC=  457 OP= PUSHC()='A'
  EXEC PC LOC=  458 OP= PUSHA()=2
  EXEC PC LOC=  459 OP= PUSHC()='B'
DUP BB = (2)'B'
  EXEC PC LOC=  460 OP= DUP(2,'B')='BB'
  EXEC PC LOC=  461 OP= CONCAT('A','BB')='ABB'
  EXEC PC LOC=  462 OP= COMPNE('ABB','ABB')=0
  EXEC PC LOC=  463 OP= AIF(0)=.DUPERR NO BRANCH
OPEN CODE   205         &A       SETC  'A'
  EXEC PC LOC=  464 OP= PUSHC()='A'
  EXEC PC LOC=  465 OP= STORV(&A)='A'
OPEN CODE   206                  AIF   ('&A'.(2)'B' NE 'ABB').DUPERR
  EXEC PC LOC=  466 OP= PUSHV(&A)='A'
  EXEC PC LOC=  467 OP= PUSHA()=2
  EXEC PC LOC=  468 OP= PUSHC()='B'
DUP BB = (2)'B'
  EXEC PC LOC=  469 OP= DUP(2,'B')='BB'
  EXEC PC LOC=  470 OP= CONCAT('A','BB')='ABB'
  EXEC PC LOC=  471 OP= COMPNE('ABB','ABB')=0
  EXEC PC LOC=  472 OP= AIF(0)=.DUPERR NO BRANCH
OPEN CODE   207                  AIF   ('A'.(2)'B' NE 'ABB').DUPERR
  EXEC PC LOC=  473 OP= PUSHC()='A'
  EXEC PC LOC=  474 OP= PUSHA()=2
  EXEC PC LOC=  475 OP= PUSHC()='B'
DUP BB = (2)'B'
  EXEC PC LOC=  476 OP= DUP(2,'B')='BB'
  EXEC PC LOC=  477 OP= CONCAT('A','BB')='ABB'
  EXEC PC LOC=  478 OP= COMPNE('ABB','ABB')=0
  EXEC PC LOC=  479 OP= AIF(0)=.DUPERR NO BRANCH
OPEN CODE   208                  MNOTE 'TEST FIND'
OPEN CODE   208   (1/208)          MNOTE 'TEST FIND'
OPEN CODE   209         &IB      SETC  FIND('ABC','B')
  EXEC PC LOC=  480 OP= PUSHC()='ABC'
  EXEC PC LOC=  481 OP= PUSHC()='B'
FIND 2 = B IN ABC
  EXEC PC LOC=  482 OP= FIND('ABC','B')=2
  EXEC PC LOC=  483 OP= STORV(&IB)='2'
OPEN CODE   210                  AIF   ('&IB' NE 2).FINDERR
  EXEC PC LOC=  484 OP= PUSHV(&IB)='2'
  EXEC PC LOC=  485 OP= COMPNE(2,2)=0
  EXEC PC LOC=  486 OP= AIF(0)=.FINDERR NO BRANCH
OPEN CODE   211         &IB      SETC  ('ABC' FIND 'XB')
  EXEC PC LOC=  487 OP= PUSHC()='ABC'
  EXEC PC LOC=  488 OP= PUSHC()='XB'
FIND 2 = XB IN ABC
  EXEC PC LOC=  489 OP= FIND('ABC','XB')=2
  EXEC PC LOC=  490 OP= STORV(&IB)='2'
OPEN CODE   212                  AIF   ('&IB' NE 2).FINDERR
  EXEC PC LOC=  491 OP= PUSHV(&IB)='2'
  EXEC PC LOC=  492 OP= COMPNE(2,2)=0
  EXEC PC LOC=  493 OP= AIF(0)=.FINDERR NO BRANCH
OPEN CODE   213         &IB      SETC  FIND('ABC' 'CB')
  EXEC PC LOC=  494 OP= PUSHC()='ABC'
  EXEC PC LOC=  495 OP= PUSHC()='CB'
FIND 2 = CB IN ABC
  EXEC PC LOC=  496 OP= FIND('ABC','CB')=2
  EXEC PC LOC=  497 OP= STORV(&IB)='2'
OPEN CODE   214                  AIF   ('&IB' NE 2).FINDERR
  EXEC PC LOC=  498 OP= PUSHV(&IB)='2'
  EXEC PC LOC=  499 OP= COMPNE(2,2)=0
  EXEC PC LOC=  500 OP= AIF(0)=.FINDERR NO BRANCH
OPEN CODE   215                  MNOTE 'TEST INDEX'
OPEN CODE   215   (1/215)          MNOTE 'TEST INDEX'
OPEN CODE   216         &IB      SETC  INDEX('ABXBC','BC')
  EXEC PC LOC=  501 OP= PUSHC()='ABXBC'
  EXEC PC LOC=  502 OP= PUSHC()='BC'
INDEX 4 = BC IN ABXBC
  EXEC PC LOC=  503 OP= INDEX('ABXBC','BC')=4
  EXEC PC LOC=  504 OP= STORV(&IB)='4'
OPEN CODE   217                  AIF   ('&IB' NE 4).INDEXERR
  EXEC PC LOC=  505 OP= PUSHV(&IB)='4'
  EXEC PC LOC=  506 OP= COMPNE(4,4)=0
  EXEC PC LOC=  507 OP= AIF(0)=.INDEXERR NO BRANCH
OPEN CODE   218         &IB      SETC  ('ABXBC' INDEX 'BC')
  EXEC PC LOC=  508 OP= PUSHC()='ABXBC'
  EXEC PC LOC=  509 OP= PUSHC()='BC'
INDEX 4 = BC IN ABXBC
  EXEC PC LOC=  510 OP= INDEX('ABXBC','BC')=4
  EXEC PC LOC=  511 OP= STORV(&IB)='4'
OPEN CODE   219                  AIF   ('&IB' NE 4).INDEXERR
  EXEC PC LOC=  512 OP= PUSHV(&IB)='4'
  EXEC PC LOC=  513 OP= COMPNE(4,4)=0
  EXEC PC LOC=  514 OP= AIF(0)=.INDEXERR NO BRANCH
OPEN CODE   220         &IB      SETC  INDEX('ABXBC' 'BC')
  EXEC PC LOC=  515 OP= PUSHC()='ABXBC'
  EXEC PC LOC=  516 OP= PUSHC()='BC'
INDEX 4 = BC IN ABXBC
  EXEC PC LOC=  517 OP= INDEX('ABXBC','BC')=4
  EXEC PC LOC=  518 OP= STORV(&IB)='4'
OPEN CODE   221                  AIF   ('&IB' NE 4).INDEXERR
  EXEC PC LOC=  519 OP= PUSHV(&IB)='4'
  EXEC PC LOC=  520 OP= COMPNE(4,4)=0
  EXEC PC LOC=  521 OP= AIF(0)=.INDEXERR NO BRANCH
OPEN CODE   222                  AGO   .LOOP
 
OPEN CODE    37         &PASS    SETA  &PASS+1
  EXEC PC LOC=   84 OP= INC(&PASS)=3
OPEN CODE    38                  AIF   (&PASS GE 3).ENDLOOP
  EXEC PC LOC=   87 OP= PUSHV(&PASS)=3
  EXEC PC LOC=   88 OP= COMPGE(3,3)=1
  EXEC PC LOC=   89 OP= AIF(1)=.ENDLOOP BRANCH
 
OPEN CODE   224                  MNOTE 'TESTOPR1 ENDED OK'
OPEN CODE   224   (1/224)          MNOTE 'TESTOPR1 ENDED OK'
OPEN CODE   225                  AGO   .EXIT
 
OPEN CODE   268   (1/268)          END 
MZ390I total mnote warnings  = 0
MZ390I total mnote errors    = 0
MZ390I max   mnote level     = 0
MZ390I total mz390 errors    = 0
MZ390I total az390 errors    = 0
TESTOPR1  MZ390 ENDED RC= 0 IO=2037
