TESTPC1   MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I Copyright 2013 Cat Herder Software, LLC
AZ390I Copyright 2018 Joachim Bartz, Germany
AZ390I z390 is licensed under GNU General Public License
AZ390I program = rt\test\TESTPC1
AZ390I options = sysmac(C:\Users\Achim\GitHub\z390\mac+.) 
  syscpy(C:\Users\Achim\GitHub\z390\mac+.) @rt\Options.opt=(bal notiming stats) 
  tracep systerm(rt\test\RTTEST)
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=000000D8 TYPE=CST NAME=TESTPC1
Assembler Listing
000000                                        (1/1)1 *********************************************************************
000000                                        (1/2)2 * Copyright 2005 Automated Software Tools Corporation               *
000000                                        (1/3)3 * Copyright 2013 Cat Herder Software, LLC                           *
000000                                        (1/4)4 * Copyright 2018 Joachim Bartz, Germany                             *
000000                                        (1/5)5 *                                                                   *
000000                                        (1/6)6 * This source code is part of z390 assembler/emulator package.      *
000000                                        (1/7)7 *                                                                   *
000000                                        (1/8)8 * The z390 package is distributed under GNU general public license  *
000000                                        (1/9)9 *                                                                   *
000000                                      (1/10)10 * Author - Don Higgins                                              *
000000                                      (1/11)11 *********************************************************************
000000                                      (1/12)12 * 2006-10-06  DSH          Initial version                          *
000000                                      (1/13)13 * 2006-09-29  DSH RPI-467  Test pseudo code for SET and AIF         *
000000                                      (1/14)14 * 2006-12-22  DSH RPI-521  Test AIF undefined label ok if not taken *
000000                                      (1/15)15 * 2008-04-20  DSH RPI-833  SETC quotes for HLASM compatibility      *
000000                                      (1/16)16 * 2011-04-07  DSH RPI-1139 Move GBLA out of loop                    *
000000                                      (1/17)17 *********************************************************************
000000                                      (1/19)18 TESTPC1  SUBENTRY 
000000                                      (2/78)19+TESTPC1  CSECT 
000000 90ECD00C                            (2/168)20+         STM   14,12,12(13)
000004 45FF0068                            (2/169)21+         BAL   15,104(15)
000008 0000000000000000                    (2/170)22+         DC    18F'0'
000050 E3C5E2E3D7C3F140                    (2/171)23+         DC    CL8'TESTPC1'
000058 F0F161F0F261F0F5                    (2/172)24+         DC    CL8'01/02/05'
000060 F2F24BF3F3404040                    (2/173)25+         DC    CL8'22.33'
000068 50FD0008                            (2/174)26+         ST    15,8(13)
00006C 50DF0004                            (2/175)27+         ST    13,4(15)
000070 18DF                                (2/176)28+         LR    13,15
000072                                     (2/189)29+         USING TESTPC1+8,13
LISTUSE TESTPC1  ESD=0001 LOC=00000008 LEN=01000 REG=D OFF=00000 LAB=
000072                                      (1/20)31          WTO   'TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF'
000072 A7150019                0000A4       (3/49)33+         BRAS  1,*+(WTO#0002_EOT-*+1)/2*2
000076 002E0000E3C5E2E3                     (3/50)34+         DC    AL2(WTO#0002_EOT-*,0),C'TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF'
0000A4                  000000A4            (3/51)36+WTO#0002_EOT     EQU *
0000A4 0A23                                 (3/52)37+         SVC   35
0000A6                                      (1/26)39          MNOTE 'STARTING PSEUDO CODE TEST PASS 1'
0000A6                                      (1/27)40 * TEST SETB TRUE/FALSE SET AND AIF
0000A6                                      (1/34)41          MNOTE 'AIF TRUE OK'
0000A6                                      (1/36)42          MNOTE 'AIF FALSE OK'
0000A6                                      (1/37)43 * TEST COMPLEX AIF
0000A6                                      (1/38)44          MACRO
0000A6                                      (1/39)45          TEST  &MF=I,&SF=I
0000A6                                      (1/40)46          AIF   ('&MF' EQ 'L' OR('&SF' EQ 'L' AND '&MF(1)' EQ 'E')).ERR
0000A6                                      (1/41)47          MNOTE 'AIF NO BRANCH OK - MF=&MF SF=&SF'
0000A6                                      (1/42)48          AGO   .SKPERR
0000A6                                      (1/43)49 .ERR     MNOTE 12,'AIF BRANCDED TO ERR'
0000A6                                      (1/44)50          SUBEXIT RC=12
0000A6                                      (1/45)51 .SKPERR   ANOP
0000A6                                      (1/46)52          MEND
0000A6                                      (1/47)53          TEST 
0000A6                                      (1/41)54+         MNOTE 'AIF NO BRANCH OK - MF=I SF=I'
0000A6                                      (1/48)56 * TEST AIFB AND AGOB
0000A6                                      (1/56)57 * TEST ALTERNATE AIF FORMAT COMPOUND TESTS
0000A6                                      (1/61)58          MNOTE 'TOK2'
0000A6                                      (1/62)59 * TEST COMPUTED AGO
0000A6                                      (1/69)60          MNOTE '.T12'
0000A6                                      (1/73)61 * TEST CREATED VARIABLES
0000A6                                      (1/85)62 * TEST OPT CONCAT
0000A6                                      (1/94)63 * TEST OPT ADD
0000A6                                      (1/96)64 * TEST PSEUDO CODE AIF FALSE WITH BAD LABEL OK
0000A6                                      (1/98)65 * RETURN TO START OF LOOP
0000A6                                      (1/26)66          MNOTE 'STARTING PSEUDO CODE TEST PASS 2'
0000A6                                      (1/27)67 * TEST SETB TRUE/FALSE SET AND AIF
0000A6                                      (1/34)68          MNOTE 'AIF TRUE OK'
0000A6                                      (1/36)69          MNOTE 'AIF FALSE OK'
0000A6                                      (1/37)70 * TEST COMPLEX AIF
0000A6                                      (1/38)71          MACRO
0000A6                                      (1/39)72          TEST  &MF=I,&SF=I
0000A6                                      (1/40)73          AIF   ('&MF' EQ 'L' OR('&SF' EQ 'L' AND '&MF(1)' EQ 'E')).ERR
0000A6                                      (1/41)74          MNOTE 'AIF NO BRANCH OK - MF=&MF SF=&SF'
0000A6                                      (1/42)75          AGO   .SKPERR
0000A6                                      (1/43)76 .ERR     MNOTE 12,'AIF BRANCDED TO ERR'
0000A6                                      (1/44)77          SUBEXIT RC=12
0000A6                                      (1/45)78 .SKPERR   ANOP
0000A6                                      (1/46)79          MEND
0000A6                                      (1/47)80          TEST 
0000A6                                      (1/41)81+         MNOTE 'AIF NO BRANCH OK - MF=I SF=I'
0000A6                                      (1/48)83 * TEST AIFB AND AGOB
0000A6                                      (1/56)84 * TEST ALTERNATE AIF FORMAT COMPOUND TESTS
0000A6                                      (1/61)85          MNOTE 'TOK2'
0000A6                                      (1/62)86 * TEST COMPUTED AGO
0000A6                                      (1/69)87          MNOTE '.T12'
0000A6                                      (1/73)88 * TEST CREATED VARIABLES
0000A6                                      (1/85)89 * TEST OPT CONCAT
0000A6                                      (1/94)90 * TEST OPT ADD
0000A6                                      (1/96)91 * TEST PSEUDO CODE AIF FALSE WITH BAD LABEL OK
0000A6                                      (1/98)92 * RETURN TO START OF LOOP
0000A6                                     (1/105)93          WTO   'TESTPC1 - ENDED OK'
0000A6 A715000D                0000C0       (3/49)94+         BRAS  1,*+(WTO#0005_EOT-*+1)/2*2
0000AA 00160000E3C5E2E3                     (3/50)95+         DC    AL2(WTO#0005_EOT-*,0),C'TESTPC1 - ENDED OK'
0000C0                  000000C0            (3/51)96+WTO#0005_EOT     EQU *
0000C0 0A23                                 (3/52)97+         SVC   35
0000C2                                     (1/106)99          SUBEXIT 
0000C2 41F00000                            (4/33)100+         LA    15,0
0000C6 58D0D004                            (4/50)101+         L     13,4(,13)
0000CA 58E0D00C                            (4/51)102+         L     14,12(,13)
0000CE 982CD01C                            (4/52)103+         LM    2,12,28(13)
0000D2 07FE                                (4/53)104+         BR    14
0000D4                                    (1/107)106          END 

Symbol Table Listing

 SYM=TESTPC1  LOC=00000000 LEN=000000D8 ESD=0001 TYPE=CST  XREF=19 29 
 SYM=WTO#0002_EOT LOC=000000A4 LEN=00000001 ESD=0001 TYPE=REL  XREF=36 33 34 
 SYM=WTO#0005_EOT LOC=000000C0 LEN=00000001 ESD=0001 TYPE=REL  XREF=96 94 95 

Literal Table Listing

 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTPC1   MZ390 ENDED RC= 0 IO=722
