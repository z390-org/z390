TESTPC1   MZ390 START
MZ390I Copyright 2011 Automated Software Tools Corporation
MZ390I Copyright 2013 Cat Herder Software, LLC
MZ390I Copyright 2018 Joachim Bartz, Germany
MZ390I z390 is licensed under GNU General Public License
MZ390I program = rt\test\TESTPC1.MLC
MZ390I options = sysmac(C:\Users\Achim\GitHub\z390\mac+.) 
  syscpy(C:\Users\Achim\GitHub\z390\mac+.) @rt\Options.opt=(bal notiming stats) 
  tracep systerm(rt\test\RTTEST)
LOADING FILE rt\test\TESTPC1.MLC
OPEN CODE     1     (1/1) *********************************************************************
OPEN CODE     2     (1/2) * Copyright 2005 Automated Software Tools Corporation               *
OPEN CODE     3     (1/3) * Copyright 2013 Cat Herder Software, LLC                           *
OPEN CODE     4     (1/4) * Copyright 2018 Joachim Bartz, Germany                             *
OPEN CODE     5     (1/5) *                                                                   *
OPEN CODE     6     (1/6) * This source code is part of z390 assembler/emulator package.      *
OPEN CODE     7     (1/7) *                                                                   *
OPEN CODE     8     (1/8) * The z390 package is distributed under GNU general public license  *
OPEN CODE     9     (1/9) *                                                                   *
OPEN CODE    10    (1/10) * Author - Don Higgins                                              *
OPEN CODE    11    (1/11) *********************************************************************
OPEN CODE    12    (1/12) * 2006-10-06  DSH          Initial version                          *
OPEN CODE    13    (1/13) * 2006-09-29  DSH RPI-467  Test pseudo code for SET and AIF         *
OPEN CODE    14    (1/14) * 2006-12-22  DSH RPI-521  Test AIF undefined label ok if not taken *
OPEN CODE    15    (1/15) * 2008-04-20  DSH RPI-833  SETC quotes for HLASM compatibility      *
OPEN CODE    16    (1/16) * 2011-04-07  DSH RPI-1139 Move GBLA out of loop                    *
OPEN CODE    17    (1/17) *********************************************************************
OPEN CODE    19    (1/19) *MCALL #=     1 LV= 1 TESTPC1  SUBENTRY 
LOADING FILE C:\Users\Achim\GitHub\z390\mac\SUBENTRY.MAC
 
SUBENTRY     66                  GBLC  &PSTKREG,&PBASREG,&PBASLAB
SUBENTRY     67                  GBLB  &PSTKSW,&PBASESW,&PSAVESW,&PCHKSW
SUBENTRY     68                  GBLA  &STKSIZE,&STKENT
SUBENTRY     69                  GBLB  &STKOPT,&RENTOPT
SUBENTRY     70                  LCLA  &NBASE,&S,&OFFSET
SUBENTRY     71         &PSTKSW  SETB  0
  GEN  PC LOC=    1 OP= PUSHA()=0
  GEN  PC LOC=    2 OP= STORV(&PSTKSW)=0
SUBENTRY     72         &PBASESW SETB  0
  GEN  PC LOC=    3 OP= PUSHA()=0
  GEN  PC LOC=    4 OP= STORV(&PBASESW)=0
SUBENTRY     73         &PSAVESW SETB  0
  GEN  PC LOC=    5 OP= PUSHA()=0
  GEN  PC LOC=    6 OP= STORV(&PSAVESW)=0
SUBENTRY     74         &PCHKSW  SETB  0
  GEN  PC LOC=    7 OP= PUSHA()=0
  GEN  PC LOC=    8 OP= STORV(&PCHKSW)=0
SUBENTRY     75         &STKOPT  SETB  0
  GEN  PC LOC=    9 OP= PUSHA()=0
  GEN  PC LOC=   10 OP= STORV(&STKOPT)=0
SUBENTRY     76         &RENTOPT SETB  0
  GEN  PC LOC=   11 OP= PUSHA()=0
  GEN  PC LOC=   12 OP= STORV(&RENTOPT)=0
SUBENTRY     77                  AIF   ('&CSECT'(1,1) EQ 'N').NOCSECT
  GEN  PC LOC=   13 OP= PUSHV(&CSECT)='YES'
  GEN  PC LOC=   14 OP= PUSHA()=1
  GEN  PC LOC=   15 OP= PUSHA()=1
  GEN  PC LOC=   16 OP= SUBSTR('YES',1,1)='Y'
  GEN  PC LOC=   17 OP= COMPEQ('Y','N')=0
  GEN  PC LOC=   18 OP= AIF(0)=.NOCSECT NO BRANCH
SUBENTRY     78    (2/78)+TESTPC1  CSECT 
SUBENTRY     79                  AGO   .STM
 
SUBENTRY     83                  AIF   ('&RENT'(1,1) EQ 'N').NORENT
  GEN  PC LOC=   19 OP= PUSHV(&RENT)='NO'
  GEN  PC LOC=   20 OP= PUSHA()=1
  GEN  PC LOC=   21 OP= PUSHA()=1
  GEN  PC LOC=   22 OP= SUBSTR('NO',1,1)='N'
  GEN  PC LOC=   23 OP= COMPEQ('N','N')=1
  GEN  PC LOC=   24 OP= AIF(1)=.NORENT BRANCH
 
SUBENTRY    168   (2/168)+         STM   14,12,12(13)
SUBENTRY    169   (2/169)+         BAL   15,104(15)
SUBENTRY    170   (2/170)+         DC    18F'0'
SUBENTRY    171                  DC    CL8'&NAME'
SUBENTRY    171   (2/171)+         DC    CL8'TESTPC1'
SUBENTRY    172                  DC    CL8'&SYSDATE'
SUBENTRY    172   (2/172)+         DC    CL8'01/02/05'
SUBENTRY    173                  DC    CL8'&SYSTIME'
SUBENTRY    173   (2/173)+         DC    CL8'22.33'
SUBENTRY    174   (2/174)+         ST    15,8(13)
SUBENTRY    175   (2/175)+         ST    13,4(15)
SUBENTRY    176   (2/176)+         LR    13,15
SUBENTRY    177                  AIF   (T'&BASES(1) NE 'N').CHKR13
  GEN  PC LOC=   25 OP= PUSHV(&BASES)='(13)'
  GEN  PC LOC=   26 OP= PUSHA()=1
  GEN  PC LOC=   27 OP= SUBLST('(13)',1)='13'
T' N = T'13
  GEN  PC LOC=   28 OP= T'('13')='N'
  GEN  PC LOC=   29 OP= COMPNE('N','N')=0
  GEN  PC LOC=   30 OP= AIF(0)=.CHKR13 NO BRANCH
SUBENTRY    178                  AIF   (&BASES(1) EQ 13).GENB13
  GEN  PC LOC=   31 OP= PUSHV(&BASES)='(13)'
  GEN  PC LOC=   32 OP= PUSHA()=1
  GEN  PC LOC=   33 OP= SUBLST('(13)',1)='13'
  GEN  PC LOC=   34 OP= COMPEQ(13,13)=1
  GEN  PC LOC=   35 OP= AIF(1)=.GENB13 BRANCH
 
SUBENTRY    189                  USING &NAME+8,13
SUBENTRY    189   (2/189)+         USING TESTPC1+8,13
SUBENTRY    191         &NBASE   SETA  N'&BASES
  GEN  PC LOC=   36 OP= PUSHV(&BASES)='(13)'
  GEN  PC LOC=   37 OP= N'('(13)')=1
  GEN  PC LOC=   38 OP= STORV(&NBASE)=1
SUBENTRY    192         &S       SETA  1
  GEN  PC LOC=   39 OP= PUSHA()=1
  GEN  PC LOC=   40 OP= STORV(&S)=1
SUBENTRY    194         &S       SETA  &S+1
  GEN  PC LOC=   41 OP= PUSHV(&S)=1
ADD 2 = 1 + 1
  GEN  PC LOC=   42 OP= ADD(1,1)=2
  GEN  PC LOC=   43 OP= STORV(&S)=2
SUBENTRY    195                  AIF   (&S GT &NBASE).EXIT
  GEN  PC LOC=   44 OP= PUSHV(&S)=2
  GEN  PC LOC=   45 OP= PUSHV(&NBASE)=1
  GEN  PC LOC=   46 OP= COMPGT(2,1)=1
  GEN  PC LOC=   47 OP= AIF(1)=.EXIT BRANCH
 
SUBENTRY    201                  MEXIT
 
SUBENTRY    201   (2/201)+*MEXIT #=     1 LV= 1 SUBENTRY
OPEN CODE    20    (1/20) *MCALL #=     2 LV= 1          WTO   'TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF'
LOADING FILE C:\Users\Achim\GitHub\z390\mac\WTO.MAC
 
WTO          34                  AIF   ('&N' EQ '').SKIPDS
  GEN  PC LOC=   48 OP= PUSHV(&N)=''
  GEN  PC LOC=   49 OP= COMPEQ('','')=1
  GEN  PC LOC=   50 OP= AIF(1)=.SKIPDS BRANCH
 
WTO          37                  AIF   (N'&SYSLIST LE 1).NPOK
  GEN  PC LOC=   51 OP= PUSHV(&SYSLIST)=''
  GEN  PC LOC=   52 OP= N'('&SYSLIST')=1
  GEN  PC LOC=   53 OP= COMPLE(1,1)=1
  GEN  PC LOC=   54 OP= AIF(1)=.NPOK BRANCH
 
WTO          41                  AIF   ('&MF' NE 'I').MF
  GEN  PC LOC=   55 OP= PUSHV(&MF)='I'
  GEN  PC LOC=   56 OP= COMPNE('I','I')=0
  GEN  PC LOC=   57 OP= AIF(0)=.MF NO BRANCH
WTO          42                  AIF   ('&TEXT' NE '').ERR2
  GEN  PC LOC=   58 OP= PUSHV(&TEXT)=''
  GEN  PC LOC=   59 OP= COMPNE('','')=0
  GEN  PC LOC=   60 OP= AIF(0)=.ERR2 NO BRANCH
WTO          43                  AIF   ('&MSG' EQ '').ERR3
  GEN  PC LOC=   61 OP= PUSHV(&MSG)=''TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF''
  GEN  PC LOC=   62 OP= COMPEQ(''TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF'','')=0
  GEN  PC LOC=   63 OP= AIF(0)=.ERR3 NO BRANCH
WTO          44         &MSGTEXT SETC  '&MSG'
  GEN  PC LOC=   64 OP= PUSHV(&MSG)=''TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF''
  GEN  PC LOC=   65 OP= STORV(&MSGTEXT)=''TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF''
WTO          45                  AIF   ('&MSG'(1,1) EQ '''').WTOMSG
  GEN  PC LOC=   66 OP= PUSHV(&MSG)=''TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF''
  GEN  PC LOC=   67 OP= PUSHA()=1
  GEN  PC LOC=   68 OP= PUSHA()=1
  GEN  PC LOC=   69 OP= SUBSTR(''TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF'',1,1)='''
  GEN  PC LOC=   70 OP= COMPEQ(''',''')=1
  GEN  PC LOC=   71 OP= AIF(1)=.WTOMSG BRANCH
 
WTO          49                  BRAS  1,*+(WTO#&SYSNDX._EOT-*+1)/2*2
WTO          49    (3/49)+         BRAS  1,*+(WTO#0002_EOT-*+1)/2*2
WTO          50                  DC    AL2(WTO#&SYSNDX._EOT-*,0),C&MSGTEXT
WTO          50    (3/50)+         DC    AL2(WTO#0002_EOT-*,0),C'TESTPC1 - TEST PSEUOD CODE FOR SET AND AIF'
WTO          51    (3/51)+WTO#0002_EOT     EQU *
WTO          52    (3/52)+         SVC   35
WTO          53                  MEXIT
 
WTO          53    (3/53)+*MEXIT #=     2 LV= 1 WTO
OPEN CODE    21         &COUNT   SETA  0
  GEN  PC LOC=   72 OP= PUSHA()=0
  GEN  PC LOC=   73 OP= STORV(&COUNT)=0
OPEN CODE    22                  GBLA  &FLAG(3) RPI-1139
OPEN CODE    24         &COUNT   SETA  &COUNT+1
  GEN  PC LOC=   74 OP= PUSHV(&COUNT)=0
ADD 1 = 0 + 1
  GEN  PC LOC=   75 OP= ADD(0,1)=1
  GEN  PC LOC=   76 OP= STORV(&COUNT)=1
OPEN CODE    25                  AIF   (&COUNT GT 2).ENDTEST
  GEN  PC LOC=   77 OP= PUSHV(&COUNT)=1
  GEN  PC LOC=   78 OP= COMPGT(1,2)=0
  GEN  PC LOC=   79 OP= AIF(0)=.ENDTEST NO BRANCH
OPEN CODE    26                  MNOTE 'STARTING PSEUDO CODE TEST PASS &COUNT'
OPEN CODE    26    (1/26)          MNOTE 'STARTING PSEUDO CODE TEST PASS 1'
OPEN CODE    27    (1/27) * TEST SETB TRUE/FALSE SET AND AIF
OPEN CODE    28         &TRUE    SETB  1
  GEN  PC LOC=   80 OP= PUSHA()=1
  GEN  PC LOC=   81 OP= STORV(&TRUE)=1
OPEN CODE    29         &FALSE   SETB  0
  GEN  PC LOC=   82 OP= PUSHA()=0
  GEN  PC LOC=   83 OP= STORV(&FALSE)=0
OPEN CODE    30                  AIF   (&TRUE).TRUE
  GEN  PC LOC=   84 OP= PUSHV(&TRUE)=1
  GEN  PC LOC=   85 OP= AIF(1)=.TRUE BRANCH
 
OPEN CODE    34                  MNOTE 'AIF TRUE OK'
OPEN CODE    34    (1/34)          MNOTE 'AIF TRUE OK'
OPEN CODE    35                  AIF   (&FALSE).FALSE
  GEN  PC LOC=   86 OP= PUSHV(&FALSE)=0
  GEN  PC LOC=   87 OP= AIF(0)=.FALSE NO BRANCH
OPEN CODE    36                  MNOTE 'AIF FALSE OK'
OPEN CODE    36    (1/36)          MNOTE 'AIF FALSE OK'
OPEN CODE    37    (1/37) * TEST COMPLEX AIF
OPEN CODE    38                  MACRO
OPEN CODE    38    (1/38)          MACRO
LOADING INLINE MACRO
OPEN CODE    38    (1/39)          TEST  &MF=I,&SF=I
OPEN CODE    38    (1/40)          AIF   ('&MF' EQ 'L' OR('&SF' EQ 'L' AND '&MF(1)' EQ 'E')).ERR
OPEN CODE    38    (1/41)          MNOTE 'AIF NO BRANCH OK - MF=&MF SF=&SF'
OPEN CODE    38    (1/42)          AGO   .SKPERR
OPEN CODE    38    (1/43) .ERR     MNOTE 12,'AIF BRANCDED TO ERR'
OPEN CODE    38    (1/44)          SUBEXIT RC=12
OPEN CODE    38    (1/45) .SKPERR   ANOP
OPEN CODE    38    (1/46)          MEND
OPEN CODE    47    (1/47) *MCALL #=     3 LV= 1          TEST 
 
TEST         40                  AIF   ('&MF' EQ 'L' OR('&SF' EQ 'L' AND '&MF(1)' EQ 'E')).ERR
  GEN  PC LOC=   88 OP= PUSHV(&MF)='I'
  GEN  PC LOC=   89 OP= COMPEQ('I','L')=0
  GEN  PC LOC=   90 OP= PUSHV(&SF)='I'
  GEN  PC LOC=   91 OP= COMPEQ('I','L')=0
  GEN  PC LOC=   92 OP= PUSHC()=''
  GEN  PC LOC=   93 OP= PUSHV(&MF)='I'
  GEN  PC LOC=   94 OP= PUSHA()=1
  GEN  PC LOC=   95 OP= SUBLST('I',1)='I'
  GEN  PC LOC=   96 OP= CONCAT('','I')='I'
  GEN  PC LOC=   97 OP= COMPEQ('I','E')=0
AND 0 = 0 AND 0
  GEN  PC LOC=   98 OP= AND(0,0)=0
OR 0 = 0 OR 0
  GEN  PC LOC=   99 OP= OR(0,0)=0
  GEN  PC LOC=  100 OP= AIF(0)=.ERR NO BRANCH
TEST         41                  MNOTE 'AIF NO BRANCH OK - MF=&MF SF=&SF'
TEST         41    (1/41)          MNOTE 'AIF NO BRANCH OK - MF=I SF=I'
TEST         42                  AGO   .SKPERR
 
TEST         45         .SKPERR   ANOP
TEST         45    (1/45) *MEXIT #=     3 LV= 1 TEST
OPEN CODE    48    (1/48) * TEST AIFB AND AGOB
OPEN CODE    49                  AIFB  (1 EQ 0).ABORT
  GEN  PC LOC=  101 OP= PUSHA()=1
  GEN  PC LOC=  102 OP= COMPEQ(1,0)=0
  GEN  PC LOC=  103 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    50                  AIFB  (1 EQ 1).AIFBOK
  GEN  PC LOC=  104 OP= PUSHA()=1
  GEN  PC LOC=  105 OP= COMPEQ(1,1)=1
  GEN  PC LOC=  106 OP= AIF(1)=.AIFBOK BRANCH
 
OPEN CODE    53                  AGOB  .AGOBOK
 
OPEN CODE    56    (1/56) * TEST ALTERNATE AIF FORMAT COMPOUND TESTS
OPEN CODE    58                  AIF   ('A' EQ 'B').TOK1,('C' EQ 'C').TOK2
  GEN  PC LOC=  107 OP= PUSHC()='A'
  GEN  PC LOC=  108 OP= COMPEQ('A','B')=0
  GEN  PC LOC=  109 OP= AIF(0)=.TOK1 NO BRANCH
  GEN  PC LOC=  110 OP= PUSHC()='C'
  GEN  PC LOC=  111 OP= COMPEQ('C','C')=1
  GEN  PC LOC=  112 OP= AIF(1)=.TOK2 BRANCH
 
OPEN CODE    61         .TOK2    MNOTE 'TOK2'
OPEN CODE    61    (1/61)          MNOTE 'TOK2'
OPEN CODE    62    (1/62) * TEST COMPUTED AGO
OPEN CODE    63         &I       SETA  2
  GEN  PC LOC=  113 OP= PUSHA()=2
  GEN  PC LOC=  114 OP= STORV(&I)=2
OPEN CODE    64         .T1      AGO   (&I).T11,.T12,.T13
  GEN  PC LOC=  115 OP= PUSHV(&I)=2
  GEN  PC LOC=  116 OP= AGO(2)=.T12 BRANCH
 
OPEN CODE    69         .T12     MNOTE '.T12'
OPEN CODE    69    (1/69)          MNOTE '.T12'
OPEN CODE    70                  AGO   .E1
 
OPEN CODE    73    (1/73) * TEST CREATED VARIABLES
OPEN CODE    74         &(DYNA)  SETA  1
  GEN  PC LOC=  117 OP= PUSHC()='DYNA'
  GEN  PC LOC=  118 OP= PUSHA()=1
  GEN  PC LOC=  119 OP= STORD(&DYNA)=1
OPEN CODE    75                  AIF   (&DYNA NE 1).ABORT
  GEN  PC LOC=  120 OP= PUSHV(&DYNA)=1
  GEN  PC LOC=  121 OP= COMPNE(1,1)=0
  GEN  PC LOC=  122 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    76                  AIF   (&(DYNA) NE 1).ABORT
  GEN  PC LOC=  123 OP= PUSHC()='DYNA'
  GEN  PC LOC=  124 OP= PUSHD(&DYNA)=1
  GEN  PC LOC=  125 OP= COMPNE(1,1)=0
  GEN  PC LOC=  126 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    77         &(DYNB)(2)  SETA  &(DYNA)
  GEN  PC LOC=  127 OP= PUSHC()='DYNB'
  GEN  PC LOC=  128 OP= PUSHA()=2
  GEN  PC LOC=  129 OP= PUSHC()='DYNA'
  GEN  PC LOC=  130 OP= PUSHD(&DYNA)=1
  GEN  PC LOC=  131 OP= STORDS(&DYNB,2)=1
OPEN CODE    78                  AIF   (&DYNB(2) NE 1).ABORT
  GEN  PC LOC=  132 OP= PUSHA()=2
  GEN  PC LOC=  133 OP= PUSHVS(&DYNB,2)=1
  GEN  PC LOC=  134 OP= COMPNE(1,1)=0
  GEN  PC LOC=  135 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    79                  AIF   (&(DYNB)(2) NE 1).ABORT
  GEN  PC LOC=  136 OP= PUSHC()='DYNB'
  GEN  PC LOC=  137 OP= PUSHA()=2
  GEN  PC LOC=  138 OP= PUSHDS(&DYNB,2)=1
  GEN  PC LOC=  139 OP= COMPNE(1,1)=0
  GEN  PC LOC=  140 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    80         &(DYNC)  SETA  &(DYNB)(2)
  GEN  PC LOC=  141 OP= PUSHC()='DYNC'
  GEN  PC LOC=  142 OP= PUSHC()='DYNB'
  GEN  PC LOC=  143 OP= PUSHA()=2
  GEN  PC LOC=  144 OP= PUSHDS(&DYNB,2)=1
  GEN  PC LOC=  145 OP= STORD(&DYNC)=1
OPEN CODE    81                  AIF   (&DYNC NE 1).ABORT
  GEN  PC LOC=  146 OP= PUSHV(&DYNC)=1
  GEN  PC LOC=  147 OP= COMPNE(1,1)=0
  GEN  PC LOC=  148 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    82         &I       SETA  2
  GEN  PC LOC=  149 OP= PUSHA()=2
  GEN  PC LOC=  150 OP= STORV(&I)=2
OPEN CODE    83         &(DYNC)  SETA  &(DYNB)(&I)
  GEN  PC LOC=  151 OP= PUSHC()='DYNC'
  GEN  PC LOC=  152 OP= PUSHC()='DYNB'
  GEN  PC LOC=  153 OP= PUSHV(&I)=2
  GEN  PC LOC=  154 OP= PUSHDS(&DYNB,2)=1
  GEN  PC LOC=  155 OP= STORD(&DYNC)=1
OPEN CODE    84                  AIF   (&DYNC NE 1).ABORT
  GEN  PC LOC=  156 OP= PUSHV(&DYNC)=1
  GEN  PC LOC=  157 OP= COMPNE(1,1)=0
  GEN  PC LOC=  158 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    85    (1/85) * TEST OPT CONCAT
OPEN CODE    86         &_LABEL   SETC  'LABEL'
  GEN  PC LOC=  159 OP= PUSHC()='LABEL'
  GEN  PC LOC=  160 OP= STORV(&_LABEL)='LABEL'
OPEN CODE    87         &_HDRTXT  SETC  'HDRTXT'
  GEN  PC LOC=  161 OP= PUSHC()='HDRTXT'
  GEN  PC LOC=  162 OP= STORV(&_HDRTXT)='HDRTXT'
OPEN CODE    88         &TITLE   SETC  '&_LABEL - company name a.b.c. - &_HDRTXT'
  GEN  PC LOC=  163 OP= PUSHV(&_LABEL)='LABEL'
  GEN  PC LOC=  164 OP= CONCAT('LABEL',' - company name a.b.c. - ')='LABEL - company name a.b.c. - '
  GEN  PC LOC=  165 OP= PUSHV(&_HDRTXT)='HDRTXT'
  GEN  PC LOC=  166 OP= CONCAT('LABEL - company name a.b.c. - ','HDRTXT')='LABEL - company name a.b.c. - HDRTXT'
  GEN  PC LOC=  167 OP= STORV(&TITLE)='LABEL - company name a.b.c. - HDRTXT'
OPEN CODE    89         &FLAGS   SETC  '&FLAG(1)&FLAG(2)&FLAG(3)'
  GEN  PC LOC=  168 OP= PUSHC()=''
  GEN  PC LOC=  169 OP= PUSHA()=1
  GEN  PC LOC=  170 OP= PUSHVS(&FLAG,1)=0
  GEN  PC LOC=  171 OP= CONCAT('','0')='0'
  GEN  PC LOC=  172 OP= PUSHA()=2
  GEN  PC LOC=  173 OP= PUSHVS(&FLAG,2)=0
  GEN  PC LOC=  174 OP= CONCAT('0','0')='00'
  GEN  PC LOC=  175 OP= PUSHA()=3
  GEN  PC LOC=  176 OP= PUSHVS(&FLAG,3)=0
  GEN  PC LOC=  177 OP= CONCAT('00','0')='000'
  GEN  PC LOC=  178 OP= STORV(&FLAGS)='000'
OPEN CODE    90         &A       SETC  'A'
  GEN  PC LOC=  179 OP= PUSHC()='A'
  GEN  PC LOC=  180 OP= STORV(&A)='A'
OPEN CODE    91         &B(2)    SETC 'B2'
  GEN  PC LOC=  181 OP= PUSHA()=2
  GEN  PC LOC=  182 OP= PUSHC()='B2'
  GEN  PC LOC=  183 OP= STORVS(&B,2)='B2'
OPEN CODE    92         &I       SETA  2
  GEN  PC LOC=  184 OP= PUSHA()=2
  GEN  PC LOC=  185 OP= STORV(&I)=2
OPEN CODE    93         &A       SETC  '&A'.'  &B(&I).C'
  GEN  PC LOC=  186 OP= PUSHV(&A)='A'
  GEN  PC LOC=  187 OP= PUSHC()='  '
  GEN  PC LOC=  188 OP= PUSHV(&I)=2
  GEN  PC LOC=  189 OP= PUSHVS(&B,2)='B2'
  GEN  PC LOC=  190 OP= CONCAT('  ','B2')='  B2'
CONCAT A  B2C = A .   B2C
  GEN  PC LOC=  191 OP= CONCAT('  B2','C')='  B2C'
  GEN  PC LOC=  192 OP= CONCAT('A','  B2C')='A  B2C'
  GEN  PC LOC=  193 OP= STORV(&A)='A  B2C'
OPEN CODE    94    (1/94) * TEST OPT ADD
OPEN CODE    95         &X       SETA  X'10'+X'20'
  GEN  PC LOC=  194 OP= PUSHA()=X'10'
ADD 48 = 16 + 32
  GEN  PC LOC=  195 OP= ADD(16,32)=48
  GEN  PC LOC=  196 OP= STORV(&X)=48
OPEN CODE    96    (1/96) * TEST PSEUDO CODE AIF FALSE WITH BAD LABEL OK
OPEN CODE    97                  AIF  (0).NF4
  GEN  PC LOC=  197 OP= PUSHA()=0
  GEN  PC LOC=  198 OP= AIF(0)=.NF4 NO BRANCH
OPEN CODE    98    (1/98) * RETURN TO START OF LOOP
OPEN CODE    99                  AGO   .LOOP
 
OPEN CODE    24         &COUNT   SETA  &COUNT+1
  EXEC PC LOC=   74 OP= INC(&COUNT)=2
OPEN CODE    25                  AIF   (&COUNT GT 2).ENDTEST
  EXEC PC LOC=   77 OP= PUSHV(&COUNT)=2
  EXEC PC LOC=   78 OP= COMPGT(2,2)=0
  EXEC PC LOC=   79 OP= AIF(0)=.ENDTEST NO BRANCH
OPEN CODE    26                  MNOTE 'STARTING PSEUDO CODE TEST PASS &COUNT'
OPEN CODE    26    (1/26)          MNOTE 'STARTING PSEUDO CODE TEST PASS 2'
OPEN CODE    27    (1/27) * TEST SETB TRUE/FALSE SET AND AIF
OPEN CODE    28         &TRUE    SETB  1
  EXEC PC LOC=   80 OP= PUSHA()=1
  EXEC PC LOC=   81 OP= STORV(&TRUE)=1
OPEN CODE    29         &FALSE   SETB  0
  EXEC PC LOC=   82 OP= PUSHA()=0
  EXEC PC LOC=   83 OP= STORV(&FALSE)=0
OPEN CODE    30                  AIF   (&TRUE).TRUE
  EXEC PC LOC=   84 OP= PUSHV(&TRUE)=1
  EXEC PC LOC=   85 OP= AIF(1)=.TRUE BRANCH
 
OPEN CODE    34                  MNOTE 'AIF TRUE OK'
OPEN CODE    34    (1/34)          MNOTE 'AIF TRUE OK'
OPEN CODE    35                  AIF   (&FALSE).FALSE
  EXEC PC LOC=   86 OP= PUSHV(&FALSE)=0
  EXEC PC LOC=   87 OP= AIF(0)=.FALSE NO BRANCH
OPEN CODE    36                  MNOTE 'AIF FALSE OK'
OPEN CODE    36    (1/36)          MNOTE 'AIF FALSE OK'
OPEN CODE    37    (1/37) * TEST COMPLEX AIF
OPEN CODE    38                  MACRO
OPEN CODE    38    (1/38)          MACRO
LOADING INLINE MACRO
OPEN CODE    38    (1/39)          TEST  &MF=I,&SF=I
OPEN CODE    38    (1/40)          AIF   ('&MF' EQ 'L' OR('&SF' EQ 'L' AND '&MF(1)' EQ 'E')).ERR
OPEN CODE    38    (1/41)          MNOTE 'AIF NO BRANCH OK - MF=&MF SF=&SF'
OPEN CODE    38    (1/42)          AGO   .SKPERR
OPEN CODE    38    (1/43) .ERR     MNOTE 12,'AIF BRANCDED TO ERR'
OPEN CODE    38    (1/44)          SUBEXIT RC=12
OPEN CODE    38    (1/45) .SKPERR   ANOP
OPEN CODE    38    (1/46)          MEND
OPEN CODE    47    (1/47) *MCALL #=     4 LV= 1          TEST 
 
TEST         40                  AIF   ('&MF' EQ 'L' OR('&SF' EQ 'L' AND '&MF(1)' EQ 'E')).ERR
  EXEC PC LOC=   88 OP= PUSHV(&MF)='I'
  EXEC PC LOC=   89 OP= COMPEQ('I','L')=0
  EXEC PC LOC=   90 OP= PUSHV(&SF)='I'
  EXEC PC LOC=   91 OP= COMPEQ('I','L')=0
  EXEC PC LOC=   92 OP= PUSHC()=''
  EXEC PC LOC=   93 OP= PUSHV(&MF)='I'
  EXEC PC LOC=   94 OP= PUSHA()=1
  EXEC PC LOC=   95 OP= SUBLST('I',1)='I'
  EXEC PC LOC=   96 OP= CONCAT('','I')='I'
  EXEC PC LOC=   97 OP= COMPEQ('I','E')=0
AND 0 = 0 AND 0
  EXEC PC LOC=   98 OP= AND(0,0)=0
OR 0 = 0 OR 0
  EXEC PC LOC=   99 OP= OR(0,0)=0
  EXEC PC LOC=  100 OP= AIF(0)=.ERR NO BRANCH
TEST         41                  MNOTE 'AIF NO BRANCH OK - MF=&MF SF=&SF'
TEST         41    (1/41)          MNOTE 'AIF NO BRANCH OK - MF=I SF=I'
TEST         42                  AGO   .SKPERR
 
TEST         45         .SKPERR   ANOP
TEST         45    (1/45) *MEXIT #=     4 LV= 1 TEST
OPEN CODE    48    (1/48) * TEST AIFB AND AGOB
OPEN CODE    49                  AIFB  (1 EQ 0).ABORT
  EXEC PC LOC=  101 OP= PUSHA()=1
  EXEC PC LOC=  102 OP= COMPEQ(1,0)=0
  EXEC PC LOC=  103 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    50                  AIFB  (1 EQ 1).AIFBOK
  EXEC PC LOC=  104 OP= PUSHA()=1
  EXEC PC LOC=  105 OP= COMPEQ(1,1)=1
  EXEC PC LOC=  106 OP= AIF(1)=.AIFBOK BRANCH
 
OPEN CODE    53                  AGOB  .AGOBOK
 
OPEN CODE    56    (1/56) * TEST ALTERNATE AIF FORMAT COMPOUND TESTS
OPEN CODE    58                  AIF   ('A' EQ 'B').TOK1,('C' EQ 'C').TOK2
  EXEC PC LOC=  107 OP= PUSHC()='A'
  EXEC PC LOC=  108 OP= COMPEQ('A','B')=0
  EXEC PC LOC=  109 OP= AIF(0)=.TOK1 NO BRANCH
  EXEC PC LOC=  110 OP= PUSHC()='C'
  EXEC PC LOC=  111 OP= COMPEQ('C','C')=1
  EXEC PC LOC=  112 OP= AIF(1)=.TOK2 BRANCH
 
OPEN CODE    61         .TOK2    MNOTE 'TOK2'
OPEN CODE    61    (1/61)          MNOTE 'TOK2'
OPEN CODE    62    (1/62) * TEST COMPUTED AGO
OPEN CODE    63         &I       SETA  2
  EXEC PC LOC=  113 OP= PUSHA()=2
  EXEC PC LOC=  114 OP= STORV(&I)=2
OPEN CODE    64         .T1      AGO   (&I).T11,.T12,.T13
  EXEC PC LOC=  115 OP= PUSHV(&I)=2
  EXEC PC LOC=  116 OP= AGO(2)=.T12 BRANCH
 
OPEN CODE    69         .T12     MNOTE '.T12'
OPEN CODE    69    (1/69)          MNOTE '.T12'
OPEN CODE    70                  AGO   .E1
 
OPEN CODE    73    (1/73) * TEST CREATED VARIABLES
OPEN CODE    74         &(DYNA)  SETA  1
  EXEC PC LOC=  117 OP= PUSHC()='DYNA'
  EXEC PC LOC=  118 OP= PUSHA()=1
  EXEC PC LOC=  119 OP= STORD(&DYNA)=1
OPEN CODE    75                  AIF   (&DYNA NE 1).ABORT
  EXEC PC LOC=  120 OP= PUSHV(&DYNA)=1
  EXEC PC LOC=  121 OP= COMPNE(1,1)=0
  EXEC PC LOC=  122 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    76                  AIF   (&(DYNA) NE 1).ABORT
  EXEC PC LOC=  123 OP= PUSHC()='DYNA'
  EXEC PC LOC=  124 OP= PUSHD(&DYNA)=1
  EXEC PC LOC=  125 OP= COMPNE(1,1)=0
  EXEC PC LOC=  126 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    77         &(DYNB)(2)  SETA  &(DYNA)
  EXEC PC LOC=  127 OP= PUSHC()='DYNB'
  EXEC PC LOC=  128 OP= PUSHA()=2
  EXEC PC LOC=  129 OP= PUSHC()='DYNA'
  EXEC PC LOC=  130 OP= PUSHD(&DYNA)=1
  EXEC PC LOC=  131 OP= STORDS(&DYNB,2)=1
OPEN CODE    78                  AIF   (&DYNB(2) NE 1).ABORT
  EXEC PC LOC=  132 OP= PUSHA()=2
  EXEC PC LOC=  133 OP= PUSHVS(&DYNB,2)=1
  EXEC PC LOC=  134 OP= COMPNE(1,1)=0
  EXEC PC LOC=  135 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    79                  AIF   (&(DYNB)(2) NE 1).ABORT
  EXEC PC LOC=  136 OP= PUSHC()='DYNB'
  EXEC PC LOC=  137 OP= PUSHA()=2
  EXEC PC LOC=  138 OP= PUSHDS(&DYNB,2)=1
  EXEC PC LOC=  139 OP= COMPNE(1,1)=0
  EXEC PC LOC=  140 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    80         &(DYNC)  SETA  &(DYNB)(2)
  EXEC PC LOC=  141 OP= PUSHC()='DYNC'
  EXEC PC LOC=  142 OP= PUSHC()='DYNB'
  EXEC PC LOC=  143 OP= PUSHA()=2
  EXEC PC LOC=  144 OP= PUSHDS(&DYNB,2)=1
  EXEC PC LOC=  145 OP= STORD(&DYNC)=1
OPEN CODE    81                  AIF   (&DYNC NE 1).ABORT
  EXEC PC LOC=  146 OP= PUSHV(&DYNC)=1
  EXEC PC LOC=  147 OP= COMPNE(1,1)=0
  EXEC PC LOC=  148 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    82         &I       SETA  2
  EXEC PC LOC=  149 OP= PUSHA()=2
  EXEC PC LOC=  150 OP= STORV(&I)=2
OPEN CODE    83         &(DYNC)  SETA  &(DYNB)(&I)
  EXEC PC LOC=  151 OP= PUSHC()='DYNC'
  EXEC PC LOC=  152 OP= PUSHC()='DYNB'
  EXEC PC LOC=  153 OP= PUSHV(&I)=2
  EXEC PC LOC=  154 OP= PUSHDS(&DYNB,2)=1
  EXEC PC LOC=  155 OP= STORD(&DYNC)=1
OPEN CODE    84                  AIF   (&DYNC NE 1).ABORT
  EXEC PC LOC=  156 OP= PUSHV(&DYNC)=1
  EXEC PC LOC=  157 OP= COMPNE(1,1)=0
  EXEC PC LOC=  158 OP= AIF(0)=.ABORT NO BRANCH
OPEN CODE    85    (1/85) * TEST OPT CONCAT
OPEN CODE    86         &_LABEL   SETC  'LABEL'
  EXEC PC LOC=  159 OP= PUSHC()='LABEL'
  EXEC PC LOC=  160 OP= STORV(&_LABEL)='LABEL'
OPEN CODE    87         &_HDRTXT  SETC  'HDRTXT'
  EXEC PC LOC=  161 OP= PUSHC()='HDRTXT'
  EXEC PC LOC=  162 OP= STORV(&_HDRTXT)='HDRTXT'
OPEN CODE    88         &TITLE   SETC  '&_LABEL - company name a.b.c. - &_HDRTXT'
  EXEC PC LOC=  163 OP= PUSHV(&_LABEL)='LABEL'
  EXEC PC LOC=  164 OP= CONCAT('LABEL',' - company name a.b.c. - ')='LABEL - company name a.b.c. - '
  EXEC PC LOC=  165 OP= PUSHV(&_HDRTXT)='HDRTXT'
  EXEC PC LOC=  166 OP= CONCAT('LABEL - company name a.b.c. - ','HDRTXT')='LABEL - company name a.b.c. - HDRTXT'
  EXEC PC LOC=  167 OP= STORV(&TITLE)='LABEL - company name a.b.c. - HDRTXT'
OPEN CODE    89         &FLAGS   SETC  '&FLAG(1)&FLAG(2)&FLAG(3)'
  EXEC PC LOC=  168 OP= PUSHC()=''
  EXEC PC LOC=  169 OP= PUSHA()=1
  EXEC PC LOC=  170 OP= PUSHVS(&FLAG,1)=0
  EXEC PC LOC=  171 OP= CONCAT('','0')='0'
  EXEC PC LOC=  172 OP= PUSHA()=2
  EXEC PC LOC=  173 OP= PUSHVS(&FLAG,2)=0
  EXEC PC LOC=  174 OP= CONCAT('0','0')='00'
  EXEC PC LOC=  175 OP= PUSHA()=3
  EXEC PC LOC=  176 OP= PUSHVS(&FLAG,3)=0
  EXEC PC LOC=  177 OP= CONCAT('00','0')='000'
  EXEC PC LOC=  178 OP= STORV(&FLAGS)='000'
OPEN CODE    90         &A       SETC  'A'
  EXEC PC LOC=  179 OP= PUSHC()='A'
  EXEC PC LOC=  180 OP= STORV(&A)='A'
OPEN CODE    91         &B(2)    SETC 'B2'
  EXEC PC LOC=  181 OP= PUSHA()=2
  EXEC PC LOC=  182 OP= PUSHC()='B2'
  EXEC PC LOC=  183 OP= STORVS(&B,2)='B2'
OPEN CODE    92         &I       SETA  2
  EXEC PC LOC=  184 OP= PUSHA()=2
  EXEC PC LOC=  185 OP= STORV(&I)=2
OPEN CODE    93         &A       SETC  '&A'.'  &B(&I).C'
  EXEC PC LOC=  186 OP= PUSHV(&A)='A'
  EXEC PC LOC=  187 OP= PUSHC()='  '
  EXEC PC LOC=  188 OP= PUSHV(&I)=2
  EXEC PC LOC=  189 OP= PUSHVS(&B,2)='B2'
  EXEC PC LOC=  190 OP= CONCAT('  ','B2')='  B2'
  EXEC PC LOC=  191 OP= CONCAT('  B2','C')='  B2C'
  EXEC PC LOC=  192 OP= CONCAT('A','  B2C')='A  B2C'
  EXEC PC LOC=  193 OP= STORV(&A)='A  B2C'
OPEN CODE    94    (1/94) * TEST OPT ADD
OPEN CODE    95         &X       SETA  X'10'+X'20'
  EXEC PC LOC=  194 OP= PUSHA()=X'10'
ADD 48 = 16 + 32
  EXEC PC LOC=  195 OP= ADD(16,32)=48
  EXEC PC LOC=  196 OP= STORV(&X)=48
OPEN CODE    96    (1/96) * TEST PSEUDO CODE AIF FALSE WITH BAD LABEL OK
OPEN CODE    97                  AIF  (0).NF4
  EXEC PC LOC=  197 OP= PUSHA()=0
  EXEC PC LOC=  198 OP= AIF(0)=.NF4 NO BRANCH
OPEN CODE    98    (1/98) * RETURN TO START OF LOOP
OPEN CODE    99                  AGO   .LOOP
 
OPEN CODE    24         &COUNT   SETA  &COUNT+1
  EXEC PC LOC=   74 OP= INC(&COUNT)=3
OPEN CODE    25                  AIF   (&COUNT GT 2).ENDTEST
  EXEC PC LOC=   77 OP= PUSHV(&COUNT)=3
  EXEC PC LOC=   78 OP= COMPGT(3,2)=1
  EXEC PC LOC=   79 OP= AIF(1)=.ENDTEST BRANCH
 
OPEN CODE   105   (1/105) *MCALL #=     5 LV= 1          WTO   'TESTPC1 - ENDED OK'
 
WTO          34                  AIF   ('&N' EQ '').SKIPDS
  EXEC PC LOC=   48 OP= PUSHV(&N)=''
  EXEC PC LOC=   49 OP= COMPEQ('','')=1
  EXEC PC LOC=   50 OP= AIF(1)=.SKIPDS BRANCH
 
WTO          37                  AIF   (N'&SYSLIST LE 1).NPOK
  EXEC PC LOC=   51 OP= PUSHV(&SYSLIST)=''
  EXEC PC LOC=   52 OP= N'('')=1
  EXEC PC LOC=   53 OP= COMPLE(1,1)=1
  EXEC PC LOC=   54 OP= AIF(1)=.NPOK BRANCH
 
WTO          41                  AIF   ('&MF' NE 'I').MF
  EXEC PC LOC=   55 OP= PUSHV(&MF)='I'
  EXEC PC LOC=   56 OP= COMPNE('I','I')=0
  EXEC PC LOC=   57 OP= AIF(0)=.MF NO BRANCH
WTO          42                  AIF   ('&TEXT' NE '').ERR2
  EXEC PC LOC=   58 OP= PUSHV(&TEXT)=''
  EXEC PC LOC=   59 OP= COMPNE('','')=0
  EXEC PC LOC=   60 OP= AIF(0)=.ERR2 NO BRANCH
WTO          43                  AIF   ('&MSG' EQ '').ERR3
  EXEC PC LOC=   61 OP= PUSHV(&MSG)=''TESTPC1 - ENDED OK''
  EXEC PC LOC=   62 OP= COMPEQ(''TESTPC1 - ENDED OK'','')=0
  EXEC PC LOC=   63 OP= AIF(0)=.ERR3 NO BRANCH
WTO          44         &MSGTEXT SETC  '&MSG'
  EXEC PC LOC=   64 OP= PUSHV(&MSG)=''TESTPC1 - ENDED OK''
  EXEC PC LOC=   65 OP= STORV(&MSGTEXT)=''TESTPC1 - ENDED OK''
WTO          45                  AIF   ('&MSG'(1,1) EQ '''').WTOMSG
  EXEC PC LOC=   66 OP= PUSHV(&MSG)=''TESTPC1 - ENDED OK''
  EXEC PC LOC=   67 OP= PUSHA()=1
  EXEC PC LOC=   68 OP= PUSHA()=1
  EXEC PC LOC=   69 OP= SUBSTR(''TESTPC1 - ENDED OK'',1,1)='''
  EXEC PC LOC=   70 OP= COMPEQ(''',''')=1
  EXEC PC LOC=   71 OP= AIF(1)=.WTOMSG BRANCH
 
WTO          49                  BRAS  1,*+(WTO#&SYSNDX._EOT-*+1)/2*2
WTO          49    (3/49)+         BRAS  1,*+(WTO#0005_EOT-*+1)/2*2
WTO          50                  DC    AL2(WTO#&SYSNDX._EOT-*,0),C&MSGTEXT
WTO          50    (3/50)+         DC    AL2(WTO#0005_EOT-*,0),C'TESTPC1 - ENDED OK'
WTO          51    (3/51)+WTO#0005_EOT     EQU *
WTO          52    (3/52)+         SVC   35
WTO          53                  MEXIT
 
WTO          53    (3/53)+*MEXIT #=     5 LV= 1 WTO
OPEN CODE   106   (1/106) *MCALL #=     6 LV= 1          SUBEXIT 
LOADING FILE C:\Users\Achim\GitHub\z390\mac\SUBEXIT.MAC
 
SUBEXIT      28                  AIF   ('&NAME' EQ '').SKIPDS
  GEN  PC LOC=   75 OP= PUSHV(&NAME)=''
  GEN  PC LOC=   76 OP= COMPEQ('','')=1
  GEN  PC LOC=  199 OP= AIF(1)=.SKIPDS BRANCH
 
SUBEXIT      31                  GBLB  &RENTOPT
SUBEXIT      32                  AIF   ('&RC'(1,1) EQ '(').RCREG
  GEN  PC LOC=  200 OP= PUSHV(&RC)='0'
  GEN  PC LOC=  201 OP= PUSHA()=1
  GEN  PC LOC=  202 OP= PUSHA()=1
  GEN  PC LOC=  203 OP= SUBSTR('0',1,1)='0'
  GEN  PC LOC=  204 OP= COMPEQ('0','(')=0
  GEN  PC LOC=  205 OP= AIF(0)=.RCREG NO BRANCH
SUBEXIT      33                  LA    15,&RC
SUBEXIT      33    (4/33)+         LA    15,0
SUBEXIT      34                  AGO   .CHKRENT
 
SUBEXIT      38                  AIF   (&RENTOPT EQ 0).NORENT
  GEN  PC LOC=  206 OP= PUSHV(&RENTOPT)=0
  GEN  PC LOC=  207 OP= COMPEQ(0,0)=1
  GEN  PC LOC=  208 OP= AIF(1)=.NORENT BRANCH
 
SUBEXIT      50    (4/50)+         L     13,4(,13)
SUBEXIT      51    (4/51)+         L     14,12(,13)
SUBEXIT      52    (4/52)+         LM    2,12,28(13)
SUBEXIT      53    (4/53)+         BR    14
SUBEXIT      53    (4/53)+*MEXIT #=     6 LV= 1 SUBEXIT
OPEN CODE   107   (1/107)          END 
MZ390I total mnote warnings  = 0
MZ390I total mnote errors    = 0
MZ390I max   mnote level     = 0
MZ390I total mz390 errors    = 0
MZ390I total az390 errors    = 0
TESTPC1   MZ390 ENDED RC= 0 IO=1424
